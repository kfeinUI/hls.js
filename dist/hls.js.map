{
  "version": 3,
  "sources": [
    "node_modules\\browser-pack\\_prelude.js",
    "node_modules\\events\\events.js",
    "node_modules\\webworkify\\index.js",
    "src\\controller\\abr-controller.js",
    "src\\controller\\level-controller.js",
    "src\\controller\\mse-media-controller.js",
    "src\\controller\\timeline-controller.js",
    "src\\crypt\\aes.js",
    "src\\crypt\\aes128-decrypter.js",
    "src\\crypt\\decrypter.js",
    "src\\demux\\aacdemuxer.js",
    "src\\demux\\adts.js",
    "src\\demux\\demuxer-inline.js",
    "src\\demux\\demuxer-worker.js",
    "src\\demux\\demuxer.js",
    "src\\demux\\exp-golomb.js",
    "src\\demux\\id3.js",
    "src\\demux\\tsdemuxer.js",
    "src\\errors.js",
    "src\\event-handler.js",
    "src\\events.js",
    "src\\helper\\level-helper.js",
    "src\\hls.js",
    "src\\loader\\fragment-loader.js",
    "src\\loader\\key-loader.js",
    "src\\loader\\playlist-loader.js",
    "src\\remux\\mp4-generator.js",
    "src\\remux\\mp4-remuxer.js",
    "src\\utils\\attr-list.js",
    "src\\utils\\binary-search.js",
    "src\\utils\\cea-708-interpreter.js",
    "src\\utils\\logger.js",
    "src\\utils\\url.js",
    "src\\utils\\xhr-loader.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;sBC7DkB,WAAW;;;;4BACJ,kBAAkB;;;;IAErC,aAAa;YAAb,aAAa;;AAEN,WAFP,aAAa,CAEL,GAAG,EAAE;0BAFb,aAAa;;AAGf,+BAHE,aAAa,6CAGT,GAAG,EAAE,oBAAM,kBAAkB,EAAE;AACrC,QAAI,CAAC,cAAc,GAAG,CAAC,CAAC;AACxB,QAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAC5B,QAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;GAC1B;;eAPG,aAAa;;WASV,mBAAG;AACR,gCAAa,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3C;;;WAEiB,4BAAC,IAAI,EAAE;AACvB,UAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACvB,UAAI,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;AAC/B,YAAI,CAAC,iBAAiB,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,Q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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n",
    "var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn) {\n    var keys = [];\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            Function(['require','module','exports'], '(' + fn + ')(self)'),\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        Function(['require'], (\n            // try to call default if defined to also support babel esmodule\n            // exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);'\n        )),\n        scache\n    ];\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(sources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    return new Worker(URL.createObjectURL(\n        new Blob([src], { type: 'text/javascript' })\n    ));\n};\n",
    "/*\r\n * simple ABR Controller\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\n\r\nclass AbrController extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls, Event.FRAG_LOAD_PROGRESS);\r\n    this.lastfetchlevel = 0;\r\n    this._autoLevelCapping = -1;\r\n    this._nextAutoLevel = -1;\r\n  }\r\n\r\n  destroy() {\r\n    EventHandler.prototype.destroy.call(this);\r\n  }\r\n\r\n  onFragLoadProgress(data) {\r\n    var stats = data.stats;\r\n    if (stats.aborted === undefined) {\r\n      this.lastfetchduration = (performance.now() - stats.trequest) / 1000;\r\n      this.lastfetchlevel = data.frag.level;\r\n      this.lastbw = (stats.loaded * 8) / this.lastfetchduration;\r\n      //console.log(`fetchDuration:${this.lastfetchduration},bw:${(this.lastbw/1000).toFixed(0)}/${stats.aborted}`);\r\n    }\r\n  }\r\n\r\n  /** Return the capping/max level value that could be used by automatic level selection algorithm **/\r\n  get autoLevelCapping() {\r\n    return this._autoLevelCapping;\r\n  }\r\n\r\n  /** set the capping/max level value that could be used by automatic level selection algorithm **/\r\n  set autoLevelCapping(newLevel) {\r\n    this._autoLevelCapping = newLevel;\r\n  }\r\n\r\n  get nextAutoLevel() {\r\n    var lastbw = this.lastbw, hls = this.hls,adjustedbw, i, maxAutoLevel;\r\n    if (this._autoLevelCapping === -1) {\r\n      maxAutoLevel = hls.levels.length - 1;\r\n    } else {\r\n      maxAutoLevel = this._autoLevelCapping;\r\n    }\r\n\r\n    if (this._nextAutoLevel !== -1) {\r\n      var nextLevel = Math.min(this._nextAutoLevel,maxAutoLevel);\r\n      if (nextLevel === this.lastfetchlevel) {\r\n        this._nextAutoLevel = -1;\r\n      } else {\r\n        return nextLevel;\r\n      }\r\n    }\r\n\r\n    // follow algorithm captured from stagefright :\r\n    // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp\r\n    // Pick the highest bandwidth stream below or equal to estimated bandwidth.\r\n    for (i = 0; i <= maxAutoLevel; i++) {\r\n    // consider only 80% of the available bandwidth, but if we are switching up,\r\n    // be even more conservative (70%) to avoid overestimating and immediately\r\n    // switching back.\r\n      if (i <= this.lastfetchlevel) {\r\n        adjustedbw = 0.8 * lastbw;\r\n      } else {\r\n        adjustedbw = 0.7 * lastbw;\r\n      }\r\n      if (adjustedbw < hls.levels[i].bitrate) {\r\n        return Math.max(0, i - 1);\r\n      }\r\n    }\r\n    return i - 1;\r\n  }\r\n\r\n  set nextAutoLevel(nextLevel) {\r\n    this._nextAutoLevel = nextLevel;\r\n  }\r\n}\r\n\r\nexport default AbrController;\r\n\r\n",
    "/*\r\n * Level Controller\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport {logger} from '../utils/logger';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\nclass LevelController extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls,\r\n      Event.MANIFEST_LOADED,\r\n      Event.LEVEL_LOADED,\r\n      Event.ERROR);\r\n    this.ontick = this.tick.bind(this);\r\n    this._manualLevel = this._autoLevelCapping = -1;\r\n  }\r\n\r\n  destroy() {\r\n    if (this.timer) {\r\n     clearInterval(this.timer);\r\n    }\r\n    this._manualLevel = -1;\r\n  }\r\n\r\n  onManifestLoaded(data) {\r\n    var levels0 = [], levels = [], bitrateStart, i, bitrateSet = {}, videoCodecFound = false, audioCodecFound = false, hls = this.hls;\r\n\r\n    // regroup redundant level together\r\n    data.levels.forEach(level => {\r\n      if(level.videoCodec) {\r\n        videoCodecFound = true;\r\n      }\r\n      if(level.audioCodec) {\r\n        audioCodecFound = true;\r\n      }\r\n      var redundantLevelId = bitrateSet[level.bitrate];\r\n      if (redundantLevelId === undefined) {\r\n        bitrateSet[level.bitrate] = levels0.length;\r\n        level.url = [level.url];\r\n        level.urlId = 0;\r\n        levels0.push(level);\r\n      } else {\r\n        levels0[redundantLevelId].url.push(level.url);\r\n      }\r\n    });\r\n\r\n    // remove audio-only level if we also have levels with audio+video codecs signalled\r\n    if(videoCodecFound && audioCodecFound) {\r\n      levels0.forEach(level => {\r\n        if(level.videoCodec) {\r\n          levels.push(level);\r\n        }\r\n      });\r\n    } else {\r\n      levels = levels0;\r\n    }\r\n\r\n    // only keep level with supported audio/video codecs\r\n    levels = levels.filter(function(level) {\r\n      var checkSupportedAudio = function(codec) { return MediaSource.isTypeSupported(`audio/mp4;codecs=${codec}`);};\r\n      var checkSupportedVideo = function(codec) { return MediaSource.isTypeSupported(`video/mp4;codecs=${codec}`);};\r\n      var audioCodec = level.audioCodec, videoCodec = level.videoCodec;\r\n\r\n      return (!audioCodec || checkSupportedAudio(audioCodec)) &&\r\n             (!videoCodec || checkSupportedVideo(videoCodec));\r\n    });\r\n\r\n    if(levels.length) {\r\n      // start bitrate is the first bitrate of the manifest\r\n      bitrateStart = levels[0].bitrate;\r\n      // sort level on bitrate\r\n      levels.sort(function (a, b) {\r\n        return a.bitrate - b.bitrate;\r\n      });\r\n      this._levels = levels;\r\n      // find index of first level in sorted levels\r\n      for (i = 0; i < levels.length; i++) {\r\n        if (levels[i].bitrate === bitrateStart) {\r\n          this._firstLevel = i;\r\n          logger.log(`manifest loaded,${levels.length} level(s) found, first bitrate:${bitrateStart}`);\r\n          break;\r\n        }\r\n      }\r\n      hls.trigger(Event.MANIFEST_PARSED, {levels: this._levels, firstLevel: this._firstLevel, stats: data.stats});\r\n    } else {\r\n      hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: hls.url, reason: 'no compatible level found in manifest'});\r\n    }\r\n    return;\r\n  }\r\n\r\n  get levels() {\r\n    return this._levels;\r\n  }\r\n\r\n  get level() {\r\n    return this._level;\r\n  }\r\n\r\n  set level(newLevel) {\r\n    if (this._level !== newLevel || this._levels[newLevel].details === undefined) {\r\n      this.setLevelInternal(newLevel);\r\n    }\r\n  }\r\n\r\n setLevelInternal(newLevel) {\r\n    // check if level idx is valid\r\n    if (newLevel >= 0 && newLevel < this._levels.length) {\r\n      // stopping live reloading timer if any\r\n      if (this.timer) {\r\n       clearInterval(this.timer);\r\n       this.timer = null;\r\n      }\r\n      this._level = newLevel;\r\n      logger.log(`switching to level ${newLevel}`);\r\n      this.hls.trigger(Event.LEVEL_SWITCH, {level: newLevel});\r\n      var level = this._levels[newLevel];\r\n       // check if we need to load playlist for this level\r\n      if (level.details === undefined || level.details.live === true) {\r\n        // level not retrieved yet, or live playlist we need to (re)load it\r\n        logger.log(`(re)loading playlist for level ${newLevel}`);\r\n        var urlId = level.urlId;\r\n        this.hls.trigger(Event.LEVEL_LOADING, {url: level.url[urlId], level: newLevel, id: urlId});\r\n      }\r\n    } else {\r\n      // invalid level id given, trigger error\r\n      this.hls.trigger(Event.ERROR, {type : ErrorTypes.OTHER_ERROR, details: ErrorDetails.LEVEL_SWITCH_ERROR, level: newLevel, fatal: false, reason: 'invalid level idx'});\r\n    }\r\n }\r\n\r\n  get manualLevel() {\r\n    return this._manualLevel;\r\n  }\r\n\r\n  set manualLevel(newLevel) {\r\n    this._manualLevel = newLevel;\r\n    if (newLevel !== -1) {\r\n      this.level = newLevel;\r\n    }\r\n  }\r\n\r\n  get firstLevel() {\r\n    return this._firstLevel;\r\n  }\r\n\r\n  set firstLevel(newLevel) {\r\n    this._firstLevel = newLevel;\r\n  }\r\n\r\n  get startLevel() {\r\n    if (this._startLevel === undefined) {\r\n      return this._firstLevel;\r\n    } else {\r\n      return this._startLevel;\r\n    }\r\n  }\r\n\r\n  set startLevel(newLevel) {\r\n    this._startLevel = newLevel;\r\n  }\r\n\r\n  onError(data) {\r\n    if(data.fatal) {\r\n      return;\r\n    }\r\n\r\n    var details = data.details, hls = this.hls, levelId, level;\r\n    // try to recover not fatal errors\r\n    switch(details) {\r\n      case ErrorDetails.FRAG_LOAD_ERROR:\r\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\r\n      case ErrorDetails.FRAG_LOOP_LOADING_ERROR:\r\n      case ErrorDetails.KEY_LOAD_ERROR:\r\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\r\n         levelId = data.frag.level;\r\n         break;\r\n      case ErrorDetails.LEVEL_LOAD_ERROR:\r\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\r\n        levelId = data.level;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    /* try to switch to a redundant stream if any available.\r\n     * if no redundant stream available, emergency switch down (if in auto mode and current level not 0)\r\n     * otherwise, we cannot recover this network error ...\r\n     * don't raise FRAG_LOAD_ERROR and FRAG_LOAD_TIMEOUT as fatal, as it is handled by mediaController\r\n     */\r\n    if (levelId !== undefined) {\r\n      level = this._levels[levelId];\r\n      if (level.urlId < (level.url.length - 1)) {\r\n        level.urlId++;\r\n        level.details = undefined;\r\n        logger.warn(`level controller,${details} for level ${levelId}: switching to redundant stream id ${level.urlId}`);\r\n      } else {\r\n        // we could try to recover if in auto mode and current level not lowest level (0)\r\n        let recoverable = ((this._manualLevel === -1) && levelId);\r\n        if (recoverable) {\r\n          logger.warn(`level controller,${details}: emergency switch-down for next fragment`);\r\n          hls.abrController.nextAutoLevel = 0;\r\n        } else if(level && level.details && level.details.live) {\r\n          logger.warn(`level controller,${details} on live stream, discard`);\r\n        // FRAG_LOAD_ERROR and FRAG_LOAD_TIMEOUT are handled by mediaController\r\n        } else if (details !== ErrorDetails.FRAG_LOAD_ERROR && details !== ErrorDetails.FRAG_LOAD_TIMEOUT) {\r\n          logger.error(`cannot recover ${details} error`);\r\n          this._level = undefined;\r\n          // stopping live reloading timer if any\r\n          if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n          }\r\n          // redispatch same error but with fatal set to true\r\n          data.fatal = true;\r\n          hls.trigger(event, data);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onLevelLoaded(data) {\r\n    // check if current playlist is a live playlist\r\n    if (data.details.live && !this.timer) {\r\n      // if live playlist we will have to reload it periodically\r\n      // set reload period to playlist target duration\r\n      this.timer = setInterval(this.ontick, 1000 * data.details.targetduration);\r\n    }\r\n    if (!data.details.live && this.timer) {\r\n      // playlist is not live and timer is armed : stopping it\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    var levelId = this._level;\r\n    if (levelId !== undefined) {\r\n      var level = this._levels[levelId], urlId = level.urlId;\r\n      this.hls.trigger(Event.LEVEL_LOADING, {url: level.url[urlId], level: levelId, id: urlId});\r\n    }\r\n  }\r\n\r\n  nextLoadLevel() {\r\n    if (this._manualLevel !== -1) {\r\n      return this._manualLevel;\r\n    } else {\r\n     return this.hls.abrController.nextAutoLevel;\r\n    }\r\n  }\r\n}\r\n\r\nexport default LevelController;\r\n\r\n",
    "/*\r\n * MSE Media Controller\r\n*/\r\n\r\nimport Demuxer from '../demux/demuxer';\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport {logger} from '../utils/logger';\r\nimport BinarySearch from '../utils/binary-search';\r\nimport LevelHelper from '../helper/level-helper';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\nconst State = {\r\n  ERROR : -2,\r\n  STARTING : -1,\r\n  IDLE : 0,\r\n  KEY_LOADING : 1,\r\n  FRAG_LOADING : 2,\r\n  FRAG_LOADING_WAITING_RETRY : 3,\r\n  WAITING_LEVEL : 4,\r\n  PARSING : 5,\r\n  PARSED : 6,\r\n  APPENDING : 7,\r\n  BUFFER_FLUSHING : 8,\r\n  ENDED : 9\r\n};\r\n\r\nclass MSEMediaController extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls, Event.MEDIA_ATTACHING,\r\n      Event.MEDIA_DETACHING,\r\n      Event.MANIFEST_PARSED,\r\n      Event.LEVEL_LOADED,\r\n      Event.KEY_LOADED,\r\n      Event.FRAG_LOADED,\r\n      Event.FRAG_PARSING_INIT_SEGMENT,\r\n      Event.FRAG_PARSING_DATA,\r\n      Event.FRAG_PARSED,\r\n      Event.ERROR);\r\n    this.config = hls.config;\r\n    this.audioCodecSwap = false;\r\n    this.ticks = 0;\r\n    // Source Buffer listeners\r\n    this.onsbue = this.onSBUpdateEnd.bind(this);\r\n    this.onsbe  = this.onSBUpdateError.bind(this);\r\n    this.ontick = this.tick.bind(this);\r\n  }\r\n\r\n  destroy() {\r\n    this.stop();\r\n    EventHandler.prototype.destroy.call(this);\r\n    this.state = State.IDLE;\r\n  }\r\n\r\n  startLoad() {\r\n    if (this.levels && this.media) {\r\n      this.startInternal();\r\n      if (this.lastCurrentTime) {\r\n        logger.log(`seeking @ ${this.lastCurrentTime}`);\r\n        if (!this.lastPaused) {\r\n          logger.log('resuming video');\r\n          this.media.play();\r\n        }\r\n        this.state = State.IDLE;\r\n      } else {\r\n        this.lastCurrentTime = 0;\r\n        this.state = State.STARTING;\r\n      }\r\n      this.nextLoadPosition = this.startPosition = this.lastCurrentTime;\r\n      this.tick();\r\n    } else {\r\n      logger.warn('cannot start loading as either manifest not parsed or video not attached');\r\n    }\r\n  }\r\n\r\n  startInternal() {\r\n    var hls = this.hls;\r\n    this.stop();\r\n    this.demuxer = new Demuxer(hls);\r\n    this.timer = setInterval(this.ontick, 100);\r\n    this.level = -1;\r\n    this.fragLoadError = 0;\r\n  }\r\n\r\n  stop() {\r\n    this.mp4segments = [];\r\n    this.flushRange = [];\r\n    this.bufferRange = [];\r\n    this.stalled = false;\r\n    var frag = this.fragCurrent;\r\n    if (frag) {\r\n      if (frag.loader) {\r\n        frag.loader.abort();\r\n      }\r\n      this.fragCurrent = null;\r\n    }\r\n    this.fragPrevious = null;\r\n    if (this.sourceBuffer) {\r\n      for(var type in this.sourceBuffer) {\r\n        var sb = this.sourceBuffer[type];\r\n        try {\r\n          this.mediaSource.removeSourceBuffer(sb);\r\n          sb.removeEventListener('updateend', this.onsbue);\r\n          sb.removeEventListener('error', this.onsbe);\r\n        } catch(err) {\r\n        }\r\n      }\r\n      this.sourceBuffer = null;\r\n    }\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n    if (this.demuxer) {\r\n      this.demuxer.destroy();\r\n      this.demuxer = null;\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    this.ticks++;\r\n    if (this.ticks === 1) {\r\n      this.doTick();\r\n      if (this.ticks > 1) {\r\n        setTimeout(this.tick, 1);\r\n      }\r\n      this.ticks = 0;\r\n    }\r\n  }\r\n\r\n  doTick() {\r\n    var pos, level, levelDetails, hls = this.hls;\r\n    switch(this.state) {\r\n      case State.ERROR:\r\n        //don't do anything in error state to avoid breaking further ...\r\n        break;\r\n      case State.STARTING:\r\n        // determine load level\r\n        this.startLevel = hls.startLevel;\r\n        if (this.startLevel === -1) {\r\n          // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level\r\n          this.startLevel = 0;\r\n          this.fragBitrateTest = true;\r\n        }\r\n        // set new level to playlist loader : this will trigger start level load\r\n        this.level = hls.nextLoadLevel = this.startLevel;\r\n        this.state = State.WAITING_LEVEL;\r\n        this.loadedmetadata = false;\r\n        break;\r\n      case State.IDLE:\r\n        // if video detached or unbound exit loop\r\n        if (!this.media) {\r\n          break;\r\n        }\r\n        // determine next candidate fragment to be loaded, based on current position and\r\n        //  end of buffer position\r\n        //  ensure 60s of buffer upfront\r\n        // if we have not yet loaded any fragment, start loading from start position\r\n        if (this.loadedmetadata) {\r\n          pos = this.media.currentTime;\r\n        } else {\r\n          pos = this.nextLoadPosition;\r\n        }\r\n        // determine next load level\r\n        if (this.startFragmentRequested === false) {\r\n          level = this.startLevel;\r\n        } else {\r\n          // we are not at playback start, get next load level from level Controller\r\n          level = hls.nextLoadLevel;\r\n        }\r\n        var bufferInfo = this.bufferInfo(pos,this.config.maxBufferHole),\r\n            bufferLen = bufferInfo.len,\r\n            bufferEnd = bufferInfo.end,\r\n            fragPrevious = this.fragPrevious,\r\n            maxBufLen;\r\n        // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s\r\n        if ((this.levels[level]).hasOwnProperty('bitrate')) {\r\n          maxBufLen = Math.max(8 * this.config.maxBufferSize / this.levels[level].bitrate, this.config.maxBufferLength);\r\n          maxBufLen = Math.min(maxBufLen, this.config.maxMaxBufferLength);\r\n        } else {\r\n          maxBufLen = this.config.maxBufferLength;\r\n        }\r\n        // if buffer length is less than maxBufLen try to load a new fragment\r\n        if (bufferLen < maxBufLen) {\r\n          // set next load level : this will trigger a playlist load if needed\r\n          hls.nextLoadLevel = level;\r\n          this.level = level;\r\n          levelDetails = this.levels[level].details;\r\n          // if level info not retrieved yet, switch state and wait for level retrieval\r\n          // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load\r\n          // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)\r\n          if (typeof levelDetails === 'undefined' || levelDetails.live && this.levelLastLoaded !== level) {\r\n            this.state = State.WAITING_LEVEL;\r\n            break;\r\n          }\r\n          // find fragment index, contiguous with end of buffer position\r\n          let fragments = levelDetails.fragments,\r\n              fragLen = fragments.length,\r\n              start = fragments[0].start,\r\n              end = fragments[fragLen-1].start + fragments[fragLen-1].duration,\r\n              frag;\r\n\r\n            // in case of live playlist we need to ensure that requested position is not located before playlist start\r\n          if (levelDetails.live) {\r\n            // check if requested position is within seekable boundaries :\r\n            //logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);\r\n            if (bufferEnd < Math.max(start,end-this.config.liveMaxLatencyDurationCount*levelDetails.targetduration)) {\r\n                this.seekAfterBuffered = start + Math.max(0, levelDetails.totalduration - this.config.liveSyncDurationCount * levelDetails.targetduration);\r\n                logger.log(`buffer end: ${bufferEnd} is located too far from the end of live sliding playlist, media position will be reseted to: ${this.seekAfterBuffered.toFixed(3)}`);\r\n                bufferEnd = this.seekAfterBuffered;\r\n            }\r\n            if (this.startFragmentRequested && !levelDetails.PTSKnown) {\r\n              /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...\r\n                 try to load frag matching with next SN.\r\n                 even if SN are not synchronized between playlists, loading this frag will help us\r\n                 compute playlist sliding and find the right one after in case it was not the right consecutive one */\r\n              if (fragPrevious) {\r\n                var targetSN = fragPrevious.sn + 1;\r\n                if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {\r\n                  frag = fragments[targetSN - levelDetails.startSN];\r\n                  logger.log(`live playlist, switching playlist, load frag with next SN: ${frag.sn}`);\r\n                }\r\n              }\r\n              if (!frag) {\r\n                /* we have no idea about which fragment should be loaded.\r\n                   so let's load mid fragment. it will help computing playlist sliding and find the right one\r\n                */\r\n                frag = fragments[Math.min(fragLen - 1, Math.round(fragLen / 2))];\r\n                logger.log(`live playlist, switching playlist, unknown, load middle frag : ${frag.sn}`);\r\n              }\r\n            }\r\n          } else {\r\n            // VoD playlist: if bufferEnd before start of playlist, load first fragment\r\n            if (bufferEnd < start) {\r\n              frag = fragments[0];\r\n            }\r\n          }\r\n          if (!frag) {\r\n            var foundFrag;\r\n            if (bufferEnd < end) {\r\n              foundFrag = BinarySearch.search(fragments, (candidate) => {\r\n                //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);\r\n                // offset should be within fragment boundary\r\n                if ((candidate.start + candidate.duration) <= bufferEnd) {\r\n                  return 1;\r\n                }\r\n                else if (candidate.start > bufferEnd) {\r\n                  return -1;\r\n                }\r\n                return 0;\r\n              });\r\n            } else {\r\n              // reach end of playlist\r\n              foundFrag = fragments[fragLen-1];\r\n            }\r\n            if (foundFrag) {\r\n              frag = foundFrag;\r\n              start = foundFrag.start;\r\n              //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);\r\n              if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {\r\n                if (frag.sn < levelDetails.endSN) {\r\n                  frag = fragments[frag.sn + 1 - levelDetails.startSN];\r\n                  logger.log(`SN just loaded, load next one: ${frag.sn}`);\r\n                } else {\r\n                  // have we reached end of VOD playlist ?\r\n                  if (!levelDetails.live) {\r\n                    var mediaSource = this.mediaSource;\r\n                    if (mediaSource) {\r\n                      switch(mediaSource.readyState) {\r\n                        case 'open':\r\n                          var sb = this.sourceBuffer;\r\n                          if (!((sb.audio && sb.audio.updating) || (sb.video && sb.video.updating))) {\r\n                            logger.log('all media data available, signal endOfStream() to MediaSource and stop loading fragment');\r\n                            //Notify the media element that it now has all of the media data\r\n                            mediaSource.endOfStream();\r\n                            this.state = State.ENDED;\r\n                          }\r\n                          break;\r\n                        case 'ended':\r\n                          logger.log('all media data available and mediaSource ended, stop loading fragment');\r\n                          this.state = State.ENDED;\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }\r\n                  }\r\n                  frag = null;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if(frag) {\r\n            //logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));\r\n            if ((frag.decryptdata.uri != null) && (frag.decryptdata.key == null)) {\r\n              logger.log(`Loading key for ${frag.sn} of [${levelDetails.startSN} ,${levelDetails.endSN}],level ${level}`);\r\n              this.state = State.KEY_LOADING;\r\n              hls.trigger(Event.KEY_LOADING, {frag: frag});\r\n            } else {\r\n              logger.log(`Loading ${frag.sn} of [${levelDetails.startSN} ,${levelDetails.endSN}],level ${level}, currentTime:${pos},bufferEnd:${bufferEnd.toFixed(3)}`);\r\n              frag.autoLevel = hls.autoLevelEnabled;\r\n              if (this.levels.length > 1) {\r\n                frag.expectedLen = Math.round(frag.duration * this.levels[level].bitrate / 8);\r\n                frag.trequest = performance.now();\r\n              }\r\n              // ensure that we are not reloading the same fragments in loop ...\r\n              if (this.fragLoadIdx !== undefined) {\r\n                this.fragLoadIdx++;\r\n              } else {\r\n                this.fragLoadIdx = 0;\r\n              }\r\n              if (frag.loadCounter) {\r\n                frag.loadCounter++;\r\n                let maxThreshold = this.config.fragLoadingLoopThreshold;\r\n                // if this frag has already been loaded 3 times, and if it has been reloaded recently\r\n                if (frag.loadCounter > maxThreshold && (Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold)) {\r\n                  hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag});\r\n                  return;\r\n                }\r\n              } else {\r\n                frag.loadCounter = 1;\r\n              }\r\n              frag.loadIdx = this.fragLoadIdx;\r\n              this.fragCurrent = frag;\r\n              this.startFragmentRequested = true;\r\n              hls.trigger(Event.FRAG_LOADING, {frag: frag});\r\n              this.state = State.FRAG_LOADING;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case State.WAITING_LEVEL:\r\n        level = this.levels[this.level];\r\n        // check if playlist is already loaded\r\n        if (level && level.details) {\r\n          this.state = State.IDLE;\r\n        }\r\n        break;\r\n      case State.FRAG_LOADING:\r\n        /*\r\n          monitor fragment retrieval time...\r\n          we compute expected time of arrival of the complete fragment.\r\n          we compare it to expected time of buffer starvation\r\n        */\r\n        let v = this.media,frag = this.fragCurrent;\r\n        /* only monitor frag retrieval time if\r\n        (video not paused OR first fragment being loaded) AND autoswitching enabled AND not lowest level AND multiple levels */\r\n        if (v && (!v.paused || this.loadedmetadata === false) && frag.autoLevel && this.level && this.levels.length > 1) {\r\n          var requestDelay = performance.now() - frag.trequest;\r\n          // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate\r\n          if (requestDelay > (500 * frag.duration)) {\r\n            var loadRate = frag.loaded * 1000 / requestDelay; // byte/s\r\n            if (frag.expectedLen < frag.loaded) {\r\n              frag.expectedLen = frag.loaded;\r\n            }\r\n            pos = v.currentTime;\r\n            var fragLoadedDelay = (frag.expectedLen - frag.loaded) / loadRate;\r\n            var bufferStarvationDelay = this.bufferInfo(pos,this.config.maxBufferHole).end - pos;\r\n            var fragLevelNextLoadedDelay = frag.duration * this.levels[hls.nextLoadLevel].bitrate / (8 * loadRate); //bps/Bps\r\n            /* if we have less than 2 frag duration in buffer and if frag loaded delay is greater than buffer starvation delay\r\n              ... and also bigger than duration needed to load fragment at next level ...*/\r\n            if (bufferStarvationDelay < (2 * frag.duration) && fragLoadedDelay > bufferStarvationDelay && fragLoadedDelay > fragLevelNextLoadedDelay) {\r\n              // abort fragment loading ...\r\n              logger.warn('loading too slow, abort fragment loading');\r\n              logger.log(`fragLoadedDelay/bufferStarvationDelay/fragLevelNextLoadedDelay :${fragLoadedDelay.toFixed(1)}/${bufferStarvationDelay.toFixed(1)}/${fragLevelNextLoadedDelay.toFixed(1)}`);\r\n              //abort fragment loading\r\n              frag.loader.abort();\r\n              hls.trigger(Event.FRAG_LOAD_EMERGENCY_ABORTED, {frag: frag});\r\n              // switch back to IDLE state to request new fragment at lowest level\r\n              this.state = State.IDLE;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case State.FRAG_LOADING_WAITING_RETRY:\r\n        var now = performance.now();\r\n        var retryDate = this.retryDate;\r\n        var media = this.media;\r\n        var isSeeking = media && media.seeking;\r\n        // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading\r\n        if(!retryDate || (now >= retryDate) || isSeeking) {\r\n          logger.log(`mediaController: retryDate reached, switch back to IDLE state`);\r\n          this.state = State.IDLE;\r\n        }\r\n        break;\r\n      case State.PARSING:\r\n        // nothing to do, wait for fragment being parsed\r\n        break;\r\n      case State.PARSED:\r\n      case State.APPENDING:\r\n        if (this.sourceBuffer) {\r\n          if (this.media.error) {\r\n            logger.error('trying to append although a media error occured, switch to ERROR state');\r\n            this.state = State.ERROR;\r\n            return;\r\n          }\r\n          // if MP4 segment appending in progress nothing to do\r\n          else if ((this.sourceBuffer.audio && this.sourceBuffer.audio.updating) ||\r\n             (this.sourceBuffer.video && this.sourceBuffer.video.updating)) {\r\n            //logger.log('sb append in progress');\r\n        // check if any MP4 segments left to append\r\n          } else if (this.mp4segments.length) {\r\n            var segment = this.mp4segments.shift();\r\n            try {\r\n              //logger.log(`appending ${segment.type} SB, size:${segment.data.length});\r\n              this.sourceBuffer[segment.type].appendBuffer(segment.data);\r\n              this.appendError = 0;\r\n            } catch(err) {\r\n              // in case any error occured while appending, put back segment in mp4segments table\r\n              logger.error(`error while trying to append buffer:${err.message},try appending later`);\r\n              this.mp4segments.unshift(segment);\r\n                // just discard QuotaExceededError for now, and wait for the natural browser buffer eviction\r\n              //http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror\r\n              if(err.code !== 22) {\r\n                if (this.appendError) {\r\n                  this.appendError++;\r\n                } else {\r\n                  this.appendError = 1;\r\n                }\r\n                var event = {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_APPEND_ERROR, frag: this.fragCurrent};\r\n                /* with UHD content, we could get loop of quota exceeded error until\r\n                  browser is able to evict some data from sourcebuffer. retrying help recovering this\r\n                */\r\n                if (this.appendError > this.config.appendErrorMaxRetry) {\r\n                  logger.log(`fail ${this.config.appendErrorMaxRetry} times to append segment in sourceBuffer`);\r\n                  event.fatal = true;\r\n                  hls.trigger(Event.ERROR, event);\r\n                  this.state = State.ERROR;\r\n                  return;\r\n                } else {\r\n                  event.fatal = false;\r\n                  hls.trigger(Event.ERROR, event);\r\n                }\r\n              }\r\n            }\r\n            this.state = State.APPENDING;\r\n          }\r\n        } else {\r\n          // sourceBuffer undefined, switch back to IDLE state\r\n          this.state = State.IDLE;\r\n        }\r\n        break;\r\n      case State.BUFFER_FLUSHING:\r\n        // loop through all buffer ranges to flush\r\n        while(this.flushRange.length) {\r\n          var range = this.flushRange[0];\r\n          // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer\r\n          if (this.flushBuffer(range.start, range.end)) {\r\n            // range flushed, remove from flush array\r\n            this.flushRange.shift();\r\n          } else {\r\n            // flush in progress, come back later\r\n            break;\r\n          }\r\n        }\r\n        if (this.flushRange.length === 0) {\r\n          // handle end of immediate switching if needed\r\n          if (this.immediateSwitch) {\r\n            this.immediateLevelSwitchEnd();\r\n          }\r\n          // move to IDLE once flush complete. this should trigger new fragment loading\r\n          this.state = State.IDLE;\r\n          // reset reference to frag\r\n          this.fragPrevious = null;\r\n        }\r\n         /* if not everything flushed, stay in BUFFER_FLUSHING state. we will come back here\r\n            each time sourceBuffer updateend() callback will be triggered\r\n            */\r\n        break;\r\n      case State.ENDED:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // check buffer\r\n    this._checkBuffer();\r\n    // check/update current fragment\r\n    this._checkFragmentChanged();\r\n  }\r\n\r\n\r\n  bufferInfo(pos,maxHoleDuration) {\r\n    var media = this.media,\r\n        vbuffered = media.buffered,\r\n        buffered = [],i;\r\n    for (i = 0; i < vbuffered.length; i++) {\r\n      buffered.push({start: vbuffered.start(i), end: vbuffered.end(i)});\r\n    }\r\n    return this.bufferedInfo(buffered,pos,maxHoleDuration);\r\n  }\r\n\r\n  bufferedInfo(buffered,pos,maxHoleDuration) {\r\n    var buffered2 = [],\r\n        // bufferStart and bufferEnd are buffer boundaries around current video position\r\n        bufferLen,bufferStart, bufferEnd,bufferStartNext,i;\r\n    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)\r\n    buffered.sort(function (a, b) {\r\n      var diff = a.start - b.start;\r\n      if (diff) {\r\n        return diff;\r\n      } else {\r\n        return b.end - a.end;\r\n      }\r\n    });\r\n    // there might be some small holes between buffer time range\r\n    // consider that holes smaller than maxHoleDuration are irrelevant and build another\r\n    // buffer time range representations that discards those holes\r\n    for (i = 0; i < buffered.length; i++) {\r\n      var buf2len = buffered2.length;\r\n      if(buf2len) {\r\n        var buf2end = buffered2[buf2len - 1].end;\r\n        // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)\r\n        if((buffered[i].start - buf2end) < maxHoleDuration) {\r\n          // merge overlapping time ranges\r\n          // update lastRange.end only if smaller than item.end\r\n          // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)\r\n          // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])\r\n          if(buffered[i].end > buf2end) {\r\n            buffered2[buf2len - 1].end = buffered[i].end;\r\n          }\r\n        } else {\r\n          // big hole\r\n          buffered2.push(buffered[i]);\r\n        }\r\n      } else {\r\n        // first value\r\n        buffered2.push(buffered[i]);\r\n      }\r\n    }\r\n    for (i = 0, bufferLen = 0, bufferStart = bufferEnd = pos; i < buffered2.length; i++) {\r\n      var start =  buffered2[i].start,\r\n          end = buffered2[i].end;\r\n      //logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));\r\n      if ((pos + maxHoleDuration) >= start && pos < end) {\r\n        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length\r\n        bufferStart = start;\r\n        bufferEnd = end + maxHoleDuration;\r\n        bufferLen = bufferEnd - pos;\r\n      } else if ((pos + maxHoleDuration) < start) {\r\n        bufferStartNext = start;\r\n        break;\r\n      }\r\n    }\r\n    return {len: bufferLen, start: bufferStart, end: bufferEnd, nextStart : bufferStartNext};\r\n  }\r\n\r\n  getBufferRange(position) {\r\n    var i, range;\r\n    for (i = this.bufferRange.length - 1; i >=0; i--) {\r\n      range = this.bufferRange[i];\r\n      if (position >= range.start && position <= range.end) {\r\n        return range;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get currentLevel() {\r\n    if (this.media) {\r\n      var range = this.getBufferRange(this.media.currentTime);\r\n      if (range) {\r\n        return range.frag.level;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  get nextBufferRange() {\r\n    if (this.media) {\r\n      // first get end range of current fragment\r\n      return this.followingBufferRange(this.getBufferRange(this.media.currentTime));\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  followingBufferRange(range) {\r\n    if (range) {\r\n      // try to get range of next fragment (500ms after this range)\r\n      return this.getBufferRange(range.end + 0.5);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get nextLevel() {\r\n    var range = this.nextBufferRange;\r\n    if (range) {\r\n      return range.frag.level;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  isBuffered(position) {\r\n    var v = this.media, buffered = v.buffered;\r\n    for (var i = 0; i < buffered.length; i++) {\r\n      if (position >= buffered.start(i) && position <= buffered.end(i)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _checkFragmentChanged() {\r\n    var rangeCurrent, currentTime, video = this.media;\r\n    if (video && video.seeking === false) {\r\n      currentTime = video.currentTime;\r\n      /* if video element is in seeked state, currentTime can only increase.\r\n        (assuming that playback rate is positive ...)\r\n        As sometimes currentTime jumps back to zero after a\r\n        media decode error, check this, to avoid seeking back to\r\n        wrong position after a media decode error\r\n      */\r\n      if(currentTime > video.playbackRate*this.lastCurrentTime) {\r\n        this.lastCurrentTime = currentTime;\r\n      }\r\n      if (this.isBuffered(currentTime)) {\r\n        rangeCurrent = this.getBufferRange(currentTime);\r\n      } else if (this.isBuffered(currentTime + 0.1)) {\r\n        /* ensure that FRAG_CHANGED event is triggered at startup,\r\n          when first video frame is displayed and playback is paused.\r\n          add a tolerance of 100ms, in case current position is not buffered,\r\n          check if current pos+100ms is buffered and use that buffer range\r\n          for FRAG_CHANGED event reporting */\r\n        rangeCurrent = this.getBufferRange(currentTime + 0.1);\r\n      }\r\n      if (rangeCurrent) {\r\n        var fragPlaying = rangeCurrent.frag;\r\n        if (fragPlaying !== this.fragPlaying) {\r\n          this.fragPlaying = fragPlaying;\r\n          this.hls.trigger(Event.FRAG_CHANGED, {frag: fragPlaying});\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n    abort any buffer append in progress, and flush all buffered data\r\n    return true once everything has been flushed.\r\n    sourceBuffer.abort() and sourceBuffer.remove() are asynchronous operations\r\n    the idea is to call this function from tick() timer and call it again until all resources have been cleaned\r\n    the timer is rearmed upon sourceBuffer updateend() event, so this should be optimal\r\n  */\r\n  flushBuffer(startOffset, endOffset) {\r\n    var sb, i, bufStart, bufEnd, flushStart, flushEnd;\r\n    //logger.log('flushBuffer,pos/start/end: ' + this.media.currentTime + '/' + startOffset + '/' + endOffset);\r\n    // safeguard to avoid infinite looping\r\n    if (this.flushBufferCounter++ < (2 * this.bufferRange.length) && this.sourceBuffer) {\r\n      for (var type in this.sourceBuffer) {\r\n        sb = this.sourceBuffer[type];\r\n        if (!sb.updating) {\r\n          for (i = 0; i < sb.buffered.length; i++) {\r\n            bufStart = sb.buffered.start(i);\r\n            bufEnd = sb.buffered.end(i);\r\n            // workaround firefox not able to properly flush multiple buffered range.\r\n            if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && endOffset === Number.POSITIVE_INFINITY) {\r\n              flushStart = startOffset;\r\n              flushEnd = endOffset;\r\n            } else {\r\n              flushStart = Math.max(bufStart, startOffset);\r\n              flushEnd = Math.min(bufEnd, endOffset);\r\n            }\r\n            /* sometimes sourcebuffer.remove() does not flush\r\n               the exact expected time range.\r\n               to avoid rounding issues/infinite loop,\r\n               only flush buffer range of length greater than 500ms.\r\n            */\r\n            if (flushEnd - flushStart > 0.5) {\r\n              logger.log(`flush ${type} [${flushStart},${flushEnd}], of [${bufStart},${bufEnd}], pos:${this.media.currentTime}`);\r\n              sb.remove(flushStart, flushEnd);\r\n              return false;\r\n            }\r\n          }\r\n        } else {\r\n          //logger.log('abort ' + type + ' append in progress');\r\n          // this will abort any appending in progress\r\n          //sb.abort();\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    /* after successful buffer flushing, rebuild buffer Range array\r\n      loop through existing buffer range and check if\r\n      corresponding range is still buffered. only push to new array already buffered range\r\n    */\r\n    var newRange = [],range;\r\n    for (i = 0; i < this.bufferRange.length; i++) {\r\n      range = this.bufferRange[i];\r\n      if (this.isBuffered((range.start + range.end) / 2)) {\r\n        newRange.push(range);\r\n      }\r\n    }\r\n    this.bufferRange = newRange;\r\n    logger.log('buffer flushed');\r\n    // everything flushed !\r\n    return true;\r\n  }\r\n\r\n  /*\r\n    on immediate level switch :\r\n     - pause playback if playing\r\n     - cancel any pending load request\r\n     - and trigger a buffer flush\r\n  */\r\n  immediateLevelSwitch() {\r\n    logger.log('immediateLevelSwitch');\r\n    if (!this.immediateSwitch) {\r\n      this.immediateSwitch = true;\r\n      this.previouslyPaused = this.media.paused;\r\n      this.media.pause();\r\n    }\r\n    var fragCurrent = this.fragCurrent;\r\n    if (fragCurrent && fragCurrent.loader) {\r\n      fragCurrent.loader.abort();\r\n    }\r\n    this.fragCurrent = null;\r\n    // flush everything\r\n    this.flushBufferCounter = 0;\r\n    this.flushRange.push({start: 0, end: Number.POSITIVE_INFINITY});\r\n    // trigger a sourceBuffer flush\r\n    this.state = State.BUFFER_FLUSHING;\r\n    // increase fragment load Index to avoid frag loop loading error after buffer flush\r\n    this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\r\n    // speed up switching, trigger timer function\r\n    this.tick();\r\n  }\r\n\r\n  /*\r\n     on immediate level switch end, after new fragment has been buffered :\r\n      - nudge video decoder by slightly adjusting video currentTime\r\n      - resume the playback if needed\r\n  */\r\n  immediateLevelSwitchEnd() {\r\n    this.immediateSwitch = false;\r\n    this.media.currentTime -= 0.0001;\r\n    if (!this.previouslyPaused) {\r\n      this.media.play();\r\n    }\r\n  }\r\n\r\n  nextLevelSwitch() {\r\n    /* try to switch ASAP without breaking video playback :\r\n       in order to ensure smooth but quick level switching,\r\n      we need to find the next flushable buffer range\r\n      we should take into account new segment fetch time\r\n    */\r\n    var fetchdelay, currentRange, nextRange;\r\n    currentRange = this.getBufferRange(this.media.currentTime);\r\n    if (currentRange) {\r\n    // flush buffer preceding current fragment (flush until current fragment start offset)\r\n    // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...\r\n      this.flushRange.push({start: 0, end: currentRange.start - 1});\r\n    }\r\n    if (!this.media.paused) {\r\n      // add a safety delay of 1s\r\n      var nextLevelId = this.hls.nextLoadLevel,nextLevel = this.levels[nextLevelId], fragLastKbps = this.fragLastKbps;\r\n      if (fragLastKbps && this.fragCurrent) {\r\n        fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;\r\n      } else {\r\n        fetchdelay = 0;\r\n      }\r\n    } else {\r\n      fetchdelay = 0;\r\n    }\r\n    //logger.log('fetchdelay:'+fetchdelay);\r\n    // find buffer range that will be reached once new fragment will be fetched\r\n    nextRange = this.getBufferRange(this.media.currentTime + fetchdelay);\r\n    if (nextRange) {\r\n      // we can flush buffer range following this one without stalling playback\r\n      nextRange = this.followingBufferRange(nextRange);\r\n      if (nextRange) {\r\n        // flush position is the start position of this new buffer\r\n        this.flushRange.push({start: nextRange.start, end: Number.POSITIVE_INFINITY});\r\n        // if we are here, we can also cancel any loading/demuxing in progress, as they are useless\r\n        var fragCurrent = this.fragCurrent;\r\n        if (fragCurrent && fragCurrent.loader) {\r\n          fragCurrent.loader.abort();\r\n        }\r\n        this.fragCurrent = null;\r\n      }\r\n    }\r\n    if (this.flushRange.length) {\r\n      this.flushBufferCounter = 0;\r\n      // trigger a sourceBuffer flush\r\n      this.state = State.BUFFER_FLUSHING;\r\n      // increase fragment load Index to avoid frag loop loading error after buffer flush\r\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\r\n      // speed up switching, trigger timer function\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  onMediaAttaching(data) {\r\n    var media = this.media = data.media;\r\n    // setup the media source\r\n    var ms = this.mediaSource = new MediaSource();\r\n    //Media Source listeners\r\n    this.onmso = this.onMediaSourceOpen.bind(this);\r\n    this.onmse = this.onMediaSourceEnded.bind(this);\r\n    this.onmsc = this.onMediaSourceClose.bind(this);\r\n    ms.addEventListener('sourceopen', this.onmso);\r\n    ms.addEventListener('sourceended', this.onmse);\r\n    ms.addEventListener('sourceclose', this.onmsc);\r\n    // link video and media Source\r\n    media.src = URL.createObjectURL(ms);\r\n  }\r\n\r\n  onMediaDetaching() {\r\n    var media = this.media;\r\n    if (media && media.ended) {\r\n      logger.log('MSE detaching and video ended, reset startPosition');\r\n      this.startPosition = this.lastCurrentTime = 0;\r\n    }\r\n\r\n    // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery\r\n    var levels = this.levels;\r\n    if (levels) {\r\n      // reset fragment load counter\r\n        levels.forEach(level => {\r\n          if(level.details) {\r\n            level.details.fragments.forEach(fragment => {\r\n              fragment.loadCounter = undefined;\r\n            });\r\n          }\r\n      });\r\n    }\r\n    var ms = this.mediaSource;\r\n    if (ms) {\r\n      if (ms.readyState === 'open') {\r\n        try {\r\n          // endOfStream could trigger exception if any sourcebuffer is in updating state\r\n          // we don't really care about checking sourcebuffer state here,\r\n          // as we are anyway detaching the MediaSource\r\n          // let's just avoid this exception to propagate\r\n          ms.endOfStream();\r\n        } catch(err) {\r\n          logger.warn(`onMediaDetaching:${err.message} while calling endOfStream`);\r\n        }\r\n      }\r\n      ms.removeEventListener('sourceopen', this.onmso);\r\n      ms.removeEventListener('sourceended', this.onmse);\r\n      ms.removeEventListener('sourceclose', this.onmsc);\r\n      // unlink MediaSource from video tag\r\n      this.media.src = '';\r\n      this.mediaSource = null;\r\n      // remove video listeners\r\n      if (media) {\r\n        media.removeEventListener('seeking', this.onvseeking);\r\n        media.removeEventListener('seeked', this.onvseeked);\r\n        media.removeEventListener('loadedmetadata', this.onvmetadata);\r\n        media.removeEventListener('ended', this.onvended);\r\n        this.onvseeking = this.onvseeked = this.onvmetadata = null;\r\n      }\r\n      this.media = null;\r\n      this.loadedmetadata = false;\r\n      this.stop();\r\n    }\r\n    this.onmso = this.onmse = this.onmsc = null;\r\n    this.hls.trigger(Event.MEDIA_DETACHED);\r\n  }\r\n\r\n  onMediaSeeking() {\r\n    if (this.state === State.FRAG_LOADING) {\r\n      // check if currently loaded fragment is inside buffer.\r\n      //if outside, cancel fragment loading, otherwise do nothing\r\n      if (this.bufferInfo(this.media.currentTime,this.config.maxBufferHole).len === 0) {\r\n        logger.log('seeking outside of buffer while fragment load in progress, cancel fragment load');\r\n        var fragCurrent = this.fragCurrent;\r\n        if (fragCurrent) {\r\n          if (fragCurrent.loader) {\r\n            fragCurrent.loader.abort();\r\n          }\r\n          this.fragCurrent = null;\r\n        }\r\n        this.fragPrevious = null;\r\n        // switch to IDLE state to load new fragment\r\n        this.state = State.IDLE;\r\n      }\r\n    } else if (this.state === State.ENDED) {\r\n        // switch to IDLE state to check for potential new fragment\r\n        this.state = State.IDLE;\r\n    }\r\n    if (this.media) {\r\n      this.lastCurrentTime = this.media.currentTime;\r\n    }\r\n    // avoid reporting fragment loop loading error in case user is seeking several times on same position\r\n    if (this.fragLoadIdx !== undefined) {\r\n      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;\r\n    }\r\n    // tick to speed up processing\r\n    this.tick();\r\n  }\r\n\r\n  onMediaSeeked() {\r\n    // tick to speed up FRAGMENT_PLAYING triggering\r\n    this.tick();\r\n  }\r\n\r\n  onMediaMetadata() {\r\n    var media = this.media,\r\n        currentTime = media.currentTime;\r\n    // only adjust currentTime if not equal to 0\r\n    if (!currentTime && currentTime !== this.startPosition) {\r\n      logger.log('onMediaMetadata: adjust currentTime to startPosition');\r\n      media.currentTime = this.startPosition;\r\n    }\r\n    this.loadedmetadata = true;\r\n    this.tick();\r\n  }\r\n\r\n  onMediaEnded() {\r\n    logger.log('media ended');\r\n    // reset startPosition and lastCurrentTime to restart playback @ stream beginning\r\n    this.startPosition = this.lastCurrentTime = 0;\r\n  }\r\n\r\n\r\n  onManifestParsed(data) {\r\n    var aac = false, heaac = false, codecs;\r\n    data.levels.forEach(level => {\r\n      // detect if we have different kind of audio codecs used amongst playlists\r\n      codecs = level.codecs;\r\n      if (codecs) {\r\n        if (codecs.indexOf('mp4a.40.2') !== -1) {\r\n          aac = true;\r\n        }\r\n        if (codecs.indexOf('mp4a.40.5') !== -1) {\r\n          heaac = true;\r\n        }\r\n      }\r\n    });\r\n    this.audiocodecswitch = (aac && heaac);\r\n    if (this.audiocodecswitch) {\r\n      logger.log('both AAC/HE-AAC audio found in levels; declaring audio codec as HE-AAC');\r\n    }\r\n    this.levels = data.levels;\r\n    this.startLevelLoaded = false;\r\n    this.startFragmentRequested = false;\r\n    if (this.media && this.config.autoStartLoad) {\r\n      this.startLoad();\r\n    }\r\n  }\r\n\r\n  onLevelLoaded(data) {\r\n    var newDetails = data.details,\r\n        newLevelId = data.level,\r\n        curLevel = this.levels[newLevelId],\r\n        duration = newDetails.totalduration;\r\n\r\n    logger.log(`level ${newLevelId} loaded [${newDetails.startSN},${newDetails.endSN}],duration:${duration}`);\r\n    this.levelLastLoaded = newLevelId;\r\n\r\n    if (newDetails.live) {\r\n      var curDetails = curLevel.details;\r\n      if (curDetails) {\r\n        // we already have details for that level, merge them\r\n        LevelHelper.mergeDetails(curDetails,newDetails);\r\n        if (newDetails.PTSKnown) {\r\n          logger.log(`live playlist sliding:${newDetails.fragments[0].start.toFixed(3)}`);\r\n        } else {\r\n          logger.log('live playlist - outdated PTS, unknown sliding');\r\n        }\r\n      } else {\r\n        newDetails.PTSKnown = false;\r\n        logger.log('live playlist - first load, unknown sliding');\r\n      }\r\n    } else {\r\n      newDetails.PTSKnown = false;\r\n    }\r\n    // override level info\r\n    curLevel.details = newDetails;\r\n    this.hls.trigger(Event.LEVEL_UPDATED, { details: newDetails, level: newLevelId });\r\n\r\n    // compute start position\r\n    if (this.startLevelLoaded === false) {\r\n      // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)\r\n      if (newDetails.live) {\r\n        this.startPosition = Math.max(0, duration - this.config.liveSyncDurationCount * newDetails.targetduration);\r\n      }\r\n      this.nextLoadPosition = this.startPosition;\r\n      this.startLevelLoaded = true;\r\n    }\r\n    // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment\r\n    if (this.state === State.WAITING_LEVEL) {\r\n      this.state = State.IDLE;\r\n    }\r\n    //trigger handler right now\r\n    this.tick();\r\n  }\r\n\r\n  onKeyLoaded() {\r\n    if (this.state === State.KEY_LOADING) {\r\n      this.state = State.IDLE;\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  onFragLoaded(data) {\r\n    var fragCurrent = this.fragCurrent;\r\n    if (this.state === State.FRAG_LOADING &&\r\n        fragCurrent &&\r\n        data.frag.level === fragCurrent.level &&\r\n        data.frag.sn === fragCurrent.sn) {\r\n      if (this.fragBitrateTest === true) {\r\n        // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo\r\n        this.state = State.IDLE;\r\n        this.fragBitrateTest = false;\r\n        data.stats.tparsed = data.stats.tbuffered = performance.now();\r\n        this.hls.trigger(Event.FRAG_BUFFERED, {stats: data.stats, frag: fragCurrent});\r\n      } else {\r\n        this.state = State.PARSING;\r\n        // transmux the MPEG-TS data to ISO-BMFF segments\r\n        this.stats = data.stats;\r\n        var currentLevel = this.levels[this.level],\r\n            details = currentLevel.details,\r\n            duration = details.totalduration,\r\n            start = fragCurrent.start,\r\n            level = fragCurrent.level,\r\n            sn = fragCurrent.sn,\r\n            audioCodec = currentLevel.audioCodec;\r\n        if(this.audioCodecSwap) {\r\n          logger.log('swapping playlist audio codec');\r\n          if(audioCodec === undefined) {\r\n            audioCodec = this.lastAudioCodec;\r\n          }\r\n          if(audioCodec.indexOf('mp4a.40.5') !==-1) {\r\n            audioCodec = 'mp4a.40.2';\r\n          } else {\r\n            audioCodec = 'mp4a.40.5';\r\n          }\r\n        }\r\n        logger.log(`Demuxing ${sn} of [${details.startSN} ,${details.endSN}],level ${level}`);\r\n        this.demuxer.push(data.payload, audioCodec, currentLevel.videoCodec, start, fragCurrent.cc, level, sn, duration, fragCurrent.decryptdata);\r\n      }\r\n    }\r\n    this.fragLoadError = 0;\r\n  }\r\n\r\n  onFragParsingInitSegment(data) {\r\n    if (this.state === State.PARSING) {\r\n      // check if codecs have been explicitely defined in the master playlist for this level;\r\n      // if yes use these ones instead of the ones parsed from the demux\r\n      var audioCodec = this.levels[this.level].audioCodec, videoCodec = this.levels[this.level].videoCodec, sb;\r\n      this.lastAudioCodec = data.audioCodec;\r\n      if(audioCodec && this.audioCodecSwap) {\r\n        logger.log('swapping playlist audio codec');\r\n        if(audioCodec.indexOf('mp4a.40.5') !==-1) {\r\n          audioCodec = 'mp4a.40.2';\r\n        } else {\r\n          audioCodec = 'mp4a.40.5';\r\n        }\r\n      }\r\n      logger.log(`playlist_level/init_segment codecs: video => ${videoCodec}/${data.videoCodec}; audio => ${audioCodec}/${data.audioCodec}`);\r\n      // if playlist does not specify codecs, use codecs found while parsing fragment\r\n      // if no codec found while parsing fragment, also set codec to undefined to avoid creating sourceBuffer\r\n      if (audioCodec === undefined || data.audioCodec === undefined) {\r\n        audioCodec = data.audioCodec;\r\n      }\r\n\r\n      if (videoCodec === undefined  || data.videoCodec === undefined) {\r\n        videoCodec = data.videoCodec;\r\n      }\r\n      // in case several audio codecs might be used, force HE-AAC for audio (some browsers don't support audio codec switch)\r\n      //don't do it for mono streams ...\r\n      var ua = navigator.userAgent.toLowerCase();\r\n      if (this.audiocodecswitch &&\r\n         data.audioChannelCount !== 1 &&\r\n          ua.indexOf('android') === -1 &&\r\n          ua.indexOf('firefox') === -1) {\r\n        audioCodec = 'mp4a.40.5';\r\n      }\r\n      if (!this.sourceBuffer) {\r\n        this.sourceBuffer = {};\r\n        logger.log(`selected A/V codecs for sourceBuffers:${audioCodec},${videoCodec}`);\r\n        // create source Buffer and link them to MediaSource\r\n        if (audioCodec) {\r\n          sb = this.sourceBuffer.audio = this.mediaSource.addSourceBuffer(`audio/mp4;codecs=${audioCodec}`);\r\n          sb.addEventListener('updateend', this.onsbue);\r\n          sb.addEventListener('error', this.onsbe);\r\n        }\r\n        if (videoCodec) {\r\n          sb = this.sourceBuffer.video = this.mediaSource.addSourceBuffer(`video/mp4;codecs=${videoCodec}`);\r\n          sb.addEventListener('updateend', this.onsbue);\r\n          sb.addEventListener('error', this.onsbe);\r\n        }\r\n      }\r\n      if (audioCodec) {\r\n        this.mp4segments.push({type: 'audio', data: data.audioMoov});\r\n      }\r\n      if(videoCodec) {\r\n        this.mp4segments.push({type: 'video', data: data.videoMoov});\r\n      }\r\n      //trigger handler right now\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  onFragParsingData(data) {\r\n    if (this.state === State.PARSING) {\r\n      this.tparse2 = Date.now();\r\n      var level = this.levels[this.level],\r\n          frag = this.fragCurrent;\r\n      logger.log(`parsed ${data.type},PTS:[${data.startPTS.toFixed(3)},${data.endPTS.toFixed(3)}],DTS:[${data.startDTS.toFixed(3)}/${data.endDTS.toFixed(3)}],nb:${data.nb}`);\r\n      var drift = LevelHelper.updateFragPTS(level.details,frag.sn,data.startPTS,data.endPTS);\r\n      this.hls.trigger(Event.LEVEL_PTS_UPDATED, {details: level.details, level: this.level, drift: drift});\r\n\r\n      this.mp4segments.push({type: data.type, data: data.moof});\r\n      this.mp4segments.push({type: data.type, data: data.mdat});\r\n      this.nextLoadPosition = data.endPTS;\r\n      this.bufferRange.push({type: data.type, start: data.startPTS, end: data.endPTS, frag: frag});\r\n\r\n      //trigger handler right now\r\n      this.tick();\r\n    } else {\r\n      logger.warn(`not in PARSING state, ignoring FRAG_PARSING_DATA event`);\r\n    }\r\n  }\r\n\r\n  onFragParsed() {\r\n    if (this.state === State.PARSING) {\r\n      this.state = State.PARSED;\r\n      this.stats.tparsed = performance.now();\r\n      //trigger handler right now\r\n      this.tick();\r\n    }\r\n  }\r\n\r\n  onError(data) {\r\n    switch(data.details) {\r\n      case ErrorDetails.FRAG_LOAD_ERROR:\r\n      case ErrorDetails.FRAG_LOAD_TIMEOUT:\r\n        if(!data.fatal) {\r\n          var loadError = this.fragLoadError;\r\n          if(loadError) {\r\n            loadError++;\r\n          } else {\r\n            loadError=1;\r\n          }\r\n          if (loadError <= this.config.fragLoadingMaxRetry) {\r\n            this.fragLoadError = loadError;\r\n            // reset load counter to avoid frag loop loading error\r\n            data.frag.loadCounter = 0;\r\n            // exponential backoff capped to 64s\r\n            var delay = Math.min(Math.pow(2,loadError-1)*this.config.fragLoadingRetryDelay,64000);\r\n            logger.warn(`mediaController: frag loading failed, retry in ${delay} ms`);\r\n            this.retryDate = performance.now() + delay;\r\n            // retry loading state\r\n            this.state = State.FRAG_LOADING_WAITING_RETRY;\r\n          } else {\r\n            logger.error(`mediaController: ${data.details} reaches max retry, redispatch as fatal ...`);\r\n            // redispatch same error but with fatal set to true\r\n            data.fatal = true;\r\n            this.hls.trigger(Event.ERROR, data);\r\n            this.state = State.ERROR;\r\n          }\r\n        }\r\n        break;\r\n      case ErrorDetails.FRAG_LOOP_LOADING_ERROR:\r\n      case ErrorDetails.LEVEL_LOAD_ERROR:\r\n      case ErrorDetails.LEVEL_LOAD_TIMEOUT:\r\n      case ErrorDetails.KEY_LOAD_ERROR:\r\n      case ErrorDetails.KEY_LOAD_TIMEOUT:\r\n        // if fatal error, stop processing, otherwise move to IDLE to retry loading\r\n        logger.warn(`mediaController: ${data.details} while loading frag,switch to ${data.fatal ? 'ERROR' : 'IDLE'} state ...`);\r\n        this.state = data.fatal ? State.ERROR : State.IDLE;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onSBUpdateEnd() {\r\n    //trigger handler right now\r\n    if (this.state === State.APPENDING && this.mp4segments.length === 0)  {\r\n      var frag = this.fragCurrent, stats = this.stats;\r\n      if (frag) {\r\n        this.fragPrevious = frag;\r\n        stats.tbuffered = performance.now();\r\n        this.fragLastKbps = Math.round(8 * stats.length / (stats.tbuffered - stats.tfirst));\r\n        this.hls.trigger(Event.FRAG_BUFFERED, {stats: stats, frag: frag});\r\n        logger.log(`media buffered : ${this.timeRangesToString(this.media.buffered)}`);\r\n        this.state = State.IDLE;\r\n      }\r\n    }\r\n    this.tick();\r\n  }\r\n\r\n_checkBuffer() {\r\n    var media = this.media;\r\n    if(media) {\r\n      // compare readyState\r\n      var readyState = media.readyState;\r\n      // if ready state different from HAVE_NOTHING (numeric value 0), we are allowed to seek\r\n      if(readyState) {\r\n        // if seek after buffered defined, let's seek if within acceptable range\r\n        var seekAfterBuffered = this.seekAfterBuffered;\r\n        if(seekAfterBuffered) {\r\n          if(media.duration >= seekAfterBuffered) {\r\n            media.currentTime = seekAfterBuffered;\r\n            this.seekAfterBuffered = undefined;\r\n          }\r\n        } else {\r\n          var currentTime = media.currentTime,\r\n              bufferInfo = this.bufferInfo(currentTime,0),\r\n              isPlaying = !(media.paused || media.ended || media.seeking || readyState < 3),\r\n              jumpThreshold = 0.2,\r\n              playheadMoving = currentTime > media.playbackRate*this.lastCurrentTime;\r\n\r\n          if (this.stalled && playheadMoving) {\r\n            this.stalled = false;\r\n          }\r\n\r\n          // check buffer upfront\r\n          // if less than 200ms is buffered, and media is playing but playhead is not moving,\r\n          // and we have a new buffer range available upfront, let's seek to that one\r\n          if(bufferInfo.len <= jumpThreshold) {\r\n            if(playheadMoving || !isPlaying) {\r\n              // playhead moving or media not playing\r\n              jumpThreshold = 0;\r\n            } else {\r\n              // playhead not moving AND media playing\r\n              logger.log('playback seems stuck');\r\n              if(!this.stalled) {\r\n                this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_STALLED_ERROR, fatal: false});\r\n                this.stalled = true;\r\n              }\r\n            }\r\n            // if we are below threshold, try to jump if next buffer range is close\r\n            if(bufferInfo.len <= jumpThreshold) {\r\n              // no buffer available @ currentTime, check if next buffer is close (more than 5ms diff but within a config.maxSeekHole second range)\r\n              var nextBufferStart = bufferInfo.nextStart, delta = nextBufferStart-currentTime;\r\n              if(nextBufferStart &&\r\n                 (delta < this.config.maxSeekHole) &&\r\n                 (delta > 0.005)  &&\r\n                 !media.seeking) {\r\n                // next buffer is close ! adjust currentTime to nextBufferStart\r\n                // this will ensure effective video decoding\r\n                logger.log(`adjust currentTime from ${currentTime} to ${nextBufferStart}`);\r\n                media.currentTime = nextBufferStart;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  swapAudioCodec() {\r\n    this.audioCodecSwap = !this.audioCodecSwap;\r\n  }\r\n\r\n  onSBUpdateError(event) {\r\n    logger.error(`sourceBuffer error:${event}`);\r\n    this.state = State.ERROR;\r\n    // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error\r\n    // this error might not always be fatal (it is fatal if decode error is set, in that case\r\n    // it will be followed by a mediaElement error ...)\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false, frag: this.fragCurrent});\r\n  }\r\n\r\n  timeRangesToString(r) {\r\n    var log = '', len = r.length;\r\n    for (var i=0; i<len; i++) {\r\n      log += '[' + r.start(i) + ',' + r.end(i) + ']';\r\n    }\r\n    return log;\r\n  }\r\n\r\n  onMediaSourceOpen() {\r\n    logger.log('media source opened');\r\n    this.hls.trigger(Event.MEDIA_ATTACHED);\r\n    this.onvseeking = this.onMediaSeeking.bind(this);\r\n    this.onvseeked = this.onMediaSeeked.bind(this);\r\n    this.onvmetadata = this.onMediaMetadata.bind(this);\r\n    this.onvended = this.onMediaEnded.bind(this);\r\n    var media = this.media;\r\n    media.addEventListener('seeking', this.onvseeking);\r\n    media.addEventListener('seeked', this.onvseeked);\r\n    media.addEventListener('loadedmetadata', this.onvmetadata);\r\n    media.addEventListener('ended', this.onvended);\r\n    if(this.levels && this.config.autoStartLoad) {\r\n      this.startLoad();\r\n    }\r\n    // once received, don't listen anymore to sourceopen event\r\n    this.mediaSource.removeEventListener('sourceopen', this.onmso);\r\n  }\r\n\r\n  onMediaSourceClose() {\r\n    logger.log('media source closed');\r\n  }\r\n\r\n  onMediaSourceEnded() {\r\n    logger.log('media source ended');\r\n  }\r\n}\r\nexport default MSEMediaController;\r\n\r\n",
    "/*\r\n * Timeline Controller\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport CEA708Interpreter from '../utils/cea-708-interpreter';\r\n\r\nclass TimelineController extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls, Event.MEDIA_ATTACHING,\r\n                Event.MEDIA_DETACHING,\r\n                Event.FRAG_PARSING_USERDATA,\r\n                Event.MANIFEST_LOADING,\r\n                Event.FRAG_LOADED);\r\n\r\n    this.hls = hls;\r\n    this.config = hls.config;\r\n\r\n    if (this.config.enableCEA708Captions)\r\n    {\r\n      this.cea708Interpreter = new CEA708Interpreter();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    EventHandler.prototype.destroy.call(this);\r\n  }\r\n\r\n  onMediaAttaching(data) {\r\n    var media = this.media = data.media;\r\n    this.cea708Interpreter.attach(media);\r\n  }\r\n\r\n  onMediaDetaching() {\r\n    this.cea708Interpreter.detach();\r\n  }\r\n\r\n  onManifestLoading()\r\n  {\r\n    this.lastPts = Number.POSITIVE_INFINITY;\r\n  }\r\n\r\n  onFragLoaded(data)\r\n  {\r\n    var pts = data.frag.start; //Number.POSITIVE_INFINITY;\r\n\r\n    // if this is a frag for a previously loaded timerange, remove all captions\r\n    // TODO: consider just removing captions for the timerange\r\n    if (pts <= this.lastPts)\r\n    {\r\n      this.cea708Interpreter.clear();\r\n    }\r\n\r\n    this.lastPts = pts;\r\n  }\r\n\r\n  onFragParsingUserdata(data) {\r\n    // push all of the CEA-708 messages into the interpreter\r\n    // immediately. It will create the proper timestamps based on our PTS value\r\n    for (var i=0; i<data.samples.length; i++)\r\n    {\r\n      this.cea708Interpreter.push(data.samples[i].pts, data.samples[i].bytes);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TimelineController;\r\n",
    "/*\r\n *\r\n * This file contains an adaptation of the AES decryption algorithm\r\n * from the Standford Javascript Cryptography Library. That work is\r\n * covered by the following copyright and permissions notice:\r\n *\r\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\r\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\r\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\r\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * The views and conclusions contained in the software and documentation\r\n * are those of the authors and should not be interpreted as representing\r\n * official policies, either expressed or implied, of the authors.\r\n */\r\nclass AES {\r\n\r\n  /**\r\n   * Schedule out an AES key for both encryption and decryption. This\r\n   * is a low-level class. Use a cipher mode to do bulk encryption.\r\n   *\r\n   * @constructor\r\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\r\n   */\r\n  constructor(key) {\r\n    /**\r\n     * The expanded S-box and inverse S-box tables. These will be computed\r\n     * on the client so that we don't have to send them down the wire.\r\n     *\r\n     * There are two tables, _tables[0] is for encryption and\r\n     * _tables[1] is for decryption.\r\n     *\r\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\r\n     * last (_tables[01][4]) is the S-box itself.\r\n     *\r\n     * @private\r\n     */\r\n    this._tables = [[[],[],[],[],[]],[[],[],[],[],[]]];\r\n\r\n    this._precompute();\r\n\r\n    var i, j, tmp,\r\n    encKey, decKey,\r\n    sbox = this._tables[0][4], decTable = this._tables[1],\r\n    keyLen = key.length, rcon = 1;\r\n\r\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\r\n      throw new Error('Invalid aes key size=' + keyLen);\r\n    }\r\n\r\n    encKey = key.slice(0);\r\n    decKey = [];\r\n    this._key = [encKey, decKey];\r\n\r\n    // schedule encryption keys\r\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\r\n      tmp = encKey[i-1];\r\n\r\n      // apply sbox\r\n      if (i%keyLen === 0 || (keyLen === 8 && i%keyLen === 4)) {\r\n        tmp = sbox[tmp>>>24]<<24 ^ sbox[tmp>>16&255]<<16 ^ sbox[tmp>>8&255]<<8 ^ sbox[tmp&255];\r\n\r\n        // shift rows and add rcon\r\n        if (i%keyLen === 0) {\r\n          tmp = tmp<<8 ^ tmp>>>24 ^ rcon<<24;\r\n          rcon = rcon<<1 ^ (rcon>>7)*283;\r\n        }\r\n      }\r\n\r\n      encKey[i] = encKey[i-keyLen] ^ tmp;\r\n    }\r\n\r\n    // schedule decryption keys\r\n    for (j = 0; i; j++, i--) {\r\n      tmp = encKey[j&3 ? i : i - 4];\r\n      if (i<=4 || j<4) {\r\n        decKey[j] = tmp;\r\n      } else {\r\n        decKey[j] = decTable[0][sbox[tmp>>>24      ]] ^\r\n          decTable[1][sbox[tmp>>16  & 255]] ^\r\n          decTable[2][sbox[tmp>>8   & 255]] ^\r\n          decTable[3][sbox[tmp      & 255]];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Expand the S-box tables.\r\n   *\r\n   * @private\r\n   */\r\n  _precompute() {\r\n    var encTable = this._tables[0], decTable = this._tables[1],\r\n    sbox = encTable[4], sboxInv = decTable[4],\r\n    i, x, xInv, d=[], th=[], x2, x4, x8, s, tEnc, tDec;\r\n\r\n    // Compute double and third tables\r\n    for (i = 0; i < 256; i++) {\r\n      th[( d[i] = i<<1 ^ (i>>7)*283 )^i]=i;\r\n    }\r\n\r\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\r\n      // Compute sbox\r\n      s = xInv ^ xInv<<1 ^ xInv<<2 ^ xInv<<3 ^ xInv<<4;\r\n      s = s>>8 ^ s&255 ^ 99;\r\n      sbox[x] = s;\r\n      sboxInv[s] = x;\r\n\r\n      // Compute MixColumns\r\n      x8 = d[x4 = d[x2 = d[x]]];\r\n      tDec = x8*0x1010101 ^ x4*0x10001 ^ x2*0x101 ^ x*0x1010100;\r\n      tEnc = d[s]*0x101 ^ s*0x1010100;\r\n\r\n      for (i = 0; i < 4; i++) {\r\n        encTable[i][x] = tEnc = tEnc<<24 ^ tEnc>>>8;\r\n        decTable[i][s] = tDec = tDec<<24 ^ tDec>>>8;\r\n      }\r\n    }\r\n\r\n    // Compactify. Considerable speedup on Firefox.\r\n    for (i = 0; i < 5; i++) {\r\n      encTable[i] = encTable[i].slice(0);\r\n      decTable[i] = decTable[i].slice(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decrypt 16 bytes, specified as four 32-bit words.\r\n   * @param encrypted0 {number} the first word to decrypt\r\n   * @param encrypted1 {number} the second word to decrypt\r\n   * @param encrypted2 {number} the third word to decrypt\r\n   * @param encrypted3 {number} the fourth word to decrypt\r\n   * @param out {Int32Array} the array to write the decrypted words\r\n   * into\r\n   * @param offset {number} the offset into the output array to start\r\n   * writing results\r\n   * @return {Array} The plaintext.\r\n   */\r\n  decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\r\n    var key = this._key[1],\r\n    // state variables a,b,c,d are loaded with pre-whitened data\r\n    a = encrypted0 ^ key[0],\r\n    b = encrypted3 ^ key[1],\r\n    c = encrypted2 ^ key[2],\r\n    d = encrypted1 ^ key[3],\r\n    a2, b2, c2,\r\n\r\n    nInnerRounds = key.length / 4 - 2, // key.length === 2 ?\r\n    i,\r\n    kIndex = 4,\r\n    table = this._tables[1],\r\n\r\n    // load up the tables\r\n    table0    = table[0],\r\n    table1    = table[1],\r\n    table2    = table[2],\r\n    table3    = table[3],\r\n    sbox  = table[4];\r\n\r\n    // Inner rounds. Cribbed from OpenSSL.\r\n    for (i = 0; i < nInnerRounds; i++) {\r\n      a2 = table0[a>>>24] ^ table1[b>>16 & 255] ^ table2[c>>8 & 255] ^ table3[d & 255] ^ key[kIndex];\r\n      b2 = table0[b>>>24] ^ table1[c>>16 & 255] ^ table2[d>>8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\r\n      c2 = table0[c>>>24] ^ table1[d>>16 & 255] ^ table2[a>>8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\r\n      d  = table0[d>>>24] ^ table1[a>>16 & 255] ^ table2[b>>8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\r\n      kIndex += 4;\r\n      a=a2; b=b2; c=c2;\r\n    }\r\n\r\n    // Last round.\r\n    for (i = 0; i < 4; i++) {\r\n      out[(3 & -i) + offset] =\r\n        sbox[a>>>24      ]<<24 ^\r\n        sbox[b>>16  & 255]<<16 ^\r\n        sbox[c>>8   & 255]<<8  ^\r\n        sbox[d      & 255]     ^\r\n        key[kIndex++];\r\n      a2=a; a=b; b=c; c=d; d=a2;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AES;\r\n",
    "/*\r\n *\r\n * This file contains an adaptation of the AES decryption algorithm\r\n * from the Standford Javascript Cryptography Library. That work is\r\n * covered by the following copyright and permissions notice:\r\n *\r\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above\r\n *    copyright notice, this list of conditions and the following\r\n *    disclaimer in the documentation and/or other materials provided\r\n *    with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\r\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\r\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\r\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * The views and conclusions contained in the software and documentation\r\n * are those of the authors and should not be interpreted as representing\r\n * official policies, either expressed or implied, of the authors.\r\n */\r\n\r\nimport AES from './aes';\r\n\r\nclass AES128Decrypter {\r\n\r\n  constructor(key, initVector) {\r\n    this.key = key;\r\n    this.iv = initVector;\r\n  }\r\n\r\n  /**\r\n   * Convert network-order (big-endian) bytes into their little-endian\r\n   * representation.\r\n   */\r\n  ntoh(word) {\r\n    return (word << 24) |\r\n      ((word & 0xff00) << 8) |\r\n      ((word & 0xff0000) >> 8) |\r\n      (word >>> 24);\r\n  }\r\n\r\n\r\n  /**\r\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\r\n   * @param encrypted {Uint8Array} the encrypted bytes\r\n   * @param key {Uint32Array} the bytes of the decryption key\r\n   * @param initVector {Uint32Array} the initialization vector (IV) to\r\n   * use for the first round of CBC.\r\n   * @return {Uint8Array} the decrypted bytes\r\n   *\r\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\r\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\r\n   * @see https://tools.ietf.org/html/rfc2315\r\n   */\r\n  doDecrypt(encrypted, key, initVector) {\r\n    var\r\n      // word-level access to the encrypted bytes\r\n      encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2),\r\n\r\n    decipher = new AES(Array.prototype.slice.call(key)),\r\n\r\n    // byte and word-level access for the decrypted output\r\n    decrypted = new Uint8Array(encrypted.byteLength),\r\n    decrypted32 = new Int32Array(decrypted.buffer),\r\n\r\n    // temporary variables for working with the IV, encrypted, and\r\n    // decrypted data\r\n    init0, init1, init2, init3,\r\n    encrypted0, encrypted1, encrypted2, encrypted3,\r\n\r\n    // iteration variable\r\n    wordIx;\r\n\r\n    // pull out the words of the IV to ensure we don't modify the\r\n    // passed-in reference and easier access\r\n    init0 = ~~initVector[0];\r\n    init1 = ~~initVector[1];\r\n    init2 = ~~initVector[2];\r\n    init3 = ~~initVector[3];\r\n\r\n    // decrypt four word sequences, applying cipher-block chaining (CBC)\r\n    // to each decrypted block\r\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\r\n      // convert big-endian (network order) words into little-endian\r\n      // (javascript order)\r\n      encrypted0 = ~~this.ntoh(encrypted32[wordIx]);\r\n      encrypted1 = ~~this.ntoh(encrypted32[wordIx + 1]);\r\n      encrypted2 = ~~this.ntoh(encrypted32[wordIx + 2]);\r\n      encrypted3 = ~~this.ntoh(encrypted32[wordIx + 3]);\r\n\r\n      // decrypt the block\r\n      decipher.decrypt(encrypted0,\r\n          encrypted1,\r\n          encrypted2,\r\n          encrypted3,\r\n          decrypted32,\r\n          wordIx);\r\n\r\n      // XOR with the IV, and restore network byte-order to obtain the\r\n      // plaintext\r\n      decrypted32[wordIx]     = this.ntoh(decrypted32[wordIx] ^ init0);\r\n      decrypted32[wordIx + 1] = this.ntoh(decrypted32[wordIx + 1] ^ init1);\r\n      decrypted32[wordIx + 2] = this.ntoh(decrypted32[wordIx + 2] ^ init2);\r\n      decrypted32[wordIx + 3] = this.ntoh(decrypted32[wordIx + 3] ^ init3);\r\n\r\n      // setup the IV for the next round\r\n      init0 = encrypted0;\r\n      init1 = encrypted1;\r\n      init2 = encrypted2;\r\n      init3 = encrypted3;\r\n    }\r\n\r\n    return decrypted;\r\n  }\r\n\r\n  localDecrypt(encrypted, key, initVector, decrypted) {\r\n    var bytes = this.doDecrypt(encrypted,\r\n        key,\r\n        initVector);\r\n    decrypted.set(bytes, encrypted.byteOffset);\r\n  }\r\n\r\n  decrypt(encrypted) {\r\n    var\r\n      step = 4 * 8000,\r\n    //encrypted32 = new Int32Array(encrypted.buffer),\r\n    encrypted32 = new Int32Array(encrypted),\r\n    decrypted = new Uint8Array(encrypted.byteLength),\r\n    i = 0;\r\n\r\n    // split up the encryption job and do the individual chunks asynchronously\r\n    var key = this.key;\r\n    var initVector = this.iv;\r\n    this.localDecrypt(encrypted32.subarray(i, i + step), key, initVector, decrypted);\r\n\r\n    for (i = step; i < encrypted32.length; i += step) {\r\n      initVector = new Uint32Array([\r\n          this.ntoh(encrypted32[i - 4]),\r\n          this.ntoh(encrypted32[i - 3]),\r\n          this.ntoh(encrypted32[i - 2]),\r\n          this.ntoh(encrypted32[i - 1])\r\n      ]);\r\n      this.localDecrypt(encrypted32.subarray(i, i + step), key, initVector, decrypted);\r\n    }\r\n\r\n    return decrypted;\r\n  }\r\n}\r\n\r\nexport default AES128Decrypter;\r\n",
    "/*\r\n * AES128 decryption.\r\n */\r\n\r\nimport AES128Decrypter from './aes128-decrypter';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\nimport {logger} from '../utils/logger';\r\n\r\nclass Decrypter {\r\n\r\n  constructor(hls) {\r\n    this.hls = hls;\r\n    try {\r\n      const browserCrypto = window ? window.crypto : crypto;\r\n      this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\r\n      this.disableWebCrypto = !this.subtle;\r\n    } catch (e) {\r\n      this.disableWebCrypto = true;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n  }\r\n\r\n  decrypt(data, key, iv, callback) {\r\n    if (this.disableWebCrypto && this.hls.config.enableSoftwareAES) {\r\n      this.decryptBySoftware(data, key, iv, callback);\r\n    } else {\r\n      this.decryptByWebCrypto(data, key, iv, callback);\r\n    }\r\n  }\r\n\r\n  decryptByWebCrypto(data, key, iv, callback) {\r\n    logger.log('decrypting by WebCrypto API');\r\n\r\n    this.subtle.importKey('raw', key, { name : 'AES-CBC', length : 128 }, false, ['decrypt']).\r\n      then((importedKey) => {\r\n        this.subtle.decrypt({ name : 'AES-CBC', iv : iv.buffer }, importedKey, data).\r\n          then(callback).\r\n          catch ((err) => {\r\n            this.onWebCryptoError(err, data, key, iv, callback);\r\n          });\r\n      }).\r\n    catch ((err) => {\r\n      this.onWebCryptoError(err, data, key, iv, callback);\r\n    });\r\n  }\r\n\r\n  decryptBySoftware(data, key8, iv8, callback) {\r\n    logger.log('decrypting by JavaScript Implementation');\r\n\r\n    var view = new DataView(key8.buffer);\r\n    var key = new Uint32Array([\r\n        view.getUint32(0),\r\n        view.getUint32(4),\r\n        view.getUint32(8),\r\n        view.getUint32(12)\r\n    ]);\r\n\r\n    view = new DataView(iv8.buffer);\r\n    var iv = new Uint32Array([\r\n        view.getUint32(0),\r\n        view.getUint32(4),\r\n        view.getUint32(8),\r\n        view.getUint32(12)\r\n    ]);\r\n\r\n    var decrypter = new AES128Decrypter(key, iv);\r\n    callback(decrypter.decrypt(data).buffer);\r\n  }\r\n\r\n  onWebCryptoError(err, data, key, iv, callback) {\r\n    if (this.hls.config.enableSoftwareAES) {\r\n      logger.log('disabling to use WebCrypto API');\r\n      this.disableWebCrypto = true;\r\n      this.decryptBySoftware(data, key, iv, callback);\r\n    }\r\n    else {\r\n      logger.error(`decrypting error : ${err.message}`);\r\n      this.hls.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, details : ErrorDetails.FRAG_DECRYPT_ERROR, fatal : true, reason : err.message});\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Decrypter;\r\n",
    "/**\r\n * AAC demuxer\r\n */\r\nimport ADTS from './adts';\r\nimport {logger} from '../utils/logger';\r\nimport ID3 from '../demux/id3';\r\n\r\n class AACDemuxer {\r\n\r\n  constructor(observer,remuxerClass) {\r\n    this.observer = observer;\r\n    this.remuxerClass = remuxerClass;\r\n    this.remuxer = new this.remuxerClass(observer);\r\n    this._aacTrack = {type: 'audio', id :-1, sequenceNumber: 0, samples : [], len : 0};\r\n  }\r\n\r\n  static probe(data) {\r\n    // check if data contains ID3 timestamp and ADTS sync worc\r\n    var id3 = new ID3(data), adtsStartOffset,len;\r\n    if(id3.hasTimeStamp) {\r\n      // look for ADTS header (0xFFFx)\r\n      for (adtsStartOffset = id3.length, len = data.length; adtsStartOffset < len - 1; adtsStartOffset++) {\r\n        if ((data[adtsStartOffset] === 0xff) && (data[adtsStartOffset+1] & 0xf0) === 0xf0) {\r\n          //logger.log('ADTS sync word found !');\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  // feed incoming data to the front of the parsing pipeline\r\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration) {\r\n    var track = this._aacTrack,\r\n        id3 = new ID3(data),\r\n        pts = 90*id3.timeStamp,\r\n        config, adtsFrameSize, adtsStartOffset, adtsHeaderLen, stamp, nbSamples, len, aacSample;\r\n    // look for ADTS header (0xFFFx)\r\n    for (adtsStartOffset = id3.length, len = data.length; adtsStartOffset < len - 1; adtsStartOffset++) {\r\n      if ((data[adtsStartOffset] === 0xff) && (data[adtsStartOffset+1] & 0xf0) === 0xf0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!track.audiosamplerate) {\r\n      config = ADTS.getAudioConfig(this.observer,data, adtsStartOffset, audioCodec);\r\n      track.config = config.config;\r\n      track.audiosamplerate = config.samplerate;\r\n      track.channelCount = config.channelCount;\r\n      track.codec = config.codec;\r\n      track.timescale = this.remuxer.timescale;\r\n      track.duration = this.remuxer.timescale * duration;\r\n      logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\r\n    }\r\n    nbSamples = 0;\r\n    while ((adtsStartOffset + 5) < len) {\r\n      // retrieve frame size\r\n      adtsFrameSize = ((data[adtsStartOffset + 3] & 0x03) << 11);\r\n      // byte 4\r\n      adtsFrameSize |= (data[adtsStartOffset + 4] << 3);\r\n      // byte 5\r\n      adtsFrameSize |= ((data[adtsStartOffset + 5] & 0xE0) >>> 5);\r\n      adtsHeaderLen = (!!(data[adtsStartOffset + 1] & 0x01) ? 7 : 9);\r\n      adtsFrameSize -= adtsHeaderLen;\r\n      stamp = Math.round(pts + nbSamples * 1024 * 90000 / track.audiosamplerate);\r\n      //stamp = pes.pts;\r\n      //console.log('AAC frame, offset/length/pts:' + (adtsStartOffset+7) + '/' + adtsFrameSize + '/' + stamp.toFixed(0));\r\n      if ((adtsFrameSize > 0) && ((adtsStartOffset + adtsHeaderLen + adtsFrameSize) <= len)) {\r\n        aacSample = {unit: data.subarray(adtsStartOffset + adtsHeaderLen, adtsStartOffset + adtsHeaderLen + adtsFrameSize), pts: stamp, dts: stamp};\r\n        track.samples.push(aacSample);\r\n        track.len += adtsFrameSize;\r\n        adtsStartOffset += adtsFrameSize + adtsHeaderLen;\r\n        nbSamples++;\r\n        // look for ADTS header (0xFFFx)\r\n        for ( ; adtsStartOffset < (len - 1); adtsStartOffset++) {\r\n          if ((data[adtsStartOffset] === 0xff) && ((data[adtsStartOffset + 1] & 0xf0) === 0xf0)) {\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    this.remuxer.remux(this._aacTrack,{samples : []}, {samples : [ { pts: pts, dts : pts, unit : id3.payload} ]}, timeOffset);\r\n  }\r\n\r\n  destroy() {\r\n  }\r\n\r\n}\r\n\r\nexport default AACDemuxer;\r\n",
    "/**\r\n *  ADTS parser helper\r\n */\r\nimport {logger} from '../utils/logger';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\n class ADTS {\r\n\r\n  static getAudioConfig(observer, data, offset, audioCodec) {\r\n    var adtsObjectType, // :int\r\n        adtsSampleingIndex, // :int\r\n        adtsExtensionSampleingIndex, // :int\r\n        adtsChanelConfig, // :int\r\n        config,\r\n        userAgent = navigator.userAgent.toLowerCase(),\r\n        adtsSampleingRates = [\r\n            96000, 88200,\r\n            64000, 48000,\r\n            44100, 32000,\r\n            24000, 22050,\r\n            16000, 12000,\r\n            11025, 8000,\r\n            7350];\r\n    // byte 2\r\n    adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;\r\n    adtsSampleingIndex = ((data[offset + 2] & 0x3C) >>> 2);\r\n    if(adtsSampleingIndex > adtsSampleingRates.length-1) {\r\n      observer.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: `invalid ADTS sampling index:${adtsSampleingIndex}`});\r\n      return;\r\n    }\r\n    adtsChanelConfig = ((data[offset + 2] & 0x01) << 2);\r\n    // byte 3\r\n    adtsChanelConfig |= ((data[offset + 3] & 0xC0) >>> 6);\r\n    logger.log(`manifest codec:${audioCodec},ADTS data:type:${adtsObjectType},sampleingIndex:${adtsSampleingIndex}[${adtsSampleingRates[adtsSampleingIndex]}Hz],channelConfig:${adtsChanelConfig}`);\r\n    // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\r\n    if (userAgent.indexOf('firefox') !== -1) {\r\n      if (adtsSampleingIndex >= 6) {\r\n        adtsObjectType = 5;\r\n        config = new Array(4);\r\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\r\n        // there is a factor 2 between frame sample rate and output sample rate\r\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\r\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\r\n      } else {\r\n        adtsObjectType = 2;\r\n        config = new Array(2);\r\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\r\n      }\r\n      // Android : always use AAC\r\n    } else if (userAgent.indexOf('android') !== -1) {\r\n      adtsObjectType = 2;\r\n      config = new Array(2);\r\n      adtsExtensionSampleingIndex = adtsSampleingIndex;\r\n    } else {\r\n      /*  for other browsers (chrome ...)\r\n          always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)\r\n      */\r\n      adtsObjectType = 5;\r\n      config = new Array(4);\r\n      // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\r\n      if ((audioCodec && ((audioCodec.indexOf('mp4a.40.29') !== -1) ||\r\n                          (audioCodec.indexOf('mp4a.40.5') !== -1))) ||\r\n          (!audioCodec && adtsSampleingIndex >= 6)) {\r\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\r\n        // there is a factor 2 between frame sample rate and output sample rate\r\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\r\n        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;\r\n      } else {\r\n        // if (manifest codec is AAC) AND (frequency less than 24kHz OR nb channel is 1) OR (manifest codec not specified and mono audio)\r\n        // Chrome fails to play back with AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\r\n        if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && (adtsSampleingIndex >= 6 || adtsChanelConfig === 1) ||\r\n            (!audioCodec && adtsChanelConfig === 1)) {\r\n          adtsObjectType = 2;\r\n          config = new Array(2);\r\n        }\r\n        adtsExtensionSampleingIndex = adtsSampleingIndex;\r\n      }\r\n    }\r\n    /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\r\n        ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\r\n      Audio Profile / Audio Object Type\r\n      0: Null\r\n      1: AAC Main\r\n      2: AAC LC (Low Complexity)\r\n      3: AAC SSR (Scalable Sample Rate)\r\n      4: AAC LTP (Long Term Prediction)\r\n      5: SBR (Spectral Band Replication)\r\n      6: AAC Scalable\r\n     sampling freq\r\n      0: 96000 Hz\r\n      1: 88200 Hz\r\n      2: 64000 Hz\r\n      3: 48000 Hz\r\n      4: 44100 Hz\r\n      5: 32000 Hz\r\n      6: 24000 Hz\r\n      7: 22050 Hz\r\n      8: 16000 Hz\r\n      9: 12000 Hz\r\n      10: 11025 Hz\r\n      11: 8000 Hz\r\n      12: 7350 Hz\r\n      13: Reserved\r\n      14: Reserved\r\n      15: frequency is written explictly\r\n      Channel Configurations\r\n      These are the channel configurations:\r\n      0: Defined in AOT Specifc Config\r\n      1: 1 channel: front-center\r\n      2: 2 channels: front-left, front-right\r\n    */\r\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\r\n    config[0] = adtsObjectType << 3;\r\n    // samplingFrequencyIndex\r\n    config[0] |= (adtsSampleingIndex & 0x0E) >> 1;\r\n    config[1] |= (adtsSampleingIndex & 0x01) << 7;\r\n    // channelConfiguration\r\n    config[1] |= adtsChanelConfig << 3;\r\n    if (adtsObjectType === 5) {\r\n      // adtsExtensionSampleingIndex\r\n      config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;\r\n      config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;\r\n      // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???\r\n      //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\r\n      config[2] |= 2 << 2;\r\n      config[3] = 0;\r\n    }\r\n    return {config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: ('mp4a.40.' + adtsObjectType)};\r\n  }\r\n}\r\n\r\nexport default ADTS;\r\n",
    "/*  inline demuxer.\r\n *   probe fragments and instantiate appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)\r\n */\r\n\r\nimport Event from '../events';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\nimport AACDemuxer from '../demux/aacdemuxer';\r\nimport TSDemuxer from '../demux/tsdemuxer';\r\n\r\nclass DemuxerInline {\r\n\r\n  constructor(hls,remuxer) {\r\n    this.hls = hls;\r\n    this.remuxer = remuxer;\r\n  }\r\n\r\n  destroy() {\r\n    var demuxer = this.demuxer;\r\n    if (demuxer) {\r\n      demuxer.destroy();\r\n    }\r\n  }\r\n\r\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, tsStreamIndex) {\r\n    var demuxer = this.demuxer;\r\n    if (!demuxer) {\r\n      // probe for content type\r\n      if (TSDemuxer.probe(data)) {\r\n        demuxer = this.demuxer = new TSDemuxer(this.hls,this.remuxer);\r\n      } else if(AACDemuxer.probe(data)) {\r\n        demuxer = this.demuxer = new AACDemuxer(this.hls,this.remuxer);\r\n      } else {\r\n        this.hls.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'no demux matching with content found'});\r\n        return;\r\n      }\r\n    }\r\n    demuxer.push(data,audioCodec,videoCodec,timeOffset,cc,level,sn,duration,tsStreamIndex);\r\n  }\r\n}\r\n\r\nexport default DemuxerInline;\r\n",
    "/* demuxer web worker.\r\n *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.\r\n *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.\r\n */\r\n\r\n import DemuxerInline from '../demux/demuxer-inline';\r\n import Event from '../events';\r\n import EventEmitter from 'events';\r\n import MP4Remuxer from '../remux/mp4-remuxer';\r\n\r\nvar DemuxerWorker = function (self) {\r\n  // observer setup\r\n  var observer = new EventEmitter();\r\n  observer.trigger = function trigger (event, ...data) {\r\n    observer.emit(event, event, ...data);\r\n  };\r\n\r\n  observer.off = function off (event, ...data) {\r\n    observer.removeListener(event, ...data);\r\n  };\r\n  self.addEventListener('message', function (ev) {\r\n    //console.log('demuxer cmd:' + ev.data.cmd);\r\n    switch (ev.data.cmd) {\r\n      case 'init':\r\n        self.demuxer = new DemuxerInline(observer,MP4Remuxer);\r\n        break;\r\n      case 'demux':\r\n        var data = ev.data;\r\n        self.demuxer.push(new Uint8Array(data.data), data.audioCodec, data.videoCodec, data.timeOffset, data.cc, data.level, data.sn, data.duration, data.tsStreamIndex);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  // listen to events triggered by TS Demuxer\r\n  observer.on(Event.FRAG_PARSING_INIT_SEGMENT, function(ev, data) {\r\n    var objData = {event: ev};\r\n    var objTransferable = [];\r\n    if (data.audioCodec) {\r\n      objData.audioCodec = data.audioCodec;\r\n      objData.audioMoov = data.audioMoov.buffer;\r\n      objData.audioChannelCount = data.audioChannelCount;\r\n      objTransferable.push(objData.audioMoov);\r\n    }\r\n    if (data.videoCodec) {\r\n      objData.videoCodec = data.videoCodec;\r\n      objData.videoMoov = data.videoMoov.buffer;\r\n      objData.videoWidth = data.videoWidth;\r\n      objData.videoHeight = data.videoHeight;\r\n      objTransferable.push(objData.videoMoov);\r\n    }\r\n    // pass moov as transferable object (no copy)\r\n    self.postMessage(objData,objTransferable);\r\n  });\r\n\r\n  observer.on(Event.FRAG_PARSING_DATA, function(ev, data) {\r\n    var objData = {event: ev, type: data.type, startPTS: data.startPTS, endPTS: data.endPTS, startDTS: data.startDTS, endDTS: data.endDTS, moof: data.moof.buffer, mdat: data.mdat.buffer, nb: data.nb};\r\n    // pass moof/mdat data as transferable object (no copy)\r\n    self.postMessage(objData, [objData.moof, objData.mdat]);\r\n  });\r\n\r\n  observer.on(Event.FRAG_PARSED, function(event) {\r\n    self.postMessage({event: event});\r\n  });\r\n\r\n  observer.on(Event.ERROR, function(event, data) {\r\n    self.postMessage({event: event, data: data});\r\n  });\r\n\r\n  observer.on(Event.FRAG_PARSING_METADATA, function(event, data) {\r\n    var objData = {event: event, samples: data.samples};\r\n    self.postMessage(objData);\r\n  });\r\n\r\n  observer.on(Event.FRAG_PARSING_USERDATA, function(event, data) {\r\n    var objData = {event: event, samples: data.samples};\r\n    self.postMessage(objData);\r\n  });\r\n\r\n};\r\n\r\nexport default DemuxerWorker;\r\n\r\n",
    "import Event from '../events';\r\nimport DemuxerInline from '../demux/demuxer-inline';\r\nimport DemuxerWorker from '../demux/demuxer-worker';\r\nimport {logger} from '../utils/logger';\r\nimport MP4Remuxer from '../remux/mp4-remuxer';\r\nimport Decrypter from '../crypt/decrypter';\r\n\r\nclass Demuxer {\r\n\r\n  constructor(hls) {\r\n    this.hls = hls;\r\n    if (hls.config.enableWorker && (typeof(Worker) !== 'undefined')) {\r\n        logger.log('demuxing in webworker');\r\n        try {\r\n          var work = require('webworkify');\r\n          this.w = work(DemuxerWorker);\r\n          this.onwmsg = this.onWorkerMessage.bind(this);\r\n          this.w.addEventListener('message', this.onwmsg);\r\n          this.w.postMessage({cmd: 'init'});\r\n        } catch(err) {\r\n          logger.error('error while initializing DemuxerWorker, fallback on DemuxerInline');\r\n          this.demuxer = new DemuxerInline(hls,MP4Remuxer);\r\n        }\r\n      } else {\r\n        this.demuxer = new DemuxerInline(hls,MP4Remuxer);\r\n      }\r\n      this.demuxInitialized = true;\r\n  }\r\n\r\n  destroy() {\r\n    if (this.w) {\r\n      this.w.removeEventListener('message', this.onwmsg);\r\n      this.w.terminate();\r\n      this.w = null;\r\n    } else {\r\n      this.demuxer.destroy();\r\n      this.demuxer = null;\r\n    }\r\n    if (this.decrypter) {\r\n      this.decrypter.destroy();\r\n      this.decrypter = null;\r\n    }\r\n  }\r\n\r\n  pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration) {\r\n    var tsStreamIndex = this.hls.config.tsStreamIndex;\r\n\r\n    if (this.w) {\r\n      // post fragment payload as transferable objects (no copy)\r\n      this.w.postMessage({cmd: 'demux', data: data, audioCodec: audioCodec, videoCodec: videoCodec, timeOffset: timeOffset, cc: cc, level: level, sn : sn, duration: duration, tsStreamIndex: tsStreamIndex}, [data]);\r\n    } else {\r\n      this.demuxer.push(new Uint8Array(data), audioCodec, videoCodec, timeOffset, cc, level, sn, duration, tsStreamIndex);\r\n    }\r\n  }\r\n\r\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, decryptdata) {\r\n    if ((data.byteLength > 0) && (decryptdata != null) && (decryptdata.key != null) && (decryptdata.method === 'AES-128')) {\r\n      if (this.decrypter == null) {\r\n        this.decrypter = new Decrypter(this.hls);\r\n      }\r\n      \r\n      var localthis = this;\r\n      this.decrypter.decrypt(data, decryptdata.key, decryptdata.iv, function(decryptedData){\r\n        localthis.pushDecrypted(decryptedData, audioCodec, videoCodec, timeOffset, cc, level, sn, duration);\r\n      });\r\n    } else {\r\n      this.pushDecrypted(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration);\r\n    }\r\n  }\r\n\r\n  onWorkerMessage(ev) {\r\n    //console.log('onWorkerMessage:' + ev.data.event);\r\n    switch(ev.data.event) {\r\n      case Event.FRAG_PARSING_INIT_SEGMENT:\r\n        var obj = {};\r\n        if (ev.data.audioMoov) {\r\n          obj.audioMoov = new Uint8Array(ev.data.audioMoov);\r\n          obj.audioCodec = ev.data.audioCodec;\r\n          obj.audioChannelCount = ev.data.audioChannelCount;\r\n        }\r\n        if (ev.data.videoMoov) {\r\n          obj.videoMoov = new Uint8Array(ev.data.videoMoov);\r\n          obj.videoCodec = ev.data.videoCodec;\r\n          obj.videoWidth = ev.data.videoWidth;\r\n          obj.videoHeight = ev.data.videoHeight;\r\n        }\r\n        this.hls.trigger(Event.FRAG_PARSING_INIT_SEGMENT, obj);\r\n        break;\r\n      case Event.FRAG_PARSING_DATA:\r\n        this.hls.trigger(Event.FRAG_PARSING_DATA,{\r\n          moof: new Uint8Array(ev.data.moof),\r\n          mdat: new Uint8Array(ev.data.mdat),\r\n          startPTS: ev.data.startPTS,\r\n          endPTS: ev.data.endPTS,\r\n          startDTS: ev.data.startDTS,\r\n          endDTS: ev.data.endDTS,\r\n          type: ev.data.type,\r\n          nb: ev.data.nb\r\n        });\r\n        break;\r\n        case Event.FRAG_PARSING_METADATA:\r\n        this.hls.trigger(Event.FRAG_PARSING_METADATA, {\r\n          samples: ev.data.samples\r\n        });\r\n        break;\r\n        case Event.FRAG_PARSING_USERDATA:\r\n        this.hls.trigger(Event.FRAG_PARSING_USERDATA, {\r\n          samples: ev.data.samples\r\n        });\r\n        break;\r\n      default:\r\n        this.hls.trigger(ev.data.event, ev.data.data);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Demuxer;\r\n\r\n",
    "/**\r\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\r\n*/\r\n\r\nimport {logger} from '../utils/logger';\r\n\r\nclass ExpGolomb {\r\n\r\n  constructor(data) {\r\n    this.data = data;\r\n    // the number of bytes left to examine in this.data\r\n    this.bytesAvailable = this.data.byteLength;\r\n    // the current word being examined\r\n    this.word = 0; // :uint\r\n    // the number of bits left to examine in the current word\r\n    this.bitsAvailable = 0; // :uint\r\n  }\r\n\r\n  // ():void\r\n  loadWord() {\r\n    var\r\n      position = this.data.byteLength - this.bytesAvailable,\r\n      workingBytes = new Uint8Array(4),\r\n      availableBytes = Math.min(4, this.bytesAvailable);\r\n    if (availableBytes === 0) {\r\n      throw new Error('no bytes available');\r\n    }\r\n    workingBytes.set(this.data.subarray(position, position + availableBytes));\r\n    this.word = new DataView(workingBytes.buffer).getUint32(0);\r\n    // track the amount of this.data that has been processed\r\n    this.bitsAvailable = availableBytes * 8;\r\n    this.bytesAvailable -= availableBytes;\r\n  }\r\n\r\n  // (count:int):void\r\n  skipBits(count) {\r\n    var skipBytes; // :int\r\n    if (this.bitsAvailable > count) {\r\n      this.word <<= count;\r\n      this.bitsAvailable -= count;\r\n    } else {\r\n      count -= this.bitsAvailable;\r\n      skipBytes = count >> 3;\r\n      count -= (skipBytes >> 3);\r\n      this.bytesAvailable -= skipBytes;\r\n      this.loadWord();\r\n      this.word <<= count;\r\n      this.bitsAvailable -= count;\r\n    }\r\n  }\r\n\r\n  // (size:int):uint\r\n  readBits(size) {\r\n    var\r\n      bits = Math.min(this.bitsAvailable, size), // :uint\r\n      valu = this.word >>> (32 - bits); // :uint\r\n    if (size > 32) {\r\n      logger.error('Cannot read more than 32 bits at a time');\r\n    }\r\n    this.bitsAvailable -= bits;\r\n    if (this.bitsAvailable > 0) {\r\n      this.word <<= bits;\r\n    } else if (this.bytesAvailable > 0) {\r\n      this.loadWord();\r\n    }\r\n    bits = size - bits;\r\n    if (bits > 0) {\r\n      return valu << bits | this.readBits(bits);\r\n    } else {\r\n      return valu;\r\n    }\r\n  }\r\n\r\n  // ():uint\r\n  skipLZ() {\r\n    var leadingZeroCount; // :uint\r\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\r\n      if (0 !== (this.word & (0x80000000 >>> leadingZeroCount))) {\r\n        // the first bit of working word is 1\r\n        this.word <<= leadingZeroCount;\r\n        this.bitsAvailable -= leadingZeroCount;\r\n        return leadingZeroCount;\r\n      }\r\n    }\r\n    // we exhausted word and still have not found a 1\r\n    this.loadWord();\r\n    return leadingZeroCount + this.skipLZ();\r\n  }\r\n\r\n  // ():void\r\n  skipUEG() {\r\n    this.skipBits(1 + this.skipLZ());\r\n  }\r\n\r\n  // ():void\r\n  skipEG() {\r\n    this.skipBits(1 + this.skipLZ());\r\n  }\r\n\r\n  // ():uint\r\n  readUEG() {\r\n    var clz = this.skipLZ(); // :uint\r\n    return this.readBits(clz + 1) - 1;\r\n  }\r\n\r\n  // ():int\r\n  readEG() {\r\n    var valu = this.readUEG(); // :int\r\n    if (0x01 & valu) {\r\n      // the number is odd if the low order bit is set\r\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\r\n    } else {\r\n      return -1 * (valu >>> 1); // divide by two then make it negative\r\n    }\r\n  }\r\n\r\n  // Some convenience functions\r\n  // :Boolean\r\n  readBoolean() {\r\n    return 1 === this.readBits(1);\r\n  }\r\n\r\n  // ():int\r\n  readUByte() {\r\n    return this.readBits(8);\r\n  }\r\n\r\n  // ():int\r\n  readUShort() {\r\n    return this.readBits(16);\r\n  }\r\n    // ():int\r\n  readUInt() {\r\n    return this.readBits(32);\r\n  }\r\n\r\n  /**\r\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\r\n   * list is optionally transmitted as part of a sequence parameter\r\n   * set and is not relevant to transmuxing.\r\n   * @param count {number} the number of entries in this scaling list\r\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\r\n   */\r\n  skipScalingList(count) {\r\n    var\r\n      lastScale = 8,\r\n      nextScale = 8,\r\n      j,\r\n      deltaScale;\r\n    for (j = 0; j < count; j++) {\r\n      if (nextScale !== 0) {\r\n        deltaScale = this.readEG();\r\n        nextScale = (lastScale + deltaScale + 256) % 256;\r\n      }\r\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Read a sequence parameter set and return some interesting video\r\n   * properties. A sequence parameter set is the H264 metadata that\r\n   * describes the properties of upcoming video frames.\r\n   * @param data {Uint8Array} the bytes of a sequence parameter set\r\n   * @return {object} an object with configuration parsed from the\r\n   * sequence parameter set, including the dimensions of the\r\n   * associated video frames.\r\n   */\r\n  readSPS() {\r\n    var\r\n      frameCropLeftOffset = 0,\r\n      frameCropRightOffset = 0,\r\n      frameCropTopOffset = 0,\r\n      frameCropBottomOffset = 0,\r\n      sarScale = 1,\r\n      profileIdc,profileCompat,levelIdc,\r\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\r\n      picHeightInMapUnitsMinus1,\r\n      frameMbsOnlyFlag,\r\n      scalingListCount,\r\n      i;\r\n    this.readUByte();\r\n    profileIdc = this.readUByte(); // profile_idc\r\n    profileCompat = this.readBits(5); // constraint_set[0-4]_flag, u(5)\r\n    this.skipBits(3); // reserved_zero_3bits u(3),\r\n    levelIdc = this.readUByte(); //level_idc u(8)\r\n    this.skipUEG(); // seq_parameter_set_id\r\n    // some profiles have more optional data we don't need\r\n    if (profileIdc === 100 ||\r\n        profileIdc === 110 ||\r\n        profileIdc === 122 ||\r\n        profileIdc === 244 ||\r\n        profileIdc === 44  ||\r\n        profileIdc === 83  ||\r\n        profileIdc === 86  ||\r\n        profileIdc === 118 ||\r\n        profileIdc === 128) {\r\n      var chromaFormatIdc = this.readUEG();\r\n      if (chromaFormatIdc === 3) {\r\n        this.skipBits(1); // separate_colour_plane_flag\r\n      }\r\n      this.skipUEG(); // bit_depth_luma_minus8\r\n      this.skipUEG(); // bit_depth_chroma_minus8\r\n      this.skipBits(1); // qpprime_y_zero_transform_bypass_flag\r\n      if (this.readBoolean()) { // seq_scaling_matrix_present_flag\r\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\r\n        for (i = 0; i < scalingListCount; i++) {\r\n          if (this.readBoolean()) { // seq_scaling_list_present_flag[ i ]\r\n            if (i < 6) {\r\n              this.skipScalingList(16);\r\n            } else {\r\n              this.skipScalingList(64);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.skipUEG(); // log2_max_frame_num_minus4\r\n    var picOrderCntType = this.readUEG();\r\n    if (picOrderCntType === 0) {\r\n      this.readUEG(); //log2_max_pic_order_cnt_lsb_minus4\r\n    } else if (picOrderCntType === 1) {\r\n      this.skipBits(1); // delta_pic_order_always_zero_flag\r\n      this.skipEG(); // offset_for_non_ref_pic\r\n      this.skipEG(); // offset_for_top_to_bottom_field\r\n      numRefFramesInPicOrderCntCycle = this.readUEG();\r\n      for(i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\r\n        this.skipEG(); // offset_for_ref_frame[ i ]\r\n      }\r\n    }\r\n    this.skipUEG(); // max_num_ref_frames\r\n    this.skipBits(1); // gaps_in_frame_num_value_allowed_flag\r\n    picWidthInMbsMinus1 = this.readUEG();\r\n    picHeightInMapUnitsMinus1 = this.readUEG();\r\n    frameMbsOnlyFlag = this.readBits(1);\r\n    if (frameMbsOnlyFlag === 0) {\r\n      this.skipBits(1); // mb_adaptive_frame_field_flag\r\n    }\r\n    this.skipBits(1); // direct_8x8_inference_flag\r\n    if (this.readBoolean()) { // frame_cropping_flag\r\n      frameCropLeftOffset = this.readUEG();\r\n      frameCropRightOffset = this.readUEG();\r\n      frameCropTopOffset = this.readUEG();\r\n      frameCropBottomOffset = this.readUEG();\r\n    }\r\n    if (this.readBoolean()) {\r\n      // vui_parameters_present_flag\r\n      if (this.readBoolean()) {\r\n        // aspect_ratio_info_present_flag\r\n        let sarRatio;\r\n        const aspectRatioIdc = this.readUByte();\r\n        switch (aspectRatioIdc) {\r\n          //case 1: sarRatio = [1,1]; break;\r\n          case 2: sarRatio = [12,11]; break;\r\n          case 3: sarRatio = [10,11]; break;\r\n          case 4: sarRatio = [16,11]; break;\r\n          case 5: sarRatio = [40,33]; break;\r\n          case 6: sarRatio = [24,11]; break;\r\n          case 7: sarRatio = [20,11]; break;\r\n          case 8: sarRatio = [32,11]; break;\r\n          case 9: sarRatio = [80,33]; break;\r\n          case 10: sarRatio = [18,11]; break;\r\n          case 11: sarRatio = [15,11]; break;\r\n          case 12: sarRatio = [64,33]; break;\r\n          case 13: sarRatio = [160,99]; break;\r\n          case 14: sarRatio = [4,3]; break;\r\n          case 15: sarRatio = [3,2]; break;\r\n          case 16: sarRatio = [2,1]; break;\r\n          case 255: {\r\n            sarRatio = [this.readUByte() << 8 | this.readUByte(), this.readUByte() << 8 | this.readUByte()];\r\n            break;\r\n          }\r\n        }\r\n        if (sarRatio) {\r\n          sarScale = sarRatio[0] / sarRatio[1];\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      width: (((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale,\r\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset))\r\n    };\r\n  }\r\n\r\n  readSliceType() {\r\n    // skip NALu type\r\n    this.readUByte();\r\n    // discard first_mb_in_slice\r\n    this.readUEG();\r\n    // return slice_type\r\n    return this.readUEG();\r\n  }\r\n}\r\n\r\nexport default ExpGolomb;\r\n",
    "/**\r\n * ID3 parser\r\n */\r\nimport {logger} from '../utils/logger';\r\n//import Hex from '../utils/hex';\r\n\r\n class ID3 {\r\n\r\n  constructor(data) {\r\n    this._hasTimeStamp = false;\r\n    var offset = 0, byte1,byte2,byte3,byte4,tagSize,endPos,header,len;\r\n      do {\r\n        header = this.readUTF(data,offset,3);\r\n        offset+=3;\r\n          // first check for ID3 header\r\n          if (header === 'ID3') {\r\n              // skip 24 bits\r\n              offset += 3;\r\n              // retrieve tag(s) length\r\n              byte1 = data[offset++] & 0x7f;\r\n              byte2 = data[offset++] & 0x7f;\r\n              byte3 = data[offset++] & 0x7f;\r\n              byte4 = data[offset++] & 0x7f;\r\n              tagSize = (byte1 << 21) + (byte2 << 14) + (byte3 << 7) + byte4;\r\n              endPos = offset + tagSize;\r\n              //logger.log(`ID3 tag found, size/end: ${tagSize}/${endPos}`);\r\n\r\n              // read ID3 tags\r\n              this._parseID3Frames(data, offset,endPos);\r\n              offset = endPos;\r\n          } else if (header === '3DI') {\r\n              // http://id3.org/id3v2.4.0-structure chapter 3.4.   ID3v2 footer\r\n              offset += 7;\r\n                  logger.log(`3DI footer found, end: ${offset}`);\r\n          } else {\r\n              offset -= 3;\r\n              len = offset;\r\n                  if (len) {\r\n                      //logger.log(`ID3 len: ${len}`);\r\n                      if (!this.hasTimeStamp) {\r\n                          logger.warn('ID3 tag found, but no timestamp');\r\n                      }\r\n                      this._length = len;\r\n                      this._payload = data.subarray(0,len);\r\n                  }\r\n              return;\r\n          }\r\n      } while (true);\r\n  }\r\n\r\n  readUTF(data,start,len) {\r\n\r\n    var result = '',offset = start, end = start + len;\r\n    do {\r\n      result += String.fromCharCode(data[offset++]);\r\n    } while(offset < end);\r\n    return result;\r\n  }\r\n\r\n  _parseID3Frames(data,offset,endPos) {\r\n    var tagId,tagLen,tagStart,tagFlags,timestamp;\r\n    while(offset + 8 <= endPos) {\r\n      tagId = this.readUTF(data,offset,4);\r\n      offset +=4;\r\n\r\n      tagLen = data[offset++] << 24 +\r\n                data[offset++] << 16 +\r\n                data[offset++] << 8 +\r\n                data[offset++];\r\n\r\n      tagFlags = data[offset++] << 8 +\r\n                  data[offset++];\r\n\r\n      tagStart = offset;\r\n      //logger.log(\"ID3 tag id:\" + tagId);\r\n      switch(tagId) {\r\n        case 'PRIV':\r\n            //logger.log('parse frame:' + Hex.hexDump(data.subarray(offset,endPos)));\r\n            // owner should be \"com.apple.streaming.transportStreamTimestamp\"\r\n            if (this.readUTF(data,offset,44) === 'com.apple.streaming.transportStreamTimestamp') {\r\n                offset+=44;\r\n                // smelling even better ! we found the right descriptor\r\n                // skip null character (string end) + 3 first bytes\r\n                offset+= 4;\r\n\r\n                // timestamp is 33 bit expressed as a big-endian eight-octet number, with the upper 31 bits set to zero.\r\n                var pts33Bit  = data[offset++] & 0x1;\r\n                this._hasTimeStamp = true;\r\n\r\n                timestamp = ((data[offset++] << 23) +\r\n                             (data[offset++] << 15) +\r\n                             (data[offset++] <<  7) +\r\n                             data[offset++]) /45;\r\n\r\n                if (pts33Bit) {\r\n                    timestamp   += 47721858.84; // 2^32 / 90\r\n                }\r\n                timestamp = Math.round(timestamp);\r\n                logger.trace(`ID3 timestamp found: ${timestamp}`);\r\n                this._timeStamp = timestamp;\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n    }\r\n  }\r\n\r\n  get hasTimeStamp() {\r\n    return this._hasTimeStamp;\r\n  }\r\n\r\n  get timeStamp() {\r\n    return this._timeStamp;\r\n  }\r\n\r\n  get length() {\r\n    return this._length;\r\n  }\r\n\r\n  get payload() {\r\n    return this._payload;\r\n  }\r\n\r\n}\r\n\r\nexport default ID3;\r\n\r\n",
    "/**\r\n * highly optimized TS demuxer:\r\n * parse PAT, PMT\r\n * extract PES packet from audio and video PIDs\r\n * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet\r\n * trigger the remuxer upon parsing completion\r\n * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.\r\n * it also controls the remuxing process :\r\n * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.\r\n*/\r\n\r\n import ADTS from './adts';\r\n import Event from '../events';\r\n import ExpGolomb from './exp-golomb';\r\n// import Hex from '../utils/hex';\r\n import {logger} from '../utils/logger';\r\n import {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\n class TSDemuxer {\r\n\r\n  constructor(observer,remuxerClass) {\r\n    this.observer = observer;\r\n    this.remuxerClass = remuxerClass;\r\n    this.lastCC = 0;\r\n    this.remuxer = new this.remuxerClass(observer);\r\n    this._userData = [];\r\n  }\r\n\r\n  static probe(data) {\r\n    // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47\r\n    if (data.length >= 3*188 && data[0] === 0x47 && data[188] === 0x47 && data[2*188] === 0x47) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  switchLevel() {\r\n    this.pmtParsed = false;\r\n    this._pmtId = -1;\r\n    this.lastAacPTS = null;\r\n    this.aacOverFlow = null;\r\n    this._avcTrack = {type: 'video', id :-1, sequenceNumber: 0, samples : [], len : 0, nbNalu : 0};\r\n    this._aacTrack = {type: 'audio', id :-1, sequenceNumber: 0, samples : [], len : 0};\r\n    this._id3Track = {type: 'id3', id :-1, sequenceNumber: 0, samples : [], len : 0};\r\n    this._txtTrack = {type: 'text', id: -1, sequenceNumber: 0, samples: [], len: 0};\r\n    this.remuxer.switchLevel();\r\n  }\r\n\r\n  insertDiscontinuity() {\r\n    this.switchLevel();\r\n    this.remuxer.insertDiscontinuity();\r\n  }\r\n\r\n  // feed incoming data to the front of the parsing pipeline\r\n  push(data, audioCodec, videoCodec, timeOffset, cc, level, sn, duration, tsStreamIndex) {\r\n    var avcData, aacData, id3Data,\r\n        start, len = data.length, stt, pid, atf, offset;\r\n    this.audioCodec = audioCodec;\r\n    this.videoCodec = videoCodec;\r\n    this.timeOffset = timeOffset;\r\n    this._duration = duration;\r\n    this.contiguous = false;\r\n    if (cc !== this.lastCC) {\r\n      logger.log('discontinuity detected');\r\n      this.insertDiscontinuity();\r\n      this.lastCC = cc;\r\n    } else if (level !== this.lastLevel) {\r\n      logger.log('level switch detected');\r\n      this.switchLevel();\r\n      this.lastLevel = level;\r\n    } else if (sn === (this.lastSN+1)) {\r\n      this.contiguous = true;\r\n    }\r\n    this.lastSN = sn;\r\n\r\n    if(!this.contiguous) {\r\n      // flush any partial content\r\n      this.aacOverFlow = null;\r\n    }\r\n\r\n    var pmtParsed = this.pmtParsed,\r\n        avcId = this._avcTrack.id,\r\n        aacId = this._aacTrack.id,\r\n        id3Id = this._id3Track.id;\r\n    // loop through TS packets\r\n    for (start = 0; start < len; start += 188) {\r\n      if (data[start] === 0x47) {\r\n        stt = !!(data[start + 1] & 0x40);\r\n        // pid is a 13-bit field starting at the last bit of TS[1]\r\n        pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];\r\n        atf = (data[start + 3] & 0x30) >> 4;\r\n        // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.\r\n        if (atf > 1) {\r\n          offset = start + 5 + data[start + 4];\r\n          // continue if there is only adaptation field\r\n          if (offset === (start + 188)) {\r\n            continue;\r\n          }\r\n        } else {\r\n          offset = start + 4;\r\n        }\r\n        if (pmtParsed) {\r\n          if (pid === avcId) {\r\n            if (stt) {\r\n              if (avcData) {\r\n                this._parseAVCPES(this._parsePES(avcData));\r\n              }\r\n              avcData = {data: [], size: 0};\r\n            }\r\n            if (avcData) {\r\n              avcData.data.push(data.subarray(offset, start + 188));\r\n              avcData.size += start + 188 - offset;\r\n            }\r\n          } else if (pid === aacId) {\r\n            if (stt) {\r\n              if (aacData) {\r\n                this._parseAACPES(this._parsePES(aacData));\r\n              }\r\n              aacData = {data: [], size: 0};\r\n            }\r\n            if (aacData) {\r\n              aacData.data.push(data.subarray(offset, start + 188));\r\n              aacData.size += start + 188 - offset;\r\n            }\r\n          } else if (pid === id3Id) {\r\n            if (stt) {\r\n              if (id3Data) {\r\n                this._parseID3PES(this._parsePES(id3Data));\r\n              }\r\n              id3Data = {data: [], size: 0};\r\n            }\r\n            if (id3Data) {\r\n              id3Data.data.push(data.subarray(offset, start + 188));\r\n              id3Data.size += start + 188 - offset;\r\n            }\r\n          }\r\n        } else {\r\n          if (stt) {\r\n            offset += data[offset] + 1;\r\n          }\r\n          if (pid === 0) {\r\n            this._parsePAT(data, offset);\r\n          } else if (pid === this._pmtId) {\r\n            this._parsePMT(data, offset, tsStreamIndex);\r\n            pmtParsed = this.pmtParsed = true;\r\n            avcId = this._avcTrack.id;\r\n            aacId = this._aacTrack.id;\r\n            id3Id = this._id3Track.id;\r\n          }\r\n        }\r\n      } else {\r\n        this.observer.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'TS packet did not start with 0x47'});\r\n      }\r\n    }\r\n    // parse last PES packet\r\n    if (avcData) {\r\n      this._parseAVCPES(this._parsePES(avcData));\r\n    }\r\n    if (aacData) {\r\n      this._parseAACPES(this._parsePES(aacData));\r\n    }\r\n    if (id3Data) {\r\n      this._parseID3PES(this._parsePES(id3Data));\r\n    }\r\n    this.remux();\r\n  }\r\n\r\n  remux() {\r\n    this.remuxer.remux(this._aacTrack, this._avcTrack, this._id3Track, this._txtTrack, this.timeOffset, this.contiguous);\r\n  }\r\n\r\n  destroy() {\r\n    this.switchLevel();\r\n    this._initPTS = this._initDTS = undefined;\r\n    this._duration = 0;\r\n  }\r\n\r\n  _parsePAT(data, offset) {\r\n    // skip the PSI header and parse the first PMT entry\r\n    this._pmtId  = (data[offset + 10] & 0x1F) << 8 | data[offset + 11];\r\n    //logger.log('PMT PID:'  + this._pmtId);\r\n  }\r\n\r\n  /*\r\n   * Enhanced to parse out a given tsStreamIndex for the special case where a ts fragment may contain multiple streams.\r\n   * The out-of-the-box behavior assumed a single stream, so if there were multiple then it went with the last one found.\r\n   * Now it keeps count of the streams encountered and will extract only the one desired.\r\n   * This is done based on the tsStreamIndex configuration provided to the Hls instance upon construction. If not supplied, it defaults to 0.\r\n   */\r\n  _parsePMT(data, offset, tsStreamIndex=0) {\r\n    var sectionLength, tableEnd, programInfoLength, pid;\r\n    var currentVideoStreamIndex = 0, currentAudioStreamIndex = 0;\r\n    sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];\r\n    tableEnd = offset + 3 + sectionLength - 4;\r\n    // to determine where the table is, we have to figure out how\r\n    // long the program info descriptors are\r\n    programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];\r\n    // advance the offset to the first entry in the mapping table\r\n    offset += 12 + programInfoLength;\r\n    while (offset < tableEnd) {\r\n      pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];\r\n      switch(data[offset]) {\r\n        // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)\r\n        case 0x0f:\r\n          //logger.log('AAC PID:'  + pid);\r\n          if (currentAudioStreamIndex === tsStreamIndex) {\r\n            this._aacTrack.id = pid;\r\n          }\r\n          ++currentAudioStreamIndex;\r\n          break;\r\n        // Packetized metadata (ID3)\r\n        case 0x15:\r\n          //logger.log('ID3 PID:'  + pid);\r\n          this._id3Track.id = pid;\r\n          break;\r\n        // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)\r\n        case 0x1b:\r\n          //logger.log('AVC PID:'  + pid);\r\n          if (currentVideoStreamIndex === tsStreamIndex) {\r\n            this._avcTrack.id = pid;\r\n          }\r\n          ++currentVideoStreamIndex;\r\n          break;\r\n        default:\r\n        logger.log('unkown stream type:'  + data[offset]);\r\n        break;\r\n      }\r\n      // move to the next table entry\r\n      // skip past the elementary stream descriptors, if present\r\n      offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;\r\n    }\r\n  }\r\n\r\n  _parsePES(stream) {\r\n    var i = 0, frag, pesFlags, pesPrefix, pesLen, pesHdrLen, pesData, pesPts, pesDts, payloadStartOffset;\r\n    //retrieve PTS/DTS from first fragment\r\n    frag = stream.data[0];\r\n    pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];\r\n    if (pesPrefix === 1) {\r\n      pesLen = (frag[4] << 8) + frag[5];\r\n      pesFlags = frag[7];\r\n      if (pesFlags & 0xC0) {\r\n        /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\r\n            as PTS / DTS is 33 bit we cannot use bitwise operator in JS,\r\n            as Bitwise operators treat their operands as a sequence of 32 bits */\r\n        pesPts = (frag[9] & 0x0E) * 536870912 +// 1 << 29\r\n          (frag[10] & 0xFF) * 4194304 +// 1 << 22\r\n          (frag[11] & 0xFE) * 16384 +// 1 << 14\r\n          (frag[12] & 0xFF) * 128 +// 1 << 7\r\n          (frag[13] & 0xFE) / 2;\r\n          // check if greater than 2^32 -1\r\n          if (pesPts > 4294967295) {\r\n            // decrement 2^33\r\n            pesPts -= 8589934592;\r\n          }\r\n        if (pesFlags & 0x40) {\r\n          pesDts = (frag[14] & 0x0E ) * 536870912 +// 1 << 29\r\n            (frag[15] & 0xFF ) * 4194304 +// 1 << 22\r\n            (frag[16] & 0xFE ) * 16384 +// 1 << 14\r\n            (frag[17] & 0xFF ) * 128 +// 1 << 7\r\n            (frag[18] & 0xFE ) / 2;\r\n          // check if greater than 2^32 -1\r\n          if (pesDts > 4294967295) {\r\n            // decrement 2^33\r\n            pesDts -= 8589934592;\r\n          }\r\n        } else {\r\n          pesDts = pesPts;\r\n        }\r\n      }\r\n      pesHdrLen = frag[8];\r\n      payloadStartOffset = pesHdrLen + 9;\r\n      // trim PES header\r\n      stream.data[0] = stream.data[0].subarray(payloadStartOffset);\r\n      stream.size -= payloadStartOffset;\r\n      //reassemble PES packet\r\n      pesData = new Uint8Array(stream.size);\r\n      // reassemble the packet\r\n      while (stream.data.length) {\r\n        frag = stream.data.shift();\r\n        pesData.set(frag, i);\r\n        i += frag.byteLength;\r\n      }\r\n      return {data: pesData, pts: pesPts, dts: pesDts, len: pesLen};\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  _parseAVCPES(pes) {\r\n    var track = this._avcTrack,\r\n        samples = track.samples,\r\n        units = this._parseAVCNALu(pes.data),\r\n        units2 = [],\r\n        debug = false,\r\n        key = false,\r\n        length = 0,\r\n        expGolombDecoder,\r\n        avcSample,\r\n        push,\r\n        i;\r\n    // no NALu found\r\n    if (units.length === 0 && samples.length > 0) {\r\n      // append pes.data to previous NAL unit\r\n      var lastavcSample = samples[samples.length - 1];\r\n      var lastUnit = lastavcSample.units.units[lastavcSample.units.units.length - 1];\r\n      var tmp = new Uint8Array(lastUnit.data.byteLength + pes.data.byteLength);\r\n      tmp.set(lastUnit.data, 0);\r\n      tmp.set(pes.data, lastUnit.data.byteLength);\r\n      lastUnit.data = tmp;\r\n      lastavcSample.units.length += pes.data.byteLength;\r\n      track.len += pes.data.byteLength;\r\n    }\r\n    //free pes.data to save up some memory\r\n    pes.data = null;\r\n    var debugString = '';\r\n\r\n    units.forEach(unit => {\r\n      switch(unit.type) {\r\n        //NDR\r\n         case 1:\r\n           push = true;\r\n           if(debug) {\r\n            debugString += 'NDR ';\r\n           }\r\n           break;\r\n        //IDR\r\n        case 5:\r\n          push = true;\r\n          if(debug) {\r\n            debugString += 'IDR ';\r\n          }\r\n          key = true;\r\n          break;\r\n        //SEI\r\n        case 6:\r\n          push = true;\r\n          if(debug) {\r\n            debugString += 'SEI ';\r\n          }\r\n          expGolombDecoder = new ExpGolomb(unit.data);\r\n\r\n          // skip frameType\r\n          expGolombDecoder.readUByte();\r\n\r\n          var payloadType = expGolombDecoder.readUByte();\r\n\r\n          // TODO: there can be more than one payload in an SEI packet...\r\n          // TODO: need to read type and size in a while loop to get them all\r\n          if (payloadType === 4)\r\n          {\r\n            var payloadSize = 0;\r\n\r\n            do {\r\n              payloadSize = expGolombDecoder.readUByte();\r\n            }\r\n            while (payloadSize === 255);\r\n\r\n            var countryCode = expGolombDecoder.readUByte();\r\n\r\n            if (countryCode === 181)\r\n            {\r\n              var providerCode = expGolombDecoder.readUShort();\r\n\r\n              if (providerCode === 49)\r\n              {\r\n                var userStructure = expGolombDecoder.readUInt();\r\n\r\n                if (userStructure === 0x47413934)\r\n                {\r\n                  var userDataType = expGolombDecoder.readUByte();\r\n\r\n                  // Raw CEA-608 bytes wrapped in CEA-708 packet\r\n                  if (userDataType === 3)\r\n                  {\r\n                    var firstByte = expGolombDecoder.readUByte();\r\n                    var secondByte = expGolombDecoder.readUByte();\r\n\r\n                    var totalCCs = 31 & firstByte;\r\n                    var byteArray = [firstByte, secondByte];\r\n\r\n                    for (i=0; i<totalCCs; i++)\r\n                    {\r\n                      // 3 bytes per CC\r\n                      byteArray.push(expGolombDecoder.readUByte());\r\n                      byteArray.push(expGolombDecoder.readUByte());\r\n                      byteArray.push(expGolombDecoder.readUByte());\r\n                    }\r\n\r\n                    this._txtTrack.samples.push({type: 3, pts: pes.pts, bytes: byteArray});\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        //SPS\r\n        case 7:\r\n          push = true;\r\n          if(debug) {\r\n            debugString += 'SPS ';\r\n          }\r\n          if(!track.sps) {\r\n            expGolombDecoder = new ExpGolomb(unit.data);\r\n            var config = expGolombDecoder.readSPS();\r\n            track.width = config.width;\r\n            track.height = config.height;\r\n            track.sps = [unit.data];\r\n            track.timescale = this.remuxer.timescale;\r\n            track.duration = this.remuxer.timescale * this._duration;\r\n            var codecarray = unit.data.subarray(1, 4);\r\n            var codecstring = 'avc1.';\r\n            for (i = 0; i < 3; i++) {\r\n              var h = codecarray[i].toString(16);\r\n              if (h.length < 2) {\r\n                h = '0' + h;\r\n              }\r\n              codecstring += h;\r\n            }\r\n            track.codec = codecstring;\r\n          }\r\n          break;\r\n        //PPS\r\n        case 8:\r\n          push = true;\r\n          if(debug) {\r\n            debugString += 'PPS ';\r\n          }\r\n          if (!track.pps) {\r\n            track.pps = [unit.data];\r\n          }\r\n          break;\r\n        case 9:\r\n          push = false;\r\n          if(debug) {\r\n            debugString += 'AUD ';\r\n          }\r\n          break;\r\n        default:\r\n          push = false;\r\n          debugString += 'unknown NAL ' + unit.type + ' ';\r\n          break;\r\n      }\r\n      if(push) {\r\n        units2.push(unit);\r\n        length+=unit.data.byteLength;\r\n      }\r\n    });\r\n    if(debug || debugString.length) {\r\n      logger.log(debugString);\r\n    }\r\n    //build sample from PES\r\n    // Annex B to MP4 conversion to be done\r\n    if (units2.length) {\r\n      // only push AVC sample if keyframe already found. browsers expect a keyframe at first to start decoding\r\n      if (key === true || track.sps ) {\r\n        avcSample = {units: { units : units2, length : length}, pts: pes.pts, dts: pes.dts, key: key};\r\n        samples.push(avcSample);\r\n        track.len += length;\r\n        track.nbNalu += units2.length;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  _parseAVCNALu(array) {\r\n    var i = 0, len = array.byteLength, value, overflow, state = 0;\r\n    var units = [], unit, unitType, lastUnitStart, lastUnitType;\r\n    //logger.log('PES:' + Hex.hexDump(array));\r\n    while (i < len) {\r\n      value = array[i++];\r\n      // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\r\n      switch (state) {\r\n        case 0:\r\n          if (value === 0) {\r\n            state = 1;\r\n          }\r\n          break;\r\n        case 1:\r\n          if( value === 0) {\r\n            state = 2;\r\n          } else {\r\n            state = 0;\r\n          }\r\n          break;\r\n        case 2:\r\n        case 3:\r\n          if( value === 0) {\r\n            state = 3;\r\n          } else if (value === 1 && i < len) {\r\n            unitType = array[i] & 0x1f;\r\n            //logger.log('find NALU @ offset:' + i + ',type:' + unitType);\r\n            if (lastUnitStart) {\r\n              unit = {data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType};\r\n              //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\r\n              units.push(unit);\r\n            } else {\r\n              // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.\r\n              overflow  = i - state - 1;\r\n              if (overflow) {\r\n                var track = this._avcTrack,\r\n                    samples = track.samples;\r\n                //logger.log('first NALU found with overflow:' + overflow);\r\n                if (samples.length) {\r\n                  var lastavcSample = samples[samples.length - 1],\r\n                      lastUnits = lastavcSample.units.units,\r\n                      lastUnit = lastUnits[lastUnits.length - 1],\r\n                      tmp = new Uint8Array(lastUnit.data.byteLength + overflow);\r\n                  tmp.set(lastUnit.data, 0);\r\n                  tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);\r\n                  lastUnit.data = tmp;\r\n                  lastavcSample.units.length += overflow;\r\n                  track.len += overflow;\r\n                }\r\n              }\r\n            }\r\n            lastUnitStart = i;\r\n            lastUnitType = unitType;\r\n            state = 0;\r\n          } else {\r\n            state = 0;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (lastUnitStart) {\r\n      unit = {data: array.subarray(lastUnitStart, len), type: lastUnitType};\r\n      units.push(unit);\r\n      //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);\r\n    }\r\n    return units;\r\n  }\r\n\r\n  _parseAACPES(pes) {\r\n    var track = this._aacTrack,\r\n        data = pes.data,\r\n        pts = pes.pts,\r\n        startOffset = 0,\r\n        duration = this._duration,\r\n        audioCodec = this.audioCodec,\r\n        aacOverFlow = this.aacOverFlow,\r\n        lastAacPTS = this.lastAacPTS,\r\n        config, frameLength, frameDuration, frameIndex, offset, headerLength, stamp, len, aacSample;\r\n    if (aacOverFlow) {\r\n      var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);\r\n      tmp.set(aacOverFlow, 0);\r\n      tmp.set(data, aacOverFlow.byteLength);\r\n      //logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);\r\n      data = tmp;\r\n    }\r\n    // look for ADTS header (0xFFFx)\r\n    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {\r\n      if ((data[offset] === 0xff) && (data[offset+1] & 0xf0) === 0xf0) {\r\n        break;\r\n      }\r\n    }\r\n    // if ADTS header does not start straight from the beginning of the PES payload, raise an error\r\n    if (offset) {\r\n      var reason, fatal;\r\n      if (offset < len - 1) {\r\n        reason = `AAC PES did not start with ADTS header,offset:${offset}`;\r\n        fatal = false;\r\n      } else {\r\n        reason = 'no ADTS header found in AAC PES';\r\n        fatal = true;\r\n      }\r\n      this.observer.trigger(Event.ERROR, {type: ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: fatal, reason: reason});\r\n      if (fatal) {\r\n        return;\r\n      }\r\n    }\r\n    if (!track.audiosamplerate) {\r\n      config = ADTS.getAudioConfig(this.observer,data, offset, audioCodec);\r\n      track.config = config.config;\r\n      track.audiosamplerate = config.samplerate;\r\n      track.channelCount = config.channelCount;\r\n      track.codec = config.codec;\r\n      track.timescale = this.remuxer.timescale;\r\n      track.duration = track.timescale * duration;\r\n      logger.log(`parsed codec:${track.codec},rate:${config.samplerate},nb channel:${config.channelCount}`);\r\n    }\r\n    frameIndex = 0;\r\n    frameDuration = 1024 * 90000 / track.audiosamplerate;\r\n\r\n    // if last AAC frame is overflowing, we should ensure timestamps are contiguous:\r\n    // first sample PTS should be equal to last sample PTS + frameDuration\r\n    if(aacOverFlow && lastAacPTS) {\r\n      var newPTS = lastAacPTS+frameDuration;\r\n      if(Math.abs(newPTS-pts) > 1) {\r\n        logger.log(`AAC: align PTS for overlapping frames by ${Math.round((newPTS-pts)/90)}`);\r\n        pts=newPTS;\r\n      }\r\n    }\r\n\r\n    while ((offset + 5) < len) {\r\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header\r\n      headerLength = (!!(data[offset + 1] & 0x01) ? 7 : 9);\r\n      // retrieve frame size\r\n      frameLength = ((data[offset + 3] & 0x03) << 11) |\r\n                     (data[offset + 4] << 3) |\r\n                    ((data[offset + 5] & 0xE0) >>> 5);\r\n      frameLength  -= headerLength;\r\n      //stamp = pes.pts;\r\n\r\n      if ((frameLength > 0) && ((offset + headerLength + frameLength) <= len)) {\r\n        stamp = Math.round(pts + frameIndex * frameDuration);\r\n        //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);\r\n        aacSample = {unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp};\r\n        track.samples.push(aacSample);\r\n        track.len += frameLength;\r\n        offset += frameLength + headerLength;\r\n        frameIndex++;\r\n        // look for ADTS header (0xFFFx)\r\n        for ( ; offset < (len - 1); offset++) {\r\n          if ((data[offset] === 0xff) && ((data[offset + 1] & 0xf0) === 0xf0)) {\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    if (offset < len) {\r\n      aacOverFlow = data.subarray(offset, len);\r\n      //logger.log(`AAC: overflow detected:${len-offset}`);\r\n    } else {\r\n      aacOverFlow = null;\r\n    }\r\n    this.aacOverFlow = aacOverFlow;\r\n    this.lastAacPTS = stamp;\r\n  }\r\n\r\n  _parseID3PES(pes) {\r\n    this._id3Track.samples.push(pes);\r\n  }\r\n}\r\n\r\nexport default TSDemuxer;\r\n\r\n",
    "export const ErrorTypes = {\r\n  // Identifier for a network error (loading error / timeout ...)\r\n  NETWORK_ERROR: 'hlsNetworkError',\r\n  // Identifier for a media Error (video/parsing/mediasource error)\r\n  MEDIA_ERROR: 'hlsMediaError',\r\n  // Identifier for all other errors\r\n  OTHER_ERROR: 'hlsOtherError'\r\n};\r\n\r\nexport const ErrorDetails = {\r\n  // Identifier for a manifest load error - data: { url : faulty URL, response : XHR response}\r\n  MANIFEST_LOAD_ERROR: 'manifestLoadError',\r\n  // Identifier for a manifest load timeout - data: { url : faulty URL, response : XHR response}\r\n  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',\r\n  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}\r\n  MANIFEST_PARSING_ERROR: 'manifestParsingError',\r\n  // Identifier for playlist load error - data: { url : faulty URL, response : XHR response}\r\n  LEVEL_LOAD_ERROR: 'levelLoadError',\r\n  // Identifier for playlist load timeout - data: { url : faulty URL, response : XHR response}\r\n  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',\r\n  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}\r\n  LEVEL_SWITCH_ERROR: 'levelSwitchError',\r\n  // Identifier for fragment load error - data: { frag : fragment object, response : XHR response}\r\n  FRAG_LOAD_ERROR: 'fragLoadError',\r\n  // Identifier for fragment loop loading error - data: { frag : fragment object}\r\n  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',\r\n  // Identifier for fragment load timeout error - data: { frag : fragment object}\r\n  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',\r\n  // Identifier for a fragment decryption error event - data: parsing error description\r\n  FRAG_DECRYPT_ERROR: 'fragDecryptError',\r\n  // Identifier for a fragment parsing error event - data: parsing error description\r\n  FRAG_PARSING_ERROR: 'fragParsingError',\r\n  // Identifier for decrypt key load error - data: { frag : fragment object, response : XHR response}\r\n  KEY_LOAD_ERROR: 'keyLoadError',\r\n  // Identifier for decrypt key load timeout error - data: { frag : fragment object}\r\n  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',\r\n  // Identifier for a buffer append error - data: append error description\r\n  BUFFER_APPEND_ERROR: 'bufferAppendError',\r\n  // Identifier for a buffer appending error event - data: appending error description\r\n  BUFFER_APPENDING_ERROR: 'bufferAppendingError',\r\n  // Identifier for a buffer stalled error event\r\n  BUFFER_STALLED_ERROR: 'bufferStalledError'\r\n};\r\n",
    "/*\r\n*\r\n* All objects in the event handling chain should inherit from this class\r\n*\r\n*/\r\n\r\n//import {logger} from './utils/logger';\r\n\r\nclass EventHandler {\r\n\r\n  constructor(hls, ...events) {\r\n    this.hls = hls;\r\n    this.onEvent = this.onEvent.bind(this);\r\n    this.handledEvents = events;\r\n    this.useGenericHandler = true;\r\n\r\n    this.registerListeners();\r\n  }\r\n\r\n  destroy() {\r\n    this.unregisterListeners();\r\n  }\r\n\r\n  isEventHandler() {\r\n    return typeof this.handledEvents === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';\r\n  }\r\n\r\n  registerListeners() {\r\n    if (this.isEventHandler()) {\r\n      this.handledEvents.forEach(function(event) {\r\n        if (event === 'hlsEventGeneric') {\r\n          throw new Error('Forbidden event name: ' + event);\r\n        }\r\n        this.hls.on(event, this.onEvent);\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  unregisterListeners() {\r\n    if (this.isEventHandler()) {\r\n      this.handledEvents.forEach(function(event) {\r\n        this.hls.off(event, this.onEvent);\r\n      }.bind(this));\r\n    }\r\n  }\r\n\r\n  /*\r\n  * arguments: event (string), data (any)\r\n  */\r\n  onEvent(event, data) {\r\n    this.onEventGeneric(event, data);\r\n  }\r\n\r\n  onEventGeneric(event, data) {\r\n    var eventToFunction = function(event, data) {\r\n      var funcName = 'on' + event.replace('hls', '');\r\n      if (typeof this[funcName] !== 'function') {\r\n        throw new Error(`Event ${event} has no generic handler in this ${this.constructor.name} class (tried ${funcName})`);\r\n      }\r\n      return this[funcName].bind(this, data);\r\n    };\r\n    eventToFunction.call(this, event, data).call();\r\n  }\r\n}\r\n\r\nexport default EventHandler;",
    "module.exports = {\r\n  // fired before MediaSource is attaching to media element - data: { media }\r\n  MEDIA_ATTACHING: 'hlsMediaAttaching',\r\n  // fired when MediaSource has been succesfully attached to media element - data: { }\r\n  MEDIA_ATTACHED: 'hlsMediaAttached',\r\n  // fired before detaching MediaSource from media element - data: { }\r\n  MEDIA_DETACHING: 'hlsMediaDetaching',\r\n  // fired when MediaSource has been detached from media element - data: { }\r\n  MEDIA_DETACHED: 'hlsMediaDetached',\r\n  // fired to signal that a manifest loading starts - data: { url : manifestURL}\r\n  MANIFEST_LOADING: 'hlsManifestLoading',\r\n  // fired after manifest has been loaded - data: { levels : [available quality levels] , url : manifestURL, stats : { trequest, tfirst, tload, mtime}}\r\n  MANIFEST_LOADED: 'hlsManifestLoaded',\r\n  // fired after manifest has been parsed - data: { levels : [available quality levels] , firstLevel : index of first quality level appearing in Manifest}\r\n  MANIFEST_PARSED: 'hlsManifestParsed',\r\n  // fired when a level playlist loading starts - data: { url : level URL  level : id of level being loaded}\r\n  LEVEL_LOADING: 'hlsLevelLoading',\r\n  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }\r\n  LEVEL_LOADED: 'hlsLevelLoaded',\r\n  // fired when a level's details have been updated based on previous details, after it has been loaded. - data: { details : levelDetails object, level : id of updated level }\r\n  LEVEL_UPDATED: 'hlsLevelUpdated',\r\n  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }\r\n  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',\r\n  // fired when a level switch is requested - data: { level : id of new level }\r\n  LEVEL_SWITCH: 'hlsLevelSwitch',\r\n  // fired when a fragment loading starts - data: { frag : fragment object}\r\n  FRAG_LOADING: 'hlsFragLoading',\r\n  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded}}\r\n  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',\r\n  // Identifier for fragment load aborting for emergency switch down - data: {frag : fragment object}\r\n  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',\r\n  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length}}\r\n  FRAG_LOADED: 'hlsFragLoaded',\r\n  // fired when Init Segment has been extracted from fragment - data: { moov : moov MP4 box, codecs : codecs found while parsing fragment}\r\n  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',\r\n  // fired when parsing sei text is completed - data: { samples : [ sei samples pes ] }\r\n  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',\r\n  // fired when parsing id3 is completed - data: { samples : [ id3 samples pes ] }\r\n  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',\r\n  // fired when moof/mdat have been extracted from fragment - data: { moof : moof MP4 box, mdat : mdat MP4 box}\r\n  FRAG_PARSING_DATA: 'hlsFragParsingData',\r\n  // fired when fragment parsing is completed - data: undefined\r\n  FRAG_PARSED: 'hlsFragParsed',\r\n  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length} }\r\n  FRAG_BUFFERED: 'hlsFragBuffered',\r\n  // fired when fragment matching with current media position is changing - data : { frag : fragment object }\r\n  FRAG_CHANGED: 'hlsFragChanged',\r\n    // Identifier for a FPS drop event - data: {curentDropped, currentDecoded, totalDroppedFrames}\r\n  FPS_DROP: 'hlsFpsDrop',\r\n  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data}\r\n  ERROR: 'hlsError',\r\n  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example\r\n  DESTROYING: 'hlsDestroying',\r\n  // fired when a decrypt key loading starts - data: { frag : fragment object}\r\n  KEY_LOADING: 'hlsKeyLoading',\r\n  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length}}\r\n  KEY_LOADED: 'hlsKeyLoaded',\r\n};\r\n",
    "/**\r\n * Level Helper class, providing methods dealing with playlist sliding and drift\r\n*/\r\n\r\nimport {logger} from '../utils/logger';\r\n\r\nclass LevelHelper {\r\n\r\n  static mergeDetails(oldDetails,newDetails) {\r\n    var start = Math.max(oldDetails.startSN,newDetails.startSN)-newDetails.startSN,\r\n        end = Math.min(oldDetails.endSN,newDetails.endSN)-newDetails.startSN,\r\n        delta = newDetails.startSN - oldDetails.startSN,\r\n        oldfragments = oldDetails.fragments,\r\n        newfragments = newDetails.fragments,\r\n        ccOffset =0,\r\n        PTSFrag;\r\n\r\n    // check if old/new playlists have fragments in common\r\n    if ( end < start) {\r\n      newDetails.PTSKnown = false;\r\n      return;\r\n    }\r\n    // loop through overlapping SN and update startPTS , cc, and duration if any found\r\n    for(var i = start ; i <= end ; i++) {\r\n      var oldFrag = oldfragments[delta+i],\r\n          newFrag = newfragments[i];\r\n      ccOffset = oldFrag.cc - newFrag.cc;\r\n      if (!isNaN(oldFrag.startPTS)) {\r\n        newFrag.start = newFrag.startPTS = oldFrag.startPTS;\r\n        newFrag.endPTS = oldFrag.endPTS;\r\n        newFrag.duration = oldFrag.duration;\r\n        PTSFrag = newFrag;\r\n      }\r\n    }\r\n\r\n    if(ccOffset) {\r\n      logger.log(`discontinuity sliding from playlist, take drift into account`);\r\n      for(i = 0 ; i < newfragments.length ; i++) {\r\n        newfragments[i].cc += ccOffset;\r\n      }\r\n    }\r\n\r\n    // if at least one fragment contains PTS info, recompute PTS information for all fragments\r\n    if(PTSFrag) {\r\n      LevelHelper.updateFragPTS(newDetails,PTSFrag.sn,PTSFrag.startPTS,PTSFrag.endPTS);\r\n    } else {\r\n      // adjust start by sliding offset\r\n      var sliding = oldfragments[delta].start;\r\n      for(i = 0 ; i < newfragments.length ; i++) {\r\n        newfragments[i].start += sliding;\r\n      }\r\n    }\r\n    // if we are here, it means we have fragments overlapping between\r\n    // old and new level. reliable PTS info is thus relying on old level\r\n    newDetails.PTSKnown = oldDetails.PTSKnown;\r\n    return;\r\n  }\r\n\r\n  static updateFragPTS(details,sn,startPTS,endPTS) {\r\n    var fragIdx, fragments, frag, i;\r\n    // exit if sn out of range\r\n    if (sn < details.startSN || sn > details.endSN) {\r\n      return 0;\r\n    }\r\n    fragIdx = sn - details.startSN;\r\n    fragments = details.fragments;\r\n    frag = fragments[fragIdx];\r\n    if(!isNaN(frag.startPTS)) {\r\n      startPTS = Math.min(startPTS,frag.startPTS);\r\n      endPTS = Math.max(endPTS, frag.endPTS);\r\n    }\r\n\r\n    var drift = startPTS - frag.start;\r\n\r\n    frag.start = frag.startPTS = startPTS;\r\n    frag.endPTS = endPTS;\r\n    frag.duration = endPTS - startPTS;\r\n    // adjust fragment PTS/duration from seqnum-1 to frag 0\r\n    for(i = fragIdx ; i > 0 ; i--) {\r\n      LevelHelper.updatePTS(fragments,i,i-1);\r\n    }\r\n\r\n    // adjust fragment PTS/duration from seqnum to last frag\r\n    for(i = fragIdx ; i < fragments.length - 1 ; i++) {\r\n      LevelHelper.updatePTS(fragments,i,i+1);\r\n    }\r\n    details.PTSKnown = true;\r\n    //logger.log(`                                            frag start/end:${startPTS.toFixed(3)}/${endPTS.toFixed(3)}`);\r\n\r\n    return drift;\r\n  }\r\n\r\n  static updatePTS(fragments,fromIdx, toIdx) {\r\n    var fragFrom = fragments[fromIdx],fragTo = fragments[toIdx], fragToPTS = fragTo.startPTS;\r\n    // if we know startPTS[toIdx]\r\n    if(!isNaN(fragToPTS)) {\r\n      // update fragment duration.\r\n      // it helps to fix drifts between playlist reported duration and fragment real duration\r\n      if (toIdx > fromIdx) {\r\n        fragFrom.duration = fragToPTS-fragFrom.start;\r\n        if(fragFrom.duration < 0) {\r\n          logger.error(`negative duration computed for frag ${fragFrom.sn},level ${fragFrom.level}, there should be some duration drift between playlist and fragment!`);\r\n        }\r\n      } else {\r\n        fragTo.duration = fragFrom.start - fragToPTS;\r\n        if(fragTo.duration < 0) {\r\n          logger.error(`negative duration computed for frag ${fragTo.sn},level ${fragTo.level}, there should be some duration drift between playlist and fragment!`);\r\n        }\r\n      }\r\n    } else {\r\n      // we dont know startPTS[toIdx]\r\n      if (toIdx > fromIdx) {\r\n        fragTo.start = fragFrom.start + fragFrom.duration;\r\n      } else {\r\n        fragTo.start = fragFrom.start - fragTo.duration;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default LevelHelper;\r\n",
    "/**\r\n * HLS interface\r\n */\r\n'use strict';\r\n\r\nimport Event from './events';\r\nimport {ErrorTypes, ErrorDetails} from './errors';\r\nimport PlaylistLoader from './loader/playlist-loader';\r\nimport FragmentLoader from './loader/fragment-loader';\r\nimport AbrController from    './controller/abr-controller';\r\nimport MSEMediaController from './controller/mse-media-controller';\r\nimport LevelController from  './controller/level-controller';\r\nimport TimelineController from './controller/timeline-controller';\r\n//import FPSController from './controller/fps-controller';\r\nimport {logger, enableLogs} from './utils/logger';\r\nimport XhrLoader from './utils/xhr-loader';\r\nimport EventEmitter from 'events';\r\nimport KeyLoader from './loader/key-loader';\r\n\r\nclass Hls {\r\n\r\n  static isSupported() {\r\n    return (window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"'));\r\n  }\r\n\r\n  static get Events() {\r\n    return Event;\r\n  }\r\n\r\n  static get ErrorTypes() {\r\n    return ErrorTypes;\r\n  }\r\n\r\n  static get ErrorDetails() {\r\n    return ErrorDetails;\r\n  }\r\n\r\n  static get DefaultConfig() {\r\n    if(!Hls.defaultConfig) {\r\n       Hls.defaultConfig = {\r\n          autoStartLoad: true,\r\n          debug: false,\r\n          maxBufferLength: 30,\r\n          maxBufferSize: 60 * 1000 * 1000,\r\n          maxBufferHole: 0.3,\r\n          maxSeekHole: 2,\r\n          liveSyncDurationCount:3,\r\n          liveMaxLatencyDurationCount: Infinity,\r\n          maxMaxBufferLength: 600,\r\n          enableWorker: true,\r\n          enableSoftwareAES: true,\r\n          manifestLoadingTimeOut: 10000,\r\n          manifestLoadingMaxRetry: 1,\r\n          manifestLoadingRetryDelay: 1000,\r\n          levelLoadingTimeOut: 10000,\r\n          levelLoadingMaxRetry: 4,\r\n          levelLoadingRetryDelay: 1000,\r\n          fragLoadingTimeOut: 20000,\r\n          fragLoadingMaxRetry: 6,\r\n          fragLoadingRetryDelay: 1000,\r\n          fragLoadingLoopThreshold: 3,\r\n          // fpsDroppedMonitoringPeriod: 5000,\r\n          // fpsDroppedMonitoringThreshold: 0.2,\r\n          appendErrorMaxRetry: 3,\r\n          loader: XhrLoader,\r\n          fLoader: undefined,\r\n          pLoader: undefined,\r\n          abrController : AbrController,\r\n          mediaController: MSEMediaController,\r\n          timelineController: TimelineController,\r\n          enableCEA708Captions: true\r\n        };\r\n    }\r\n    return Hls.defaultConfig;\r\n  }\r\n\r\n  static set DefaultConfig(defaultConfig) {\r\n    Hls.defaultConfig = defaultConfig;\r\n  }\r\n\r\n  constructor(config = {}) {\r\n    var defaultConfig = Hls.DefaultConfig;\r\n    for (var prop in defaultConfig) {\r\n        if (prop in config) { continue; }\r\n        config[prop] = defaultConfig[prop];\r\n    }\r\n\r\n    if (config.liveMaxLatencyDurationCount !== undefined && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {\r\n      throw new Error('Illegal hls.js config: \"liveMaxLatencyDurationCount\" must be gt \"liveSyncDurationCount\"');\r\n    }\r\n\r\n    enableLogs(config.debug);\r\n    this.config = config;\r\n    // observer setup\r\n    var observer = this.observer = new EventEmitter();\r\n    observer.trigger = function trigger (event, ...data) {\r\n      observer.emit(event, event, ...data);\r\n    };\r\n\r\n    observer.off = function off (event, ...data) {\r\n      observer.removeListener(event, ...data);\r\n    };\r\n    this.on = observer.on.bind(observer);\r\n    this.off = observer.off.bind(observer);\r\n    this.trigger = observer.trigger.bind(observer);\r\n    this.playlistLoader = new PlaylistLoader(this);\r\n    this.fragmentLoader = new FragmentLoader(this);\r\n    this.levelController = new LevelController(this);\r\n    this.abrController = new config.abrController(this);\r\n    this.mediaController = new config.mediaController(this);\r\n    this.timelineController = new config.timelineController(this);\r\n    this.keyLoader = new KeyLoader(this);\r\n    //this.fpsController = new FPSController(this);\r\n  }\r\n\r\n  destroy() {\r\n    logger.log('destroy');\r\n    this.trigger(Event.DESTROYING);\r\n    this.detachMedia();\r\n    this.playlistLoader.destroy();\r\n    this.fragmentLoader.destroy();\r\n    this.levelController.destroy();\r\n    this.mediaController.destroy();\r\n    this.timelineController.destroy();\r\n    this.keyLoader.destroy();\r\n    //this.fpsController.destroy();\r\n    this.url = null;\r\n    this.observer.removeAllListeners();\r\n  }\r\n\r\n  attachMedia(media) {\r\n    logger.log('attachMedia');\r\n    this.media = media;\r\n    this.trigger(Event.MEDIA_ATTACHING, {media: media});\r\n  }\r\n\r\n  detachMedia() {\r\n    logger.log('detachMedia');\r\n    this.trigger(Event.MEDIA_DETACHING);\r\n    this.media = null;\r\n  }\r\n\r\n  loadSource(url) {\r\n    logger.log(`loadSource:${url}`);\r\n    this.url = url;\r\n    // when attaching to a source URL, trigger a playlist load\r\n    this.trigger(Event.MANIFEST_LOADING, {url: url});\r\n  }\r\n\r\n  startLoad() {\r\n    logger.log('startLoad');\r\n    this.mediaController.startLoad();\r\n  }\r\n\r\n  swapAudioCodec() {\r\n    logger.log('swapAudioCodec');\r\n    this.mediaController.swapAudioCodec();\r\n  }\r\n\r\n  recoverMediaError() {\r\n    logger.log('recoverMediaError');\r\n    var media = this.media;\r\n    this.detachMedia();\r\n    this.attachMedia(media);\r\n  }\r\n\r\n  /** Return all quality levels **/\r\n  get levels() {\r\n    return this.levelController.levels;\r\n  }\r\n\r\n  /** Return current playback quality level **/\r\n  get currentLevel() {\r\n    return this.mediaController.currentLevel;\r\n  }\r\n\r\n  /* set quality level immediately (-1 for automatic level selection) */\r\n  set currentLevel(newLevel) {\r\n    logger.log(`set currentLevel:${newLevel}`);\r\n    this.loadLevel = newLevel;\r\n    this.mediaController.immediateLevelSwitch();\r\n  }\r\n\r\n  /** Return next playback quality level (quality level of next fragment) **/\r\n  get nextLevel() {\r\n    return this.mediaController.nextLevel;\r\n  }\r\n\r\n  /* set quality level for next fragment (-1 for automatic level selection) */\r\n  set nextLevel(newLevel) {\r\n    logger.log(`set nextLevel:${newLevel}`);\r\n    this.levelController.manualLevel = newLevel;\r\n    this.mediaController.nextLevelSwitch();\r\n  }\r\n\r\n  /** Return the quality level of current/last loaded fragment **/\r\n  get loadLevel() {\r\n    return this.levelController.level;\r\n  }\r\n\r\n  /* set quality level for current/next loaded fragment (-1 for automatic level selection) */\r\n  set loadLevel(newLevel) {\r\n    logger.log(`set loadLevel:${newLevel}`);\r\n    this.levelController.manualLevel = newLevel;\r\n  }\r\n\r\n  /** Return the quality level of next loaded fragment **/\r\n  get nextLoadLevel() {\r\n    return this.levelController.nextLoadLevel();\r\n  }\r\n\r\n  /** set quality level of next loaded fragment **/\r\n  set nextLoadLevel(level) {\r\n    this.levelController.level = level;\r\n  }\r\n\r\n  /** Return first level (index of first level referenced in manifest)\r\n  **/\r\n  get firstLevel() {\r\n    return this.levelController.firstLevel;\r\n  }\r\n\r\n  /** set first level (index of first level referenced in manifest)\r\n  **/\r\n  set firstLevel(newLevel) {\r\n    logger.log(`set firstLevel:${newLevel}`);\r\n    this.levelController.firstLevel = newLevel;\r\n  }\r\n\r\n  /** Return start level (level of first fragment that will be played back)\r\n      if not overrided by user, first level appearing in manifest will be used as start level\r\n      if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\r\n  **/\r\n  get startLevel() {\r\n    return this.levelController.startLevel;\r\n  }\r\n\r\n  /** set  start level (level of first fragment that will be played back)\r\n      if not overrided by user, first level appearing in manifest will be used as start level\r\n      if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)\r\n  **/\r\n  set startLevel(newLevel) {\r\n    logger.log(`set startLevel:${newLevel}`);\r\n    this.levelController.startLevel = newLevel;\r\n  }\r\n\r\n  /** Return the capping/max level value that could be used by automatic level selection algorithm **/\r\n  get autoLevelCapping() {\r\n    return this.abrController.autoLevelCapping;\r\n  }\r\n\r\n  /** set the capping/max level value that could be used by automatic level selection algorithm **/\r\n  set autoLevelCapping(newLevel) {\r\n    logger.log(`set autoLevelCapping:${newLevel}`);\r\n    this.abrController.autoLevelCapping = newLevel;\r\n  }\r\n\r\n  /* check if we are in automatic level selection mode */\r\n  get autoLevelEnabled() {\r\n    return (this.levelController.manualLevel === -1);\r\n  }\r\n\r\n  /* return manual level */\r\n  get manualLevel() {\r\n    return this.levelController.manualLevel;\r\n  }\r\n}\r\n\r\nexport default Hls;\r\n",
    "/*\r\n * Fragment Loader\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\nclass FragmentLoader extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls, Event.FRAG_LOADING);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.loader) {\r\n      this.loader.destroy();\r\n      this.loader = null;\r\n    }\r\n    EventHandler.prototype.destroy.call(this);\r\n  }\r\n\r\n  onFragLoading(data) {\r\n    var frag = data.frag;\r\n    this.frag = frag;\r\n    this.frag.loaded = 0;\r\n    var config = this.hls.config;\r\n    frag.loader = this.loader = typeof(config.fLoader) !== 'undefined' ? new config.fLoader(config) : new config.loader(config);\r\n    this.loader.load(frag.url, 'arraybuffer', this.loadsuccess.bind(this), this.loaderror.bind(this), this.loadtimeout.bind(this), config.fragLoadingTimeOut, 1, 0, this.loadprogress.bind(this), frag);\r\n  }\r\n\r\n  loadsuccess(event, stats) {\r\n    var payload = event.currentTarget.response;\r\n    stats.length = payload.byteLength;\r\n    // detach fragment loader on load success\r\n    this.frag.loader = undefined;\r\n    this.hls.trigger(Event.FRAG_LOADED, {payload: payload, frag: this.frag, stats: stats, payloadCopy: payload.slice(0)}); //found that payload quickly gets cleared out by internal usage of this event, so added a copy for conveying to other usages\r\n  }\r\n\r\n  loaderror(event) {\r\n    this.loader.abort();\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.FRAG_LOAD_ERROR, fatal: false, frag: this.frag, response: event});\r\n  }\r\n\r\n  loadtimeout() {\r\n    this.loader.abort();\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: false, frag: this.frag});\r\n  }\r\n\r\n  loadprogress(event, stats) {\r\n    this.frag.loaded = stats.loaded;\r\n    this.hls.trigger(Event.FRAG_LOAD_PROGRESS, {frag: this.frag, stats: stats});\r\n  }\r\n}\r\n\r\nexport default FragmentLoader;\r\n",
    "/*\r\n * Decrypt key Loader\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\nclass KeyLoader extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls, Event.KEY_LOADING);\r\n    this.decryptkey = null;\r\n    this.decrypturl = null;\r\n  }\r\n\r\n  destroy() {\r\n    if (this.loader) {\r\n      this.loader.destroy();\r\n      this.loader = null;\r\n    }\r\n    EventHandler.prototype.destroy.call(this);\r\n  }\r\n\r\n  onKeyLoading(data) {\r\n    var frag = this.frag = data.frag,\r\n        decryptdata = frag.decryptdata,\r\n        uri = decryptdata.uri;\r\n        // if uri is different from previous one or if decrypt key not retrieved yet\r\n      if (uri !== this.decrypturl || this.decryptkey === null) {\r\n        var config = this.hls.config;\r\n        frag.loader = this.loader = new config.loader(config);\r\n        this.decrypturl = uri;\r\n        this.decryptkey = null;\r\n        frag.loader.load(uri, 'arraybuffer', this.loadsuccess.bind(this), this.loaderror.bind(this), this.loadtimeout.bind(this), config.fragLoadingTimeOut, config.fragLoadingMaxRetry, config.fragLoadingRetryDelay, this.loadprogress.bind(this), frag);\r\n      } else if (this.decryptkey) {\r\n        // we already loaded this key, return it\r\n        decryptdata.key = this.decryptkey;\r\n        this.hls.trigger(Event.KEY_LOADED, {frag: frag});\r\n      }\r\n  }\r\n\r\n  loadsuccess(event) {\r\n    var frag = this.frag;\r\n    this.decryptkey = frag.decryptdata.key = new Uint8Array(event.currentTarget.response);\r\n    // detach fragment loader on load success\r\n    frag.loader = undefined;\r\n    this.hls.trigger(Event.KEY_LOADED, {frag: frag});\r\n  }\r\n\r\n  loaderror(event) {\r\n    this.loader.abort();\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.KEY_LOAD_ERROR, fatal: false, frag: this.frag, response: event});\r\n  }\r\n\r\n  loadtimeout() {\r\n    this.loader.abort();\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.KEY_LOAD_TIMEOUT, fatal: false, frag: this.frag});\r\n  }\r\n\r\n  loadprogress() {\r\n\r\n  }\r\n}\r\n\r\nexport default KeyLoader;\r\n",
    "/**\r\n * Playlist Loader\r\n*/\r\n\r\nimport Event from '../events';\r\nimport EventHandler from '../event-handler';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\nimport URLHelper from '../utils/url';\r\nimport AttrList from '../utils/attr-list';\r\n//import {logger} from '../utils/logger';\r\n\r\nclass PlaylistLoader extends EventHandler {\r\n\r\n  constructor(hls) {\r\n    super(hls,\r\n      Event.MANIFEST_LOADING,\r\n      Event.LEVEL_LOADING);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.loader) {\r\n      this.loader.destroy();\r\n      this.loader = null;\r\n    }\r\n    this.url = this.id = null;\r\n    EventHandler.prototype.destroy.call(this);\r\n  }\r\n\r\n  onManifestLoading(data) {\r\n    this.load(data.url, null);\r\n  }\r\n\r\n  onLevelLoading(data) {\r\n    this.load(data.url, data.level, data.id);\r\n  }\r\n\r\n  load(url, id1, id2) {\r\n    var config = this.hls.config,\r\n        retry,\r\n        timeout,\r\n        retryDelay;\r\n    this.url = url;\r\n    this.id = id1;\r\n    this.id2 = id2;\r\n    if(this.id === undefined) {\r\n      retry = config.manifestLoadingMaxRetry;\r\n      timeout = config.manifestLoadingTimeOut;\r\n      retryDelay = config.manifestLoadingRetryDelay;\r\n    } else {\r\n      retry = config.levelLoadingMaxRetry;\r\n      timeout = config.levelLoadingTimeOut;\r\n      retryDelay = config.levelLoadingRetryDelay;\r\n    }\r\n    this.loader = typeof(config.pLoader) !== 'undefined' ? new config.pLoader(config) : new config.loader(config);\r\n    this.loader.load(url, '', this.loadsuccess.bind(this), this.loaderror.bind(this), this.loadtimeout.bind(this), timeout, retry, retryDelay);\r\n  }\r\n\r\n  resolve(url, baseUrl) {\r\n    return URLHelper.buildAbsoluteURL(baseUrl, url);\r\n  }\r\n\r\n  parseMasterPlaylist(string, baseurl) {\r\n    let levels = [], result;\r\n\r\n    // https://regex101.com is your friend\r\n    const re = /#EXT-X-STREAM-INF:([^\\n\\r]*)[\\r\\n]+([^\\r\\n]+)/g;\r\n    while ((result = re.exec(string)) != null){\r\n      const level = {};\r\n\r\n      var attrs = level.attrs = new AttrList(result[1]);\r\n      level.url = this.resolve(result[2], baseurl);\r\n\r\n      var resolution = attrs.decimalResolution('RESOLUTION');\r\n      if(resolution) {\r\n        level.width = resolution.width;\r\n        level.height = resolution.height;\r\n      }\r\n      level.bitrate = attrs.decimalInteger('BANDWIDTH');\r\n      level.name = attrs.NAME;\r\n\r\n      var codecs = attrs.CODECS;\r\n      if(codecs) {\r\n        codecs = codecs.split(',');\r\n        for (let i = 0; i < codecs.length; i++) {\r\n          const codec = codecs[i];\r\n          if (codec.indexOf('avc1') !== -1) {\r\n            level.videoCodec = this.avc1toavcoti(codec);\r\n          } else {\r\n            level.audioCodec = codec;\r\n          }\r\n        }\r\n      }\r\n\r\n      levels.push(level);\r\n    }\r\n    return levels;\r\n  }\r\n\r\n  avc1toavcoti(codec) {\r\n    var result, avcdata = codec.split('.');\r\n    if (avcdata.length > 2) {\r\n      result = avcdata.shift() + '.';\r\n      result += parseInt(avcdata.shift()).toString(16);\r\n      result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);\r\n    } else {\r\n      result = codec;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  cloneObj(obj) {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  parseLevelPlaylist(string, baseurl, id) {\r\n    var currentSN = 0,\r\n        totalduration = 0,\r\n        level = {url: baseurl, fragments: [], live: true, startSN: 0},\r\n        levelkey = {method : null, key : null, iv : null, uri : null},\r\n        cc = 0,\r\n        programDateTime = null,\r\n        frag = null,\r\n        result,\r\n        regexp,\r\n        byteRangeEndOffset,\r\n        byteRangeStartOffset;\r\n\r\n    regexp = /(?:#EXT-X-(MEDIA-SEQUENCE):(\\d+))|(?:#EXT-X-(TARGETDURATION):(\\d+))|(?:#EXT-X-(KEY):(.*))|(?:#EXT(INF):([\\d\\.]+)[^\\r\\n]*([\\r\\n]+[^#|\\r\\n]+)?)|(?:#EXT-X-(BYTERANGE):([\\d]+[@[\\d]*)]*[\\r\\n]+([^#|\\r\\n]+)?|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(PROGRAM-DATE-TIME):(.*))/g;\r\n    while ((result = regexp.exec(string)) !== null) {\r\n      result.shift();\r\n      result = result.filter(function(n) { return (n !== undefined); });\r\n      switch (result[0]) {\r\n        case 'MEDIA-SEQUENCE':\r\n          currentSN = level.startSN = parseInt(result[1]);\r\n          break;\r\n        case 'TARGETDURATION':\r\n          level.targetduration = parseFloat(result[1]);\r\n          break;\r\n        case 'ENDLIST':\r\n          level.live = false;\r\n          break;\r\n        case 'DIS':\r\n          cc++;\r\n          break;\r\n        case 'BYTERANGE':\r\n          var params = result[1].split('@');\r\n          if (params.length === 1) {\r\n            byteRangeStartOffset = byteRangeEndOffset;\r\n          } else {\r\n            byteRangeStartOffset = parseInt(params[1]);\r\n          }\r\n          byteRangeEndOffset = parseInt(params[0]) + byteRangeStartOffset;\r\n          if (frag && !frag.url) {\r\n            frag.byteRangeStartOffset = byteRangeStartOffset;\r\n            frag.byteRangeEndOffset = byteRangeEndOffset;\r\n            frag.url = this.resolve(result[2], baseurl);\r\n          }\r\n          break;\r\n        case 'INF':\r\n          var duration = parseFloat(result[1]);\r\n          if (!isNaN(duration)) {\r\n            var fragdecryptdata,\r\n                sn = currentSN++;\r\n            if (levelkey.method && levelkey.uri && !levelkey.iv) {\r\n              fragdecryptdata = this.cloneObj(levelkey);\r\n              var uint8View = new Uint8Array(16);\r\n              for (var i = 12; i < 16; i++) {\r\n                uint8View[i] = (sn >> 8*(15-i)) & 0xff;\r\n              }\r\n              fragdecryptdata.iv = uint8View;\r\n            } else {\r\n              fragdecryptdata = levelkey;\r\n            }\r\n            var url = result[2] ? this.resolve(result[2], baseurl) : null;\r\n            frag = {url: url, duration: duration, start: totalduration, sn: sn, level: id, cc: cc, byteRangeStartOffset: byteRangeStartOffset, byteRangeEndOffset: byteRangeEndOffset, decryptdata : fragdecryptdata, programDateTime: programDateTime};\r\n            level.fragments.push(frag);\r\n            totalduration += duration;\r\n            byteRangeStartOffset = null;\r\n            programDateTime = null;\r\n          }\r\n          break;\r\n        case 'KEY':\r\n          // https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4\r\n          var decryptparams = result[1];\r\n          var keyAttrs = new AttrList(decryptparams);\r\n          var decryptmethod = keyAttrs.enumeratedString('METHOD'),\r\n              decrypturi = keyAttrs.URI,\r\n              decryptiv = keyAttrs.hexadecimalInteger('IV');\r\n          if (decryptmethod) {\r\n            levelkey = { method: null, key: null, iv: null, uri: null };\r\n            if ((decrypturi) && (decryptmethod === 'AES-128')) {\r\n              levelkey.method = decryptmethod;\r\n              // URI to get the key\r\n              levelkey.uri = this.resolve(decrypturi, baseurl);\r\n              levelkey.key = null;\r\n              // Initialization Vector (IV)\r\n              levelkey.iv = decryptiv;\r\n            }\r\n          }\r\n          break;\r\n        case 'PROGRAM-DATE-TIME':\r\n          programDateTime = new Date(Date.parse(result[1]));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //logger.log('found ' + level.fragments.length + ' fragments');\r\n    if(frag && !frag.url) {\r\n      level.fragments.pop();\r\n      totalduration-=frag.duration;\r\n    }\r\n    level.totalduration = totalduration;\r\n    level.endSN = currentSN - 1;\r\n    return level;\r\n  }\r\n\r\n  loadsuccess(event, stats) {\r\n    var target = event.currentTarget,\r\n        string = target.responseText,\r\n        url = target.responseURL,\r\n        id = this.id,\r\n        id2 = this.id2,\r\n        hls = this.hls,\r\n        levels;\r\n    // responseURL not supported on some browsers (it is used to detect URL redirection)\r\n    if (url === undefined) {\r\n      // fallback to initial URL\r\n      url = this.url;\r\n    }\r\n    stats.tload = performance.now();\r\n    stats.mtime = new Date(target.getResponseHeader('Last-Modified'));\r\n    if (string.indexOf('#EXTM3U') === 0) {\r\n      if (string.indexOf('#EXTINF:') > 0) {\r\n        // 1 level playlist\r\n        // if first request, fire manifest loaded event, level will be reloaded afterwards\r\n        // (this is to have a uniform logic for 1 level/multilevel playlists)\r\n        if (this.id === null) {\r\n          hls.trigger(Event.MANIFEST_LOADED, {levels: [{url: url}], url: url, stats: stats});\r\n        } else {\r\n          var levelDetails = this.parseLevelPlaylist(string, url, id);\r\n          stats.tparsed = performance.now();\r\n          hls.trigger(Event.LEVEL_LOADED, {details: levelDetails, level: id, id: id2, stats: stats});\r\n        }\r\n      } else {\r\n        levels = this.parseMasterPlaylist(string, url);\r\n        // multi level playlist, parse level info\r\n        if (levels.length) {\r\n          hls.trigger(Event.MANIFEST_LOADED, {levels: levels, url: url, stats: stats});\r\n        } else {\r\n          hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no level found in manifest'});\r\n        }\r\n      }\r\n    } else {\r\n      hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no EXTM3U delimiter'});\r\n    }\r\n  }\r\n\r\n  loaderror(event) {\r\n    var details, fatal;\r\n    if (this.id === null) {\r\n      details = ErrorDetails.MANIFEST_LOAD_ERROR;\r\n      fatal = true;\r\n    } else {\r\n      details = ErrorDetails.LEVEL_LOAD_ERROR;\r\n      fatal = false;\r\n    }\r\n    this.loader.abort();\r\n    this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: this.url, loader: this.loader, response: event.currentTarget, level: this.id, id: this.id2});\r\n  }\r\n\r\n  loadtimeout() {\r\n    var details, fatal;\r\n    if (this.id === null) {\r\n      details = ErrorDetails.MANIFEST_LOAD_TIMEOUT;\r\n      fatal = true;\r\n    } else {\r\n      details = ErrorDetails.LEVEL_LOAD_TIMEOUT;\r\n      fatal = false;\r\n    }\r\n   this.loader.abort();\r\n   this.hls.trigger(Event.ERROR, {type: ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: this.url, loader: this.loader, level: this.id, id: this.id2});\r\n  }\r\n}\r\n\r\nexport default PlaylistLoader;\r\n",
    "/**\r\n * Generate MP4 Box\r\n*/\r\n\r\n//import Hex from '../utils/hex';\r\nclass MP4 {\r\n  static init() {\r\n    MP4.types = {\r\n      avc1: [], // codingname\r\n      avcC: [],\r\n      btrt: [],\r\n      dinf: [],\r\n      dref: [],\r\n      esds: [],\r\n      ftyp: [],\r\n      hdlr: [],\r\n      mdat: [],\r\n      mdhd: [],\r\n      mdia: [],\r\n      mfhd: [],\r\n      minf: [],\r\n      moof: [],\r\n      moov: [],\r\n      mp4a: [],\r\n      mvex: [],\r\n      mvhd: [],\r\n      sdtp: [],\r\n      stbl: [],\r\n      stco: [],\r\n      stsc: [],\r\n      stsd: [],\r\n      stsz: [],\r\n      stts: [],\r\n      tfdt: [],\r\n      tfhd: [],\r\n      traf: [],\r\n      trak: [],\r\n      trun: [],\r\n      trex: [],\r\n      tkhd: [],\r\n      vmhd: [],\r\n      smhd: []\r\n    };\r\n\r\n    var i;\r\n    for (i in MP4.types) {\r\n      if (MP4.types.hasOwnProperty(i)) {\r\n        MP4.types[i] = [\r\n          i.charCodeAt(0),\r\n          i.charCodeAt(1),\r\n          i.charCodeAt(2),\r\n          i.charCodeAt(3)\r\n        ];\r\n      }\r\n    }\r\n\r\n    var videoHdlr = new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x00, // pre_defined\r\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x56, 0x69, 0x64, 0x65,\r\n      0x6f, 0x48, 0x61, 0x6e,\r\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\r\n    ]);\r\n\r\n    var audioHdlr = new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x00, // pre_defined\r\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x53, 0x6f, 0x75, 0x6e,\r\n      0x64, 0x48, 0x61, 0x6e,\r\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\r\n    ]);\r\n\r\n    MP4.HDLR_TYPES = {\r\n      'video': videoHdlr,\r\n      'audio': audioHdlr\r\n    };\r\n\r\n    var dref = new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x01, // entry_count\r\n      0x00, 0x00, 0x00, 0x0c, // entry_size\r\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x01 // entry_flags\r\n    ]);\r\n\r\n    var stco = new Uint8Array([\r\n      0x00, // version\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x00 // entry_count\r\n    ]);\r\n\r\n    MP4.STTS = MP4.STSC = MP4.STCO = stco;\r\n\r\n    MP4.STSZ = new Uint8Array([\r\n      0x00, // version\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x00, // sample_size\r\n      0x00, 0x00, 0x00, 0x00, // sample_count\r\n    ]);\r\n    MP4.VMHD = new Uint8Array([\r\n      0x00, // version\r\n      0x00, 0x00, 0x01, // flags\r\n      0x00, 0x00, // graphicsmode\r\n      0x00, 0x00,\r\n      0x00, 0x00,\r\n      0x00, 0x00 // opcolor\r\n    ]);\r\n    MP4.SMHD = new Uint8Array([\r\n      0x00, // version\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, // balance\r\n      0x00, 0x00 // reserved\r\n    ]);\r\n\r\n    MP4.STSD = new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x01]);// entry_count\r\n\r\n    var majorBrand = new Uint8Array([105,115,111,109]); // isom\r\n    var avc1Brand = new Uint8Array([97,118,99,49]); // avc1\r\n    var minorVersion = new Uint8Array([0, 0, 0, 1]);\r\n\r\n    MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\r\n    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\r\n  }\r\n\r\n  static box(type) {\r\n  var\r\n    payload = Array.prototype.slice.call(arguments, 1),\r\n    size = 8,\r\n    i = payload.length,\r\n    len = i,\r\n    result;\r\n    // calculate the total size we need to allocate\r\n    while (i--) {\r\n      size += payload[i].byteLength;\r\n    }\r\n    result = new Uint8Array(size);\r\n    result[0] = (size >> 24) & 0xff;\r\n    result[1] = (size >> 16) & 0xff;\r\n    result[2] = (size >> 8) & 0xff;\r\n    result[3] = size  & 0xff;\r\n    result.set(type, 4);\r\n    // copy the payload into the result\r\n    for (i = 0, size = 8; i < len; i++) {\r\n      // copy payload[i] array @ offset size\r\n      result.set(payload[i], size);\r\n      size += payload[i].byteLength;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static hdlr(type) {\r\n    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\r\n  }\r\n\r\n  static mdat(data) {\r\n    return MP4.box(MP4.types.mdat, data);\r\n  }\r\n\r\n  static mdhd(timescale, duration) {\r\n    return MP4.box(MP4.types.mdhd, new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n      0x00, 0x00, 0x00, 0x02, // creation_time\r\n      0x00, 0x00, 0x00, 0x03, // modification_time\r\n      (timescale >> 24) & 0xFF,\r\n      (timescale >> 16) & 0xFF,\r\n      (timescale >>  8) & 0xFF,\r\n      timescale & 0xFF, // timescale\r\n      (duration >> 24),\r\n      (duration >> 16) & 0xFF,\r\n      (duration >>  8) & 0xFF,\r\n      duration & 0xFF, // duration\r\n      0x55, 0xc4, // 'und' language (undetermined)\r\n      0x00, 0x00\r\n    ]));\r\n  }\r\n\r\n  static mdia(track) {\r\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\r\n  }\r\n\r\n  static mfhd(sequenceNumber) {\r\n    return MP4.box(MP4.types.mfhd, new Uint8Array([\r\n      0x00,\r\n      0x00, 0x00, 0x00, // flags\r\n      (sequenceNumber >> 24),\r\n      (sequenceNumber >> 16) & 0xFF,\r\n      (sequenceNumber >>  8) & 0xFF,\r\n      sequenceNumber & 0xFF, // sequence_number\r\n    ]));\r\n  }\r\n\r\n  static minf(track) {\r\n    if (track.type === 'audio') {\r\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\r\n    } else {\r\n      return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\r\n    }\r\n  }\r\n\r\n  static moof(sn, baseMediaDecodeTime, track) {\r\n    return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track,baseMediaDecodeTime));\r\n  }\r\n/**\r\n * @param tracks... (optional) {array} the tracks associated with this movie\r\n */\r\n  static moov(tracks) {\r\n    var\r\n      i = tracks.length,\r\n      boxes = [];\r\n\r\n    while (i--) {\r\n      boxes[i] = MP4.trak(tracks[i]);\r\n    }\r\n\r\n    return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));\r\n  }\r\n\r\n  static mvex(tracks) {\r\n    var\r\n      i = tracks.length,\r\n      boxes = [];\r\n\r\n    while (i--) {\r\n      boxes[i] = MP4.trex(tracks[i]);\r\n    }\r\n    return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\r\n  }\r\n\r\n  static mvhd(timescale,duration) {\r\n    var\r\n      bytes = new Uint8Array([\r\n        0x00, // version 0\r\n        0x00, 0x00, 0x00, // flags\r\n        0x00, 0x00, 0x00, 0x01, // creation_time\r\n        0x00, 0x00, 0x00, 0x02, // modification_time\r\n        (timescale >> 24) & 0xFF,\r\n        (timescale >> 16) & 0xFF,\r\n        (timescale >>  8) & 0xFF,\r\n        timescale & 0xFF, // timescale\r\n        (duration >> 24) & 0xFF,\r\n        (duration >> 16) & 0xFF,\r\n        (duration >>  8) & 0xFF,\r\n        duration & 0xFF, // duration\r\n        0x00, 0x01, 0x00, 0x00, // 1.0 rate\r\n        0x01, 0x00, // 1.0 volume\r\n        0x00, 0x00, // reserved\r\n        0x00, 0x00, 0x00, 0x00, // reserved\r\n        0x00, 0x00, 0x00, 0x00, // reserved\r\n        0x00, 0x01, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x01, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, // pre_defined\r\n        0xff, 0xff, 0xff, 0xff // next_track_ID\r\n      ]);\r\n    return MP4.box(MP4.types.mvhd, bytes);\r\n  }\r\n\r\n  static sdtp(track) {\r\n    var\r\n      samples = track.samples || [],\r\n      bytes = new Uint8Array(4 + samples.length),\r\n      flags,\r\n      i;\r\n    // leave the full box header (4 bytes) all zero\r\n    // write the sample table\r\n    for (i = 0; i < samples.length; i++) {\r\n      flags = samples[i].flags;\r\n      bytes[i + 4] = (flags.dependsOn << 4) |\r\n        (flags.isDependedOn << 2) |\r\n        (flags.hasRedundancy);\r\n    }\r\n\r\n    return MP4.box(MP4.types.sdtp, bytes);\r\n  }\r\n\r\n  static stbl(track) {\r\n    return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\r\n  }\r\n\r\n  static avc1(track) {\r\n    var sps = [], pps = [], i, data, len;\r\n    // assemble the SPSs\r\n\r\n    for (i = 0; i < track.sps.length; i++) {\r\n      data = track.sps[i];\r\n      len = data.byteLength;\r\n      sps.push((len >>> 8) & 0xFF);\r\n      sps.push((len & 0xFF));\r\n      sps = sps.concat(Array.prototype.slice.call(data)); // SPS\r\n    }\r\n\r\n    // assemble the PPSs\r\n    for (i = 0; i < track.pps.length; i++) {\r\n      data = track.pps[i];\r\n      len = data.byteLength;\r\n      pps.push((len >>> 8) & 0xFF);\r\n      pps.push((len & 0xFF));\r\n      pps = pps.concat(Array.prototype.slice.call(data));\r\n    }\r\n\r\n    var avcc = MP4.box(MP4.types.avcC, new Uint8Array([\r\n            0x01,   // version\r\n            sps[3], // profile\r\n            sps[4], // profile compat\r\n            sps[5], // level\r\n            0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\r\n            0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\r\n          ].concat(sps).concat([\r\n            track.pps.length // numOfPictureParameterSets\r\n          ]).concat(pps))), // \"PPS\"\r\n        width = track.width,\r\n        height = track.height;\r\n    //console.log('avcc:' + Hex.hexDump(avcc));\r\n    return MP4.box(MP4.types.avc1, new Uint8Array([\r\n        0x00, 0x00, 0x00, // reserved\r\n        0x00, 0x00, 0x00, // reserved\r\n        0x00, 0x01, // data_reference_index\r\n        0x00, 0x00, // pre_defined\r\n        0x00, 0x00, // reserved\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00, // pre_defined\r\n        (width >> 8) & 0xFF,\r\n        width & 0xff, // width\r\n        (height >> 8) & 0xFF,\r\n        height & 0xff, // height\r\n        0x00, 0x48, 0x00, 0x00, // horizresolution\r\n        0x00, 0x48, 0x00, 0x00, // vertresolution\r\n        0x00, 0x00, 0x00, 0x00, // reserved\r\n        0x00, 0x01, // frame_count\r\n        0x12,\r\n        0x64, 0x61, 0x69, 0x6C, //dailymotion/hls.js\r\n        0x79, 0x6D, 0x6F, 0x74,\r\n        0x69, 0x6F, 0x6E, 0x2F,\r\n        0x68, 0x6C, 0x73, 0x2E,\r\n        0x6A, 0x73, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, 0x00,\r\n        0x00, 0x00, 0x00, // compressorname\r\n        0x00, 0x18,   // depth = 24\r\n        0x11, 0x11]), // pre_defined = -1\r\n          avcc,\r\n          MP4.box(MP4.types.btrt, new Uint8Array([\r\n            0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\r\n            0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\r\n            0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\r\n          );\r\n  }\r\n\r\n  static esds(track) {\r\n    var configlen = track.config.length;\r\n    return new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n\r\n      0x03, // descriptor_type\r\n      0x17+configlen, // length\r\n      0x00, 0x01, //es_id\r\n      0x00, // stream_priority\r\n\r\n      0x04, // descriptor_type\r\n      0x0f+configlen, // length\r\n      0x40, //codec : mpeg4_audio\r\n      0x15, // stream_type\r\n      0x00, 0x00, 0x00, // buffer_size\r\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\r\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\r\n\r\n      0x05 // descriptor_type\r\n      ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\r\n  }\r\n\r\n  static mp4a(track) {\r\n    var audiosamplerate = track.audiosamplerate;\r\n      return MP4.box(MP4.types.mp4a, new Uint8Array([\r\n      0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x01, // data_reference_index\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, track.channelCount, // channelcount\r\n      0x00, 0x10, // sampleSize:16bits\r\n      0x00, 0x00, 0x00, 0x00, // reserved2\r\n      (audiosamplerate >> 8) & 0xFF,\r\n      audiosamplerate & 0xff, //\r\n      0x00, 0x00]),\r\n      MP4.box(MP4.types.esds, MP4.esds(track)));\r\n  }\r\n\r\n  static stsd(track) {\r\n    if (track.type === 'audio') {\r\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\r\n    } else {\r\n      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\r\n    }\r\n  }\r\n\r\n  static tkhd(track) {\r\n    var id = track.id,\r\n        duration = track.duration,\r\n        width = track.width,\r\n        height = track.height;\r\n    return MP4.box(MP4.types.tkhd, new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x07, // flags\r\n      0x00, 0x00, 0x00, 0x00, // creation_time\r\n      0x00, 0x00, 0x00, 0x00, // modification_time\r\n      (id >> 24) & 0xFF,\r\n      (id >> 16) & 0xFF,\r\n      (id >> 8) & 0xFF,\r\n      id & 0xFF, // track_ID\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      (duration >> 24),\r\n      (duration >> 16) & 0xFF,\r\n      (duration >>  8) & 0xFF,\r\n      duration & 0xFF, // duration\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00, // reserved\r\n      0x00, 0x00, // layer\r\n      0x00, 0x00, // alternate_group\r\n      0x00, 0x00, // non-audio track volume\r\n      0x00, 0x00, // reserved\r\n      0x00, 0x01, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x01, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x00, 0x00, 0x00, 0x00,\r\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\r\n      (width >> 8) & 0xFF,\r\n      width & 0xFF,\r\n      0x00, 0x00, // width\r\n      (height >> 8) & 0xFF,\r\n      height & 0xFF,\r\n      0x00, 0x00 // height\r\n    ]));\r\n  }\r\n\r\n  static traf(track,baseMediaDecodeTime) {\r\n    var sampleDependencyTable = MP4.sdtp(track),\r\n        id = track.id;\r\n    return MP4.box(MP4.types.traf,\r\n               MP4.box(MP4.types.tfhd, new Uint8Array([\r\n                 0x00, // version 0\r\n                 0x00, 0x00, 0x00, // flags\r\n                 (id >> 24),\r\n                 (id >> 16) & 0XFF,\r\n                 (id >> 8) & 0XFF,\r\n                 (id & 0xFF) // track_ID\r\n               ])),\r\n               MP4.box(MP4.types.tfdt, new Uint8Array([\r\n                 0x00, // version 0\r\n                 0x00, 0x00, 0x00, // flags\r\n                 (baseMediaDecodeTime >>24),\r\n                 (baseMediaDecodeTime >> 16) & 0XFF,\r\n                 (baseMediaDecodeTime >> 8) & 0XFF,\r\n                 (baseMediaDecodeTime & 0xFF) // baseMediaDecodeTime\r\n               ])),\r\n               MP4.trun(track,\r\n                    sampleDependencyTable.length +\r\n                    16 + // tfhd\r\n                    16 + // tfdt\r\n                    8 +  // traf header\r\n                    16 + // mfhd\r\n                    8 +  // moof header\r\n                    8),  // mdat header\r\n               sampleDependencyTable);\r\n  }\r\n\r\n  /**\r\n   * Generate a track box.\r\n   * @param track {object} a track definition\r\n   * @return {Uint8Array} the track box\r\n   */\r\n  static trak(track) {\r\n    track.duration = track.duration || 0xffffffff;\r\n    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\r\n  }\r\n\r\n  static trex(track) {\r\n    var id = track.id;\r\n    return MP4.box(MP4.types.trex, new Uint8Array([\r\n      0x00, // version 0\r\n      0x00, 0x00, 0x00, // flags\r\n     (id >> 24),\r\n     (id >> 16) & 0XFF,\r\n     (id >> 8) & 0XFF,\r\n     (id & 0xFF), // track_ID\r\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\r\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\r\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\r\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\r\n    ]));\r\n  }\r\n\r\n  static trun(track, offset) {\r\n    var samples= track.samples || [],\r\n        len = samples.length,\r\n        arraylen = 12 + (16 * len),\r\n        array = new Uint8Array(arraylen),\r\n        i,sample,duration,size,flags,cts;\r\n    offset += 8 + arraylen;\r\n    array.set([\r\n      0x00, // version 0\r\n      0x00, 0x0f, 0x01, // flags\r\n      (len >>> 24) & 0xFF,\r\n      (len >>> 16) & 0xFF,\r\n      (len >>> 8) & 0xFF,\r\n      len & 0xFF, // sample_count\r\n      (offset >>> 24) & 0xFF,\r\n      (offset >>> 16) & 0xFF,\r\n      (offset >>> 8) & 0xFF,\r\n      offset & 0xFF // data_offset\r\n    ],0);\r\n    for (i = 0; i < len; i++) {\r\n      sample = samples[i];\r\n      duration = sample.duration;\r\n      size = sample.size;\r\n      flags = sample.flags;\r\n      cts = sample.cts;\r\n      array.set([\r\n        (duration >>> 24) & 0xFF,\r\n        (duration >>> 16) & 0xFF,\r\n        (duration >>> 8) & 0xFF,\r\n        duration & 0xFF, // sample_duration\r\n        (size >>> 24) & 0xFF,\r\n        (size >>> 16) & 0xFF,\r\n        (size >>> 8) & 0xFF,\r\n        size & 0xFF, // sample_size\r\n        (flags.isLeading << 2) | flags.dependsOn,\r\n        (flags.isDependedOn << 6) |\r\n          (flags.hasRedundancy << 4) |\r\n          (flags.paddingValue << 1) |\r\n          flags.isNonSync,\r\n        flags.degradPrio & 0xF0 << 8,\r\n        flags.degradPrio & 0x0F, // sample_flags\r\n        (cts >>> 24) & 0xFF,\r\n        (cts >>> 16) & 0xFF,\r\n        (cts >>> 8) & 0xFF,\r\n        cts & 0xFF // sample_composition_time_offset\r\n      ],12+16*i);\r\n    }\r\n    return MP4.box(MP4.types.trun, array);\r\n  }\r\n\r\n  static initSegment(tracks) {\r\n    if (!MP4.types) {\r\n      MP4.init();\r\n    }\r\n    var movie = MP4.moov(tracks), result;\r\n    result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\r\n    result.set(MP4.FTYP);\r\n    result.set(movie, MP4.FTYP.byteLength);\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default MP4;\r\n",
    "/**\r\n * fMP4 remuxer\r\n*/\r\n\r\n\r\nimport Event from '../events';\r\nimport {logger} from '../utils/logger';\r\nimport MP4 from '../remux/mp4-generator';\r\nimport {ErrorTypes, ErrorDetails} from '../errors';\r\n\r\nclass MP4Remuxer {\r\n  constructor(observer) {\r\n    this.observer = observer;\r\n    this.ISGenerated = false;\r\n    this.PES2MP4SCALEFACTOR = 4;\r\n    this.PES_TIMESCALE = 90000;\r\n    this.MP4_TIMESCALE = this.PES_TIMESCALE / this.PES2MP4SCALEFACTOR;\r\n  }\r\n\r\n  get timescale() {\r\n    return this.MP4_TIMESCALE;\r\n  }\r\n\r\n  destroy() {\r\n  }\r\n\r\n  insertDiscontinuity() {\r\n    this._initPTS = this._initDTS = this.nextAacPts = this.nextAvcDts = undefined;\r\n  }\r\n\r\n  switchLevel() {\r\n    this.ISGenerated = false;\r\n  }\r\n\r\n  remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset, contiguous) {\r\n    // generate Init Segment if needed\r\n    if (!this.ISGenerated) {\r\n      this.generateIS(audioTrack,videoTrack,timeOffset);\r\n    }\r\n    //logger.log('nb AVC samples:' + videoTrack.samples.length);\r\n    if (videoTrack.samples.length) {\r\n      this.remuxVideo(videoTrack,timeOffset,contiguous);\r\n    }\r\n    //logger.log('nb AAC samples:' + audioTrack.samples.length);\r\n    if (audioTrack.samples.length) {\r\n      this.remuxAudio(audioTrack,timeOffset,contiguous);\r\n    }\r\n    //logger.log('nb ID3 samples:' + audioTrack.samples.length);\r\n    if (id3Track.samples.length) {\r\n      this.remuxID3(id3Track,timeOffset);\r\n    }\r\n    //logger.log('nb ID3 samples:' + audioTrack.samples.length);\r\n    if (textTrack.samples.length) {\r\n      this.remuxText(textTrack,timeOffset);\r\n    }\r\n    //notify end of parsing\r\n    this.observer.trigger(Event.FRAG_PARSED);\r\n  }\r\n\r\n  generateIS(audioTrack,videoTrack,timeOffset) {\r\n    var observer = this.observer,\r\n        audioSamples = audioTrack.samples,\r\n        videoSamples = videoTrack.samples,\r\n        nbAudio = audioSamples.length,\r\n        nbVideo = videoSamples.length,\r\n        pesTimeScale = this.PES_TIMESCALE;\r\n\r\n    if(nbAudio === 0 && nbVideo === 0) {\r\n      observer.trigger(Event.ERROR, {type : ErrorTypes.MEDIA_ERROR, details: ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'no audio/video samples found'});\r\n    } else if (nbVideo === 0) {\r\n      //audio only\r\n      if (audioTrack.config) {\r\n         observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, {\r\n          audioMoov: MP4.initSegment([audioTrack]),\r\n          audioCodec : audioTrack.codec,\r\n          audioChannelCount : audioTrack.channelCount\r\n        });\r\n        this.ISGenerated = true;\r\n      }\r\n      if (this._initPTS === undefined) {\r\n        // remember first PTS of this demuxing context\r\n        this._initPTS = audioSamples[0].pts - pesTimeScale * timeOffset;\r\n        this._initDTS = audioSamples[0].dts - pesTimeScale * timeOffset;\r\n      }\r\n    } else\r\n    if (nbAudio === 0) {\r\n      //video only\r\n      if (videoTrack.sps && videoTrack.pps) {\r\n         observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, {\r\n          videoMoov: MP4.initSegment([videoTrack]),\r\n          videoCodec: videoTrack.codec,\r\n          videoWidth: videoTrack.width,\r\n          videoHeight: videoTrack.height\r\n        });\r\n        this.ISGenerated = true;\r\n        if (this._initPTS === undefined) {\r\n          // remember first PTS of this demuxing context\r\n          this._initPTS = videoSamples[0].pts - pesTimeScale * timeOffset;\r\n          this._initDTS = videoSamples[0].dts - pesTimeScale * timeOffset;\r\n        }\r\n      }\r\n    } else {\r\n      //audio and video\r\n      if (audioTrack.config && videoTrack.sps && videoTrack.pps) {\r\n          observer.trigger(Event.FRAG_PARSING_INIT_SEGMENT, {\r\n          audioMoov: MP4.initSegment([audioTrack]),\r\n          audioCodec: audioTrack.codec,\r\n          audioChannelCount: audioTrack.channelCount,\r\n          videoMoov: MP4.initSegment([videoTrack]),\r\n          videoCodec: videoTrack.codec,\r\n          videoWidth: videoTrack.width,\r\n          videoHeight: videoTrack.height\r\n        });\r\n        this.ISGenerated = true;\r\n        if (this._initPTS === undefined) {\r\n          // remember first PTS of this demuxing context\r\n          this._initPTS = Math.min(videoSamples[0].pts, audioSamples[0].pts) - pesTimeScale * timeOffset;\r\n          this._initDTS = Math.min(videoSamples[0].dts, audioSamples[0].dts) - pesTimeScale * timeOffset;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  remuxVideo(track, timeOffset, contiguous) {\r\n    var view,\r\n        offset = 8,\r\n        pesTimeScale = this.PES_TIMESCALE,\r\n        pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\r\n        avcSample,\r\n        mp4Sample,\r\n        mp4SampleLength,\r\n        unit,\r\n        mdat, moof,\r\n        firstPTS, firstDTS, lastDTS,\r\n        pts, dts, ptsnorm, dtsnorm,\r\n        flags,\r\n        samples = [];\r\n    /* concatenate the video data and construct the mdat in place\r\n      (need 8 more bytes to fill length and mpdat type) */\r\n    mdat = new Uint8Array(track.len + (4 * track.nbNalu) + 8);\r\n    view = new DataView(mdat.buffer);\r\n    view.setUint32(0, mdat.byteLength);\r\n    mdat.set(MP4.types.mdat, 4);\r\n    while (track.samples.length) {\r\n      avcSample = track.samples.shift();\r\n      mp4SampleLength = 0;\r\n      // convert NALU bitstream to MP4 format (prepend NALU with size field)\r\n      while (avcSample.units.units.length) {\r\n        unit = avcSample.units.units.shift();\r\n        view.setUint32(offset, unit.data.byteLength);\r\n        offset += 4;\r\n        mdat.set(unit.data, offset);\r\n        offset += unit.data.byteLength;\r\n        mp4SampleLength += 4 + unit.data.byteLength;\r\n      }\r\n      pts = avcSample.pts - this._initDTS;\r\n      dts = avcSample.dts - this._initDTS;\r\n      // ensure DTS is not bigger than PTS\r\n      dts = Math.min(pts,dts);\r\n      //logger.log(`Video/PTS/DTS:${Math.round(pts/90)}/${Math.round(dts/90)}`);\r\n      // if not first AVC sample of video track, normalize PTS/DTS with previous sample value\r\n      // and ensure that sample duration is positive\r\n      if (lastDTS !== undefined) {\r\n        ptsnorm = this._PTSNormalize(pts, lastDTS);\r\n        dtsnorm = this._PTSNormalize(dts, lastDTS);\r\n        var sampleDuration = (dtsnorm - lastDTS) / pes2mp4ScaleFactor;\r\n        if (sampleDuration <= 0) {\r\n          logger.log(`invalid sample duration at PTS/DTS: ${avcSample.pts}/${avcSample.dts}:${sampleDuration}`);\r\n          sampleDuration = 1;\r\n        }\r\n        mp4Sample.duration = sampleDuration;\r\n      } else {\r\n        var nextAvcDts = this.nextAvcDts,delta;\r\n        // first AVC sample of video track, normalize PTS/DTS\r\n        ptsnorm = this._PTSNormalize(pts, nextAvcDts);\r\n        dtsnorm = this._PTSNormalize(dts, nextAvcDts);\r\n        delta = Math.round((dtsnorm - nextAvcDts) / 90);\r\n        // if fragment are contiguous, or delta less than 600ms, ensure there is no overlap/hole between fragments\r\n        if (contiguous || Math.abs(delta) < 600) {\r\n          if (delta) {\r\n            if (delta > 1) {\r\n              logger.log(`AVC:${delta} ms hole between fragments detected,filling it`);\r\n            } else if (delta < -1) {\r\n              logger.log(`AVC:${(-delta)} ms overlapping between fragments detected`);\r\n            }\r\n            // set DTS to next DTS\r\n            dtsnorm = nextAvcDts;\r\n            // offset PTS as well, ensure that PTS is smaller or equal than new DTS\r\n            ptsnorm = Math.max(ptsnorm - delta, dtsnorm);\r\n            logger.log(`Video/PTS/DTS adjusted: ${ptsnorm}/${dtsnorm},delta:${delta}`);\r\n          }\r\n        }\r\n        // remember first PTS of our avcSamples, ensure value is positive\r\n        firstPTS = Math.max(0, ptsnorm);\r\n        firstDTS = Math.max(0, dtsnorm);\r\n      }\r\n      //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${this._initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');\r\n      mp4Sample = {\r\n        size: mp4SampleLength,\r\n        duration: 0,\r\n        cts: (ptsnorm - dtsnorm) / pes2mp4ScaleFactor,\r\n        flags: {\r\n          isLeading: 0,\r\n          isDependedOn: 0,\r\n          hasRedundancy: 0,\r\n          degradPrio: 0\r\n        }\r\n      };\r\n      flags = mp4Sample.flags;\r\n      if (avcSample.key === true) {\r\n        // the current sample is a key frame\r\n        flags.dependsOn = 2;\r\n        flags.isNonSync = 0;\r\n      } else {\r\n        flags.dependsOn = 1;\r\n        flags.isNonSync = 1;\r\n      }\r\n      samples.push(mp4Sample);\r\n      lastDTS = dtsnorm;\r\n    }\r\n    var lastSampleDuration = 0;\r\n    if (samples.length >= 2) {\r\n      lastSampleDuration = samples[samples.length - 2].duration;\r\n      mp4Sample.duration = lastSampleDuration;\r\n    }\r\n    // next AVC sample DTS should be equal to last sample DTS + last sample duration\r\n    this.nextAvcDts = dtsnorm + lastSampleDuration * pes2mp4ScaleFactor;\r\n    track.len = 0;\r\n    track.nbNalu = 0;\r\n    if(samples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\r\n      flags = samples[0].flags;\r\n    // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\r\n    // https://code.google.com/p/chromium/issues/detail?id=229412\r\n      flags.dependsOn = 2;\r\n      flags.isNonSync = 0;\r\n    }\r\n    track.samples = samples;\r\n    moof = MP4.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\r\n    track.samples = [];\r\n    this.observer.trigger(Event.FRAG_PARSING_DATA, {\r\n      moof: moof,\r\n      mdat: mdat,\r\n      startPTS: firstPTS / pesTimeScale,\r\n      endPTS: (ptsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\r\n      startDTS: firstDTS / pesTimeScale,\r\n      endDTS: this.nextAvcDts / pesTimeScale,\r\n      type: 'video',\r\n      nb: samples.length\r\n    });\r\n  }\r\n\r\n  remuxAudio(track,timeOffset, contiguous) {\r\n    var view,\r\n        offset = 8,\r\n        pesTimeScale = this.PES_TIMESCALE,\r\n        pes2mp4ScaleFactor = this.PES2MP4SCALEFACTOR,\r\n        aacSample, mp4Sample,\r\n        unit,\r\n        mdat, moof,\r\n        firstPTS, firstDTS, lastDTS,\r\n        pts, dts, ptsnorm, dtsnorm,\r\n        samples = [],\r\n        samples0 = [];\r\n\r\n    track.samples.forEach(aacSample => {\r\n      if(pts === undefined || aacSample.pts > pts) {\r\n        samples0.push(aacSample);\r\n        pts = aacSample.pts;\r\n      } else {\r\n        logger.warn('dropping past audio frame');\r\n      }\r\n    });\r\n\r\n    while (samples0.length) {\r\n      aacSample = samples0.shift();\r\n      unit = aacSample.unit;\r\n      pts = aacSample.pts - this._initDTS;\r\n      dts = aacSample.dts - this._initDTS;\r\n      //logger.log(`Audio/PTS:${Math.round(pts/90)}`);\r\n      // if not first sample\r\n      if (lastDTS !== undefined) {\r\n        ptsnorm = this._PTSNormalize(pts, lastDTS);\r\n        dtsnorm = this._PTSNormalize(dts, lastDTS);\r\n        // let's compute sample duration\r\n        mp4Sample.duration = (dtsnorm - lastDTS) / pes2mp4ScaleFactor;\r\n        if (mp4Sample.duration < 0) {\r\n          // not expected to happen ...\r\n          logger.log(`invalid AAC sample duration at PTS:${aacSample.pts}:${mp4Sample.duration}`);\r\n          mp4Sample.duration = 0;\r\n        }\r\n      } else {\r\n        var nextAacPts = this.nextAacPts,delta;\r\n        ptsnorm = this._PTSNormalize(pts, nextAacPts);\r\n        dtsnorm = this._PTSNormalize(dts, nextAacPts);\r\n        delta = Math.round(1000 * (ptsnorm - nextAacPts) / pesTimeScale);\r\n        // if fragment are contiguous, or delta less than 600ms, ensure there is no overlap/hole between fragments\r\n        if (contiguous || Math.abs(delta) < 600) {\r\n          // log delta\r\n          if (delta) {\r\n            if (delta > 0) {\r\n              logger.log(`${delta} ms hole between AAC samples detected,filling it`);\r\n              // if we have frame overlap, overlapping for more than half a frame duraion\r\n            } else if (delta < -12) {\r\n              // drop overlapping audio frames... browser will deal with it\r\n              logger.log(`${(-delta)} ms overlapping between AAC samples detected, drop frame`);\r\n              track.len -= unit.byteLength;\r\n              continue;\r\n            }\r\n            // set DTS to next DTS\r\n            ptsnorm = dtsnorm = nextAacPts;\r\n          }\r\n        }\r\n        // remember first PTS of our aacSamples, ensure value is positive\r\n        firstPTS = Math.max(0, ptsnorm);\r\n        firstDTS = Math.max(0, dtsnorm);\r\n        /* concatenate the audio data and construct the mdat in place\r\n          (need 8 more bytes to fill length and mdat type) */\r\n        mdat = new Uint8Array(track.len + 8);\r\n        view = new DataView(mdat.buffer);\r\n        view.setUint32(0, mdat.byteLength);\r\n        mdat.set(MP4.types.mdat, 4);\r\n      }\r\n      mdat.set(unit, offset);\r\n      offset += unit.byteLength;\r\n      //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${aacSample.pts}/${aacSample.dts}/${this._initDTS}/${ptsnorm}/${dtsnorm}/${(aacSample.pts/4294967296).toFixed(3)}');\r\n      mp4Sample = {\r\n        size: unit.byteLength,\r\n        cts: 0,\r\n        duration:0,\r\n        flags: {\r\n          isLeading: 0,\r\n          isDependedOn: 0,\r\n          hasRedundancy: 0,\r\n          degradPrio: 0,\r\n          dependsOn: 1,\r\n        }\r\n      };\r\n      samples.push(mp4Sample);\r\n      lastDTS = dtsnorm;\r\n    }\r\n    var lastSampleDuration = 0;\r\n    var nbSamples = samples.length;\r\n    //set last sample duration as being identical to previous sample\r\n    if (nbSamples >= 2) {\r\n      lastSampleDuration = samples[nbSamples - 2].duration;\r\n      mp4Sample.duration = lastSampleDuration;\r\n    }\r\n    if (nbSamples) {\r\n      // next aac sample PTS should be equal to last sample PTS + duration\r\n      this.nextAacPts = ptsnorm + pes2mp4ScaleFactor * lastSampleDuration;\r\n      //logger.log('Audio/PTS/PTSend:' + aacSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\r\n      track.len = 0;\r\n      track.samples = samples;\r\n      moof = MP4.moof(track.sequenceNumber++, firstDTS / pes2mp4ScaleFactor, track);\r\n      track.samples = [];\r\n      this.observer.trigger(Event.FRAG_PARSING_DATA, {\r\n        moof: moof,\r\n        mdat: mdat,\r\n        startPTS: firstPTS / pesTimeScale,\r\n        endPTS: this.nextAacPts / pesTimeScale,\r\n        startDTS: firstDTS / pesTimeScale,\r\n        endDTS: (dtsnorm + pes2mp4ScaleFactor * lastSampleDuration) / pesTimeScale,\r\n        type: 'audio',\r\n        nb: nbSamples\r\n      });\r\n    }\r\n  }\r\n\r\n  remuxID3(track,timeOffset) {\r\n    var length = track.samples.length, sample;\r\n    // consume samples\r\n    if(length) {\r\n      for(var index = 0; index < length; index++) {\r\n        sample = track.samples[index];\r\n        // setting id3 pts, dts to relative time\r\n        // using this._initPTS and this._initDTS to calculate relative time\r\n        sample.pts = ((sample.pts - this._initPTS) / this.PES_TIMESCALE);\r\n        sample.dts = ((sample.dts - this._initDTS) / this.PES_TIMESCALE);\r\n      }\r\n      this.observer.trigger(Event.FRAG_PARSING_METADATA, {\r\n        samples:track.samples\r\n      });\r\n    }\r\n\r\n    track.samples = [];\r\n    timeOffset = timeOffset;\r\n  }\r\n\r\n  remuxText(track,timeOffset) {\r\n    track.samples.sort(function(a, b) {\r\n      return (a.pts-b.pts);\r\n    });\r\n\r\n    var length = track.samples.length, sample;\r\n    // consume samples\r\n    if(length) {\r\n      for(var index = 0; index < length; index++) {\r\n        sample = track.samples[index];\r\n        // setting text pts, dts to relative time\r\n        // using this._initPTS and this._initDTS to calculate relative time\r\n        sample.pts = ((sample.pts - this._initPTS) / this.PES_TIMESCALE);\r\n      }\r\n      this.observer.trigger(Event.FRAG_PARSING_USERDATA, {\r\n        samples:track.samples\r\n      });\r\n    }\r\n\r\n    track.samples = [];\r\n    timeOffset = timeOffset;\r\n  }\r\n  \r\n  _PTSNormalize(value, reference) {\r\n    var offset;\r\n    if (reference === undefined) {\r\n      return value;\r\n    }\r\n    if (reference < value) {\r\n      // - 2^33\r\n      offset = -8589934592;\r\n    } else {\r\n      // + 2^33\r\n      offset = 8589934592;\r\n    }\r\n    /* PTS is 33bit (from 0 to 2^33 -1)\r\n      if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\r\n      PTS looping occured. fill the gap */\r\n    while (Math.abs(value - reference) > 4294967296) {\r\n        value += offset;\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n\r\nexport default MP4Remuxer;\r\n",
    "\r\n// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js\r\nclass AttrList {\r\n\r\n  constructor(attrs) {\r\n    if (typeof attrs === 'string') {\r\n      attrs = AttrList.parseAttrList(attrs);\r\n    }\r\n    for(var attr in attrs){\r\n      if(attrs.hasOwnProperty(attr)) {\r\n        this[attr] = attrs[attr];\r\n      }\r\n    }\r\n  }\r\n\r\n  decimalInteger(attrName) {\r\n    const intValue = parseInt(this[attrName], 10);\r\n    if (intValue > Number.MAX_SAFE_INTEGER) {\r\n      return Infinity;\r\n    }\r\n    return intValue;\r\n  }\r\n\r\n  hexadecimalInteger(attrName) {\r\n    if(this[attrName]) {\r\n      let stringValue = (this[attrName] || '0x').slice(2);\r\n      stringValue = ((stringValue.length & 1) ? '0' : '') + stringValue;\r\n\r\n      const value = new Uint8Array(stringValue.length / 2);\r\n      for (let i = 0; i < stringValue.length / 2; i++) {\r\n        value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n      return value;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  hexadecimalIntegerAsNumber(attrName) {\r\n    const intValue = parseInt(this[attrName], 16);\r\n    if (intValue > Number.MAX_SAFE_INTEGER) {\r\n      return Infinity;\r\n    }\r\n    return intValue;\r\n  }\r\n\r\n  decimalFloatingPoint(attrName) {\r\n    return parseFloat(this[attrName]);\r\n  }\r\n\r\n  enumeratedString(attrName) {\r\n    return this[attrName];\r\n  }\r\n\r\n  decimalResolution(attrName) {\r\n    const res = /^(\\d+)x(\\d+)$/.exec(this[attrName]);\r\n    if (res === null) {\r\n      return undefined;\r\n    }\r\n    return {\r\n      width: parseInt(res[1], 10),\r\n      height: parseInt(res[2], 10)\r\n    };\r\n  }\r\n\r\n  static parseAttrList(input) {\r\n    const re = /\\s*(.+?)\\s*=((?:\\\".*?\\\")|.*?)(?:,|$)/g;\r\n    var match, attrs = {};\r\n    while ((match = re.exec(input)) !== null) {\r\n      var value = match[2], quote = '\"';\r\n\r\n      if (value.indexOf(quote) === 0 &&\r\n          value.lastIndexOf(quote) === (value.length-1)) {\r\n        value = value.slice(1, -1);\r\n      }\r\n      attrs[match[1]] = value;\r\n    }\r\n    return attrs;\r\n  }\r\n\r\n}\r\n\r\nexport default AttrList;\r\n",
    "var BinarySearch = {\r\n    /**\r\n     * Searches for an item in an array which matches a certain condition.\r\n     * This requires the condition to only match one item in the array,\r\n     * and for the array to be ordered.\r\n     *\r\n     * @param {Array} list The array to search.\r\n     * @param {Function} comparisonFunction\r\n     *      Called and provided a candidate item as the first argument.\r\n     *      Should return:\r\n     *          > -1 if the item should be located at a lower index than the provided item.\r\n     *          > 1 if the item should be located at a higher index than the provided item.\r\n     *          > 0 if the item is the item you're looking for.\r\n     *\r\n     * @return {*} The object if it is found or null otherwise.\r\n     */\r\n    search: function(list, comparisonFunction) {\r\n        var minIndex = 0;\r\n        var maxIndex = list.length - 1;\r\n        var currentIndex = null;\r\n        var currentElement = null;\r\n     \r\n        while (minIndex <= maxIndex) {\r\n            currentIndex = (minIndex + maxIndex) / 2 | 0;\r\n            currentElement = list[currentIndex];\r\n            \r\n            var comparisonResult = comparisonFunction(currentElement);\r\n            if (comparisonResult > 0) {\r\n                minIndex = currentIndex + 1;\r\n            }\r\n            else if (comparisonResult < 0) {\r\n                maxIndex = currentIndex - 1;\r\n            }\r\n            else {\r\n                return currentElement;\r\n            }\r\n        }\r\n     \r\n        return null;\r\n    }\r\n};\r\n\r\nmodule.exports = BinarySearch;\r\n",
    "/*\r\n * CEA-708 interpreter\r\n*/\r\n\r\nclass CEA708Interpreter {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  attach(media) {\r\n    this.media = media;\r\n    this.display = [];\r\n    this.memory = [];\r\n  }\r\n\r\n  detach()\r\n  {\r\n    this.clear();\r\n  }\r\n\r\n  destroy() {\r\n  }\r\n\r\n  _createCue()\r\n  {\r\n    var VTTCue = window.VTTCue || window.TextTrackCue;\r\n\r\n    this.cue = new VTTCue(-1, -1, '');\r\n    this.cue.text = '';\r\n    this.cue.pauseOnExit = false;\r\n\r\n    // make sure it doesn't show up before it's ready\r\n    this.startTime = Number.MAX_VALUE;\r\n\r\n    // show it 'forever' once we do show it\r\n    // (we'll set the end time once we know it later)\r\n    this.cue.endTime = Number.MAX_VALUE;\r\n\r\n    this.memory.push(this.cue);\r\n  }\r\n\r\n  clear()\r\n  {\r\n    if (this._textTrack && this._textTrack.cues)\r\n    {\r\n      while (this._textTrack.cues.length > 0)\r\n      {\r\n        this._textTrack.removeCue(this._textTrack.cues[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  push(timestamp, bytes)\r\n  {\r\n    if (!this.cue)\r\n    {\r\n      this._createCue();\r\n    }\r\n\r\n    var count = bytes[0] & 31;\r\n    var position = 2;\r\n    var byte, ccbyte1, ccbyte2, ccValid, ccType;\r\n\r\n    for (var j=0; j<count; j++)\r\n    {\r\n      byte = bytes[position++];\r\n      ccbyte1 = 0x7F & bytes[position++];\r\n      ccbyte2 = 0x7F & bytes[position++];\r\n      ccValid = ((4 & byte) === 0 ? false : true);\r\n      ccType = (3 & byte);\r\n\r\n      if (ccbyte1 === 0 && ccbyte2 === 0)\r\n      {\r\n        continue;\r\n      }\r\n\r\n      if (ccValid)\r\n      {\r\n        if (ccType === 0) // || ccType === 1\r\n        {\r\n          // Standard Characters\r\n          if (0x20 & ccbyte1 || 0x40 & ccbyte1)\r\n          {\r\n            this.cue.text += this._fromCharCode(ccbyte1) + this._fromCharCode(ccbyte2);\r\n          }\r\n          // Special Characters\r\n          else if ((ccbyte1 === 0x11 || ccbyte1 === 0x19) && ccbyte2 >= 0x30 && ccbyte2 <= 0x3F)\r\n          {\r\n            // extended chars, e.g. musical note, accents\r\n            switch (ccbyte2)\r\n            {\r\n              case 48:\r\n                this.cue.text += '®';\r\n                break;\r\n              case 49:\r\n                this.cue.text += '°';\r\n                break;\r\n              case 50:\r\n                this.cue.text += '½';\r\n                break;\r\n              case 51:\r\n                this.cue.text += '¿';\r\n                break;\r\n              case 52:\r\n                this.cue.text += '™';\r\n                break;\r\n              case 53:\r\n                this.cue.text += '¢';\r\n                break;\r\n              case 54:\r\n                this.cue.text += '';\r\n                break;\r\n              case 55:\r\n                this.cue.text += '£';\r\n                break;\r\n              case 56:\r\n                this.cue.text += '♪';\r\n                break;\r\n              case 57:\r\n                this.cue.text += ' ';\r\n                break;\r\n              case 58:\r\n                this.cue.text += 'è';\r\n                break;\r\n              case 59:\r\n                this.cue.text += 'â';\r\n                break;\r\n              case 60:\r\n                this.cue.text += 'ê';\r\n                break;\r\n              case 61:\r\n                this.cue.text += 'î';\r\n                break;\r\n              case 62:\r\n                this.cue.text += 'ô';\r\n                break;\r\n              case 63:\r\n                this.cue.text += 'û';\r\n                break;\r\n            }\r\n          }\r\n          if ((ccbyte1 === 0x11 || ccbyte1 === 0x19) && ccbyte2 >= 0x20 && ccbyte2 <= 0x2F)\r\n          {\r\n            // Mid-row codes: color/underline\r\n            switch (ccbyte2)\r\n            {\r\n              case 0x20:\r\n                // White\r\n                break;\r\n              case 0x21:\r\n                // White Underline\r\n                break;\r\n              case 0x22:\r\n                // Green\r\n                break;\r\n              case 0x23:\r\n                // Green Underline\r\n                break;\r\n              case 0x24:\r\n                // Blue\r\n                break;\r\n              case 0x25:\r\n                // Blue Underline\r\n                break;\r\n              case 0x26:\r\n                // Cyan\r\n                break;\r\n              case 0x27:\r\n                // Cyan Underline\r\n                break;\r\n              case 0x28:\r\n                // Red\r\n                break;\r\n              case 0x29:\r\n                // Red Underline\r\n                break;\r\n              case 0x2A:\r\n                // Yellow\r\n                break;\r\n              case 0x2B:\r\n                // Yellow Underline\r\n                break;\r\n              case 0x2C:\r\n                // Magenta\r\n                break;\r\n              case 0x2D:\r\n                // Magenta Underline\r\n                break;\r\n              case 0x2E:\r\n                // Italics\r\n                break;\r\n              case 0x2F:\r\n                // Italics Underline\r\n                break;\r\n            }\r\n          }\r\n          if ((ccbyte1 === 0x14 || ccbyte1 === 0x1C) && ccbyte2 >= 0x20 && ccbyte2 <= 0x2F)\r\n          {\r\n            // Mid-row codes: color/underline\r\n            switch (ccbyte2)\r\n            {\r\n              case 0x20:\r\n                // TODO: shouldn't affect roll-ups...\r\n                this._clearActiveCues(timestamp);\r\n                // RCL: Resume Caption Loading\r\n                // begin pop on\r\n                break;\r\n              case 0x21:\r\n                // BS: Backspace\r\n                this.cue.text = this.cue.text.substr(0, this.cue.text.length-1);\r\n                break;\r\n              case 0x22:\r\n                // AOF: reserved (formerly alarm off)\r\n                break;\r\n              case 0x23:\r\n                // AON: reserved (formerly alarm on)\r\n                break;\r\n              case 0x24:\r\n                // DER: Delete to end of row\r\n                break;\r\n              case 0x25:\r\n                // RU2: roll-up 2 rows\r\n                //this._rollup(2);\r\n                break;\r\n              case 0x26:\r\n                // RU3: roll-up 3 rows\r\n                //this._rollup(3);\r\n                break;\r\n              case 0x27:\r\n                // RU4: roll-up 4 rows\r\n                //this._rollup(4);\r\n                break;\r\n              case 0x28:\r\n                // FON: Flash on\r\n                break;\r\n              case 0x29:\r\n                // RDC: Resume direct captioning\r\n                this._clearActiveCues(timestamp);\r\n                break;\r\n              case 0x2A:\r\n                // TR: Text Restart\r\n                break;\r\n              case 0x2B:\r\n                // RTD: Resume Text Display\r\n                break;\r\n              case 0x2C:\r\n                // EDM: Erase Displayed Memory\r\n                this._clearActiveCues(timestamp);\r\n                break;\r\n              case 0x2D:\r\n                // CR: Carriage Return\r\n                // only affects roll-up\r\n                //this._rollup(1);\r\n                break;\r\n              case 0x2E:\r\n                // ENM: Erase non-displayed memory\r\n                this._text = '';\r\n                break;\r\n              case 0x2F:\r\n                this._flipMemory(timestamp);\r\n                // EOC: End of caption\r\n                // hide any displayed captions and show any hidden one\r\n                break;\r\n            }\r\n          }\r\n          if ((ccbyte1 === 0x17 || ccbyte1 === 0x1F) && ccbyte2 >= 0x21 && ccbyte2 <= 0x23)\r\n          {\r\n            // Mid-row codes: color/underline\r\n            switch (ccbyte2)\r\n            {\r\n              case 0x21:\r\n                // TO1: tab offset 1 column\r\n                break;\r\n              case 0x22:\r\n                // TO1: tab offset 2 column\r\n                break;\r\n              case 0x23:\r\n                // TO1: tab offset 3 column\r\n                break;\r\n            }\r\n          }\r\n          else {\r\n            // Probably a pre-amble address code\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _fromCharCode(byte)\r\n  {\r\n    switch (byte)\r\n    {\r\n      case 42:\r\n        return 'á';\r\n\r\n      case 2:\r\n        return 'á';\r\n\r\n      case 2:\r\n        return 'é';\r\n\r\n      case 4:\r\n        return 'í';\r\n\r\n      case 5:\r\n        return 'ó';\r\n\r\n      case 6:\r\n        return 'ú';\r\n\r\n      case 3:\r\n        return 'ç';\r\n\r\n      case 4:\r\n        return '÷';\r\n\r\n      case 5:\r\n        return 'Ñ';\r\n\r\n      case 6:\r\n        return 'ñ';\r\n\r\n      case 7:\r\n        return '█';\r\n\r\n      default:\r\n        return String.fromCharCode(byte);\r\n    }\r\n  }\r\n\r\n  _flipMemory(timestamp)\r\n  {\r\n    this._clearActiveCues(timestamp);\r\n    this._flushCaptions(timestamp);\r\n  }\r\n\r\n  _flushCaptions(timestamp)\r\n  {\r\n    if (!this._has708)\r\n    {\r\n      this._textTrack = this.media.addTextTrack('captions', 'English', 'en');\r\n      this._has708 = true;\r\n    }\r\n\r\n    for (var i=0; i<this.memory.length; i++)\r\n    {\r\n      this.memory[i].startTime = timestamp;\r\n      this._textTrack.addCue(this.memory[i]);\r\n      this.display.push(this.memory[i]);\r\n    }\r\n\r\n    this.memory = [];\r\n    this.cue = null;\r\n  }\r\n\r\n  _clearActiveCues(timestamp)\r\n  {\r\n    for (var i=0; i<this.display.length; i++)\r\n    {\r\n      this.display[i].endTime = timestamp;\r\n    }\r\n\r\n    this.display = [];\r\n  }\r\n\r\n/*  _rollUp(n)\r\n  {\r\n    // TODO: implement roll-up captions\r\n  }\r\n*/\r\n  _clearBufferedCues()\r\n  {\r\n    //remove them all...\r\n  }\r\n\r\n}\r\n\r\nexport default CEA708Interpreter;\r\n\r\n",
    "'use strict';\r\n\r\nfunction noop() {}\r\n\r\nconst fakeLogger = {\r\n  trace: noop,\r\n  debug: noop,\r\n  log: noop,\r\n  warn: noop,\r\n  info: noop,\r\n  error: noop\r\n};\r\n\r\nlet exportedLogger = fakeLogger;\r\n\r\n//let lastCallTime;\r\n// function formatMsgWithTimeInfo(type, msg) {\r\n//   const now = Date.now();\r\n//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';\r\n//   lastCallTime = now;\r\n//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';\r\n//   return msg;\r\n// }\r\n\r\nfunction formatMsg(type, msg) {\r\n  msg = '[' +  type + '] > ' + msg;\r\n  return msg;\r\n}\r\n\r\nfunction consolePrintFn(type) {\r\n  const func = window.console[type];\r\n  if (func) {\r\n    return function(...args) {\r\n      if(args[0]) {\r\n        args[0] = formatMsg(type, args[0]);\r\n      }\r\n      func.apply(window.console, args);\r\n    };\r\n  }\r\n  return noop;\r\n}\r\n\r\nfunction exportLoggerFunctions(debugConfig, ...functions) {\r\n  functions.forEach(function(type) {\r\n    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);\r\n  });\r\n}\r\n\r\nexport var enableLogs = function(debugConfig) {\r\n  if (debugConfig === true || typeof debugConfig === 'object') {\r\n    exportLoggerFunctions(debugConfig,\r\n      // Remove out from list here to hard-disable a log-level\r\n      //'trace',\r\n      'debug',\r\n      'log',\r\n      'info',\r\n      'warn',\r\n      'error'\r\n    );\r\n    // Some browsers don't allow to use bind on console object anyway\r\n    // fallback to default if needed\r\n    try {\r\n     exportedLogger.log();\r\n    } catch (e) {\r\n      exportedLogger = fakeLogger;\r\n    }\r\n  }\r\n  else {\r\n    exportedLogger = fakeLogger;\r\n  }\r\n};\r\n\r\nexport var logger = exportedLogger;\r\n",
    "var URLHelper = {\r\n\r\n  // build an absolute URL from a relative one using the provided baseURL\r\n  // if relativeURL is an absolute URL it will be returned as is.\r\n  buildAbsoluteURL: function(baseURL, relativeURL) {\r\n    // remove any remaining space and CRLF\r\n    relativeURL = relativeURL.trim();\r\n    if (/^[a-z]+:/i.test(relativeURL)) {\r\n      // complete url, not relative\r\n      return relativeURL;\r\n    }\r\n\r\n    var relativeURLQuery = null;\r\n    var relativeURLHash = null;\r\n\r\n    var relativeURLHashSplit = /^([^#]*)(.*)$/.exec(relativeURL);\r\n    if (relativeURLHashSplit) {\r\n      relativeURLHash = relativeURLHashSplit[2];\r\n      relativeURL = relativeURLHashSplit[1];\r\n    }\r\n    var relativeURLQuerySplit = /^([^\\?]*)(.*)$/.exec(relativeURL);\r\n    if (relativeURLQuerySplit) {\r\n      relativeURLQuery = relativeURLQuerySplit[2];\r\n      relativeURL = relativeURLQuerySplit[1];\r\n    }\r\n\r\n    var baseURLHashSplit = /^([^#]*)(.*)$/.exec(baseURL);\r\n    if (baseURLHashSplit) {\r\n      baseURL = baseURLHashSplit[1];\r\n    }\r\n    var baseURLQuerySplit = /^([^\\?]*)(.*)$/.exec(baseURL);\r\n    if (baseURLQuerySplit) {\r\n      baseURL = baseURLQuerySplit[1];\r\n    }\r\n\r\n    var baseURLDomainSplit = /^((([a-z]+):)?\\/\\/[a-z0-9\\.-]+(:[0-9]+)?\\/)(.*)$/i.exec(baseURL);\r\n    var baseURLProtocol = baseURLDomainSplit[3];\r\n    var baseURLDomain = baseURLDomainSplit[1];\r\n    var baseURLPath = baseURLDomainSplit[5];\r\n\r\n    var builtURL = null;\r\n    if (/^\\/\\//.test(relativeURL)) {\r\n      builtURL = baseURLProtocol+'://'+URLHelper.buildAbsolutePath('', relativeURL.substring(2));\r\n    }\r\n    else if (/^\\//.test(relativeURL)) {\r\n      builtURL = baseURLDomain+URLHelper.buildAbsolutePath('', relativeURL.substring(1));\r\n    }\r\n    else {\r\n      builtURL = URLHelper.buildAbsolutePath(baseURLDomain+baseURLPath, relativeURL);\r\n    }\r\n\r\n    // put the query and hash parts back\r\n    if (relativeURLQuery) {\r\n      builtURL += relativeURLQuery;\r\n    }\r\n    if (relativeURLHash) {\r\n      builtURL += relativeURLHash;\r\n    }\r\n    return builtURL;\r\n  },\r\n\r\n  // build an absolute path using the provided basePath\r\n  // adapted from https://developer.mozilla.org/en-US/docs/Web/API/document/cookie#Using_relative_URLs_in_the_path_parameter\r\n  // this does not handle the case where relativePath is \"/\" or \"//\". These cases should be handled outside this.\r\n  buildAbsolutePath: function(basePath, relativePath) {\r\n    var sRelPath = relativePath;\r\n    var nUpLn, sDir = '', sPath = basePath.replace(/[^\\/]*$/, sRelPath.replace(/(\\/|^)(?:\\.?\\/+)+/g, '$1'));\r\n    for (var nEnd, nStart = 0; nEnd = sPath.indexOf('/../', nStart), nEnd > -1; nStart = nEnd + nUpLn) {\r\n      nUpLn = /^\\/(?:\\.\\.\\/)*/.exec(sPath.slice(nEnd))[0].length;\r\n      sDir = (sDir + sPath.substring(nStart, nEnd)).replace(new RegExp('(?:\\\\\\/+[^\\\\\\/]*){0,' + ((nUpLn - 1) / 3) + '}$'), '/');\r\n    }\r\n    return sDir + sPath.substr(nStart);\r\n  }\r\n};\r\n\r\nmodule.exports = URLHelper;\r\n",
    "/**\r\n * XHR based logger\r\n*/\r\n\r\nimport {logger} from '../utils/logger';\r\n\r\nclass XhrLoader {\r\n\r\n  constructor(config) {\r\n    if (config && config.xhrSetup) {\r\n      this.xhrSetup = config.xhrSetup;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.abort();\r\n    this.loader = null;\r\n  }\r\n\r\n  abort() {\r\n    var loader = this.loader,\r\n        timeoutHandle = this.timeoutHandle;\r\n    if (loader && loader.readyState !== 4) {\r\n      this.stats.aborted = true;\r\n      loader.abort();\r\n    }\r\n    if (timeoutHandle) {\r\n      window.clearTimeout(timeoutHandle);\r\n    }\r\n  }\r\n\r\n  load(url, responseType, onSuccess, onError, onTimeout, timeout, maxRetry, retryDelay, onProgress = null, frag = null) {\r\n    this.url = url;\r\n    if (frag && !isNaN(frag.byteRangeStartOffset) && !isNaN(frag.byteRangeEndOffset)) {\r\n        this.byteRange = frag.byteRangeStartOffset + '-' + (frag.byteRangeEndOffset-1);\r\n    }\r\n    this.responseType = responseType;\r\n    this.onSuccess = onSuccess;\r\n    this.onProgress = onProgress;\r\n    this.onTimeout = onTimeout;\r\n    this.onError = onError;\r\n    this.stats = {trequest: performance.now(), retry: 0};\r\n    this.timeout = timeout;\r\n    this.maxRetry = maxRetry;\r\n    this.retryDelay = retryDelay;\r\n    this.timeoutHandle = window.setTimeout(this.loadtimeout.bind(this), timeout);\r\n    this.loadInternal();\r\n  }\r\n\r\n  loadInternal() {\r\n    var xhr;\r\n    \r\n    if (typeof XDomainRequest !== 'undefined') {\r\n       xhr = this.loader = new XDomainRequest();\r\n    } else {\r\n       xhr = this.loader = new XMLHttpRequest();\r\n    }\r\n    \r\n    xhr.onloadend = this.loadend.bind(this);\r\n    xhr.onprogress = this.loadprogress.bind(this);\r\n\r\n    xhr.open('GET', this.url, true);\r\n    if (this.byteRange) {\r\n      xhr.setRequestHeader('Range', 'bytes=' + this.byteRange);\r\n    }\r\n    xhr.responseType = this.responseType;\r\n    this.stats.tfirst = null;\r\n    this.stats.loaded = 0;\r\n    if (this.xhrSetup) {\r\n      this.xhrSetup(xhr, this.url);\r\n    }\r\n    xhr.send();\r\n  }\r\n\r\n  loadend(event) {\r\n    var xhr = event.currentTarget,\r\n        status = xhr.status,\r\n        stats = this.stats;\r\n    // don't proceed if xhr has been aborted\r\n    if (!stats.aborted) {\r\n        // http status between 200 to 299 are all successful\r\n        if (status >= 200 && status < 300)  {\r\n          window.clearTimeout(this.timeoutHandle);\r\n          stats.tload = performance.now();\r\n          this.onSuccess(event, stats);\r\n      } else {\r\n        // error ...\r\n        if (stats.retry < this.maxRetry) {\r\n          logger.warn(`${status} while loading ${this.url}, retrying in ${this.retryDelay}...`);\r\n          this.destroy();\r\n          window.setTimeout(this.loadInternal.bind(this), this.retryDelay);\r\n          // exponential backoff\r\n          this.retryDelay = Math.min(2 * this.retryDelay, 64000);\r\n          stats.retry++;\r\n        } else {\r\n          window.clearTimeout(this.timeoutHandle);\r\n          logger.error(`${status} while loading ${this.url}` );\r\n          this.onError(event);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loadtimeout(event) {\r\n    logger.warn(`timeout while loading ${this.url}` );\r\n    this.onTimeout(event, this.stats);\r\n  }\r\n\r\n  loadprogress(event) {\r\n    var stats = this.stats;\r\n    if (stats.tfirst === null) {\r\n      stats.tfirst = performance.now();\r\n    }\r\n    stats.loaded = event.loaded;\r\n    if (this.onProgress) {\r\n      this.onProgress(event, stats);\r\n    }\r\n  }\r\n}\r\n\r\nexport default XhrLoader;\r\n"
  ]
}